swagger: '2.0'
info:
  description: "This API is for calling all CDP Backend\n\t\t\t\t\t\t\t\t\t\t\tFunctions. The CDP API is a Facade for all other Telematic\n\t\t\t\t\t\t\t\t\t\t\tBackend Components."
  version: 6.1.40.4
  title: CDP API
host: 'int-b2vii.muc:4856'
schemes: [ https ]
basePath: /cdp/rest/api
tags:
  - name: '/me/vehicles/v2 - EMEA, US'
  - name: /me/service/personalimage - EMEA
  - name: '/vehicle/myinfo - EMEA, US'
  - name: '/vehicle/efficiency/v1 - EMEA, US'
  - name: '/me/vehicles/v1 - EMEA, US'
  - name: '/vehicle/navigation - EMEA, US'
  - name: /me/mapping/v3 - EMEA
  - name: /me/mapping/v3 - US
  - name: '/me/service/mapupdate/download/v1 - EMEA, US'
  - name: '/me/service/batteryguard - EMEA, US'
  - name: '/me/service/mapupdate/areas/v1 - EMEA, US'
  - name: '/vehicle/image EMEA, US'
  - name: '/me/service/parking/booking EMEA, US'
  - name: '/vehicle/remoteservices - EMEA, US'
  - name: '/vehicle/servicepartner - EMEA, US'
  - name: '/me/service/feed - EMEA, US'
  - name: '/vehicle/service - EMEA, US'
  - name: '/service/chargingstation EMEA, US'
  - name: '/vehicle/remoteservice - EMEA, US [deprecated as of T3-16]'
  - name: '/service/dealer - EMEA, US'
  - name: /me/mapping/v1 - US
  - name: /me/mapping/v1 - EMEA
  - name: '/store/v1 - EMEA, US'
  - name: /store/v1 - TEST
  - name: '/service/weather - EMEA, US'
  - name: /store/v2 - TEST
  - name: /store/v2 - EMEA
  - name: '/me/service/speechcontrol - EMEA, US'
  - name: '/me/service/vehicleprofile - EMEA, US'
  - name: '/service/fuelprice EMEA, US'
  - name: '/vehicle/loginsetting EMEA, US'
  - name: '/setting/market - EMEA, US'
  - name: '/me/payment/v2 - wallet EMEA, US'
  - name: '/setting/codetable - EMEA, US'
  - name: '/vehicle/remoteservices/chargingprofile EMEA, US'
  - name: '/me/service/parking EMEA, US'
  - name: '/vehicle/specs - EMEA, US'
  - name: /store/v4 - EMEA
  - name: /store/v4 - TEST
  - name: '/vehicle/dynamic - EMEA, US'
  - name: '/me/profile/v2 - EMEA, US'
  - name: '/policy - EMEA, US'
  - name: '/me/service/email/providers EMEA, US'
  - name: '/me/service/send2car - EMEA, US'
  - name: '/me/payment - taxnumber EMEA, US'
  - name: /store/v3 - EMEA
  - name: /store/v3 - TEST
  - name: '/service/rangespider EMEA, US'
  - name: '/me/service/datastore - EMEA, US'
  - name: '/service/traffic - EMEA, US'
  - name: '/me/service/email/template - EMEA, US'
  - name: '/me/service/email/account/v2 - EMEA, US'
  - name: '/vehicle/v1 - EMEA, US [deprecated as of T3-16]'
  - name: '/me/service/remoteservices - EMEA, US'
  - name: '/vehicle/v2 - EMEA, US'
  - name: /me/invoice/v2 - EMEA
  - name: /me/invoice/v2 - US
  - name: /me/invoice/v1 - EMEA
  - name: /me/invoice/v1 - US
  - name: '/thirdparty/parknow - EMEA, US'
  - name: '/me/service/map/urlsigner/v1 - EMEA, US'
  - name: '/me/profile/v1 - EMEA, US - [deprecated as of T3-16]'
  - name: /me/service/tol/v2 - EMEA
  - name: '/vehicle/connection - EMEA, US'
  - name: '/me/payment/v1 - wallet EMEA, US'
paths:
  /me/invoice/v1:
    get:
      tags:
        - /me/invoice/v1 - EMEA
      summary: returns a list of invoices of the past purchases of the customer
      description: 'Business service calls: IPPaymentService.getDocumentList'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/InvoiceDocumentDO'
        '403':
          description: user is not allowed to access
        '404':
          description: documents not found
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /me/invoice/v1/language:
    get:
      tags:
        - /me/invoice/v1 - EMEA
        - /me/invoice/v1 - US
      summary: returns the document language of the customer
      description: 'Business Service calls: IPCustomerService.getAccountByGCID'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/LanguageCodeDO'
        '403':
          description: user is not allowed to access
        '404':
          description: document language not found / not yet set
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/invoice/v1/language/{language}':
    post:
      tags:
        - /me/invoice/v1 - EMEA
        - /me/invoice/v1 - US
      summary: sets the document language of the customer
      description: 'Business Service calls: IPCustomerService.updateDocumentLanguage'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: language
          in: path
          description: language id
          required: true
          type: string
      responses:
        '200':
          description: successful response
        '403':
          description: user is not allowed to access
        '404':
          description: 'document language not valid, or customer does not exist, or customer does not have market set'
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/invoice/v1/{id}':
    get:
      tags:
        - /me/invoice/v1 - EMEA
      summary: 'returns an invoice document, if exists'
      description: 'Business Service calls: IPPaymentService.getDocument'

      produces:
        - application/pdf
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: id
          in: path
          description: id of the invoice
          required: true
          type: string
      responses:
        '200':
          description: successful response
        '403':
          description: user is not allowed to access
        '404':
          description: document not found
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /me/invoice/v2:
    get:
      tags:
        - /me/invoice/v2 - EMEA
      summary: returns a list of invoices of the past purchases of the customer
      description: 'Business service calls: IPPaymentService.getDocumentList'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/InvoiceDocumentV2DO'
        '403':
          description: user is not allowed to access
        '404':
          description: documents not found
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /me/invoice/v2/language:
    get:
      tags:
        - /me/invoice/v2 - EMEA
        - /me/invoice/v2 - US
      summary: returns the document language of the customer
      description: 'Business Service calls: IPCustomerService.getAccountByGCID'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/LanguageCodeDO'
        '403':
          description: user is not allowed to access
        '404':
          description: document language not found / not yet set
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/invoice/v2/language/{language}':
    post:
      tags:
        - /me/invoice/v2 - EMEA
        - /me/invoice/v2 - US
      summary: sets the document language of the customer
      description: 'Business Service calls: IPCustomerService.updateDocumentLanguage'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: language
          in: path
          description: language id
          required: true
          type: string
      responses:
        '200':
          description: successful response
        '403':
          description: user is not allowed to access
        '404':
          description: 'document language not valid, or customer does not exist, or customer does not have market set'
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/invoice/v2/{id}':
    get:
      tags:
        - /me/invoice/v2 - EMEA
      summary: 'returns an invoice document, if exists'
      description: 'Business Service calls: IPPaymentService.getDocument'

      produces:
        - application/pdf
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: id
          in: path
          description: id of the invoice
          required: true
          type: string
      responses:
        '200':
          description: successful response
        '403':
          description: user is not allowed to access
        '404':
          description: document not found
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /me/mapping/v1/status:
    get:
      tags:
        - /me/mapping/v1 - EMEA
        - /me/mapping/v1 - US
      summary: 'Get the vehicle status for all vehicles of the customer: vin, license plate, mapping status.'
      description: 'For EMEA this service also delivers the remote service status, in US the remote service status is not available. For US there are PRIMARY and SECONDARY relationships; PRIMARY relationships may have a secondary relationship; SECONDARY relationships may NOT have another secondary relationship. Delivers error 403 if customer unknown, and 404 if no mapping exists'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: vehicle information could be retrieved
          schema:
            $ref: '#/definitions/VehicleRelationshipsDO'
        '403':
          description: user is not allowed to access
        '404':
          description: mapping status not found
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/mapping/v1/{vin}':
    post:
      tags:
        - /me/mapping/v1 - EMEA
        - /me/mapping/v1 - US
      summary: 'First step (of two steps) to map the vehicle to the customer. '
      description: 'This method also checks, whether user agreed to latest policy. The following error codes are EMEA-specific: BU_CHANGE_NOT_ALLOWED, MAPPING_DISABLED. The following error codes are US-specific: CUSTOMER_DOES_NOT_EXIST, WAIVED, FLEET_VEHICLE, NOT_ALLOWED_TO_CREATE_SECONDARY, BACKEND_SYSTEM_DOWN_NO_USER_ACTION, BACKEND_SYSTEM_DOWN_USER_ACTION, SAVING_LICENSE_PLATE_FAILED, NO_ADDRESS_AVAILABLE'

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: long vin
          required: true
          type: string
        - in: body
          name: body
          description: 'Contains all vehicle meta data necessary for mapping process, subscriberStatus for US only'
          required: true
          schema:
            $ref: '#/definitions/VehicleMappingDataDO'
      responses:
        '200':
          description: 'first step of mapping processed, token sent to customer''s vehicle'
          schema:
            $ref: '#/definitions/MappingInitStatusDO'
        '400':
          description: 'some of the parameters are not correct, licenseplate is limited to 20 characters.'
        '403':
          description: user is not allowed to access
        '404':
          description: vin not found or wrong format
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
    delete:
      tags:
        - /me/mapping/v1 - EMEA
        - /me/mapping/v1 - US
      summary: 'Deletes the mapping between a vin and a customer. '
      description: 'If relationship did not exist, a success-status is returned. The following errors may be returned with status 200: RELATIONSHIP_NOT_EXISTS_FOR_VIN_GCID or ANOTHER_RELATIONSHIP_ORDER_IN_PROGRESS.'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: 'gcid, in US this is either the gcid of the primary user or the gcid of the secondary user'
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: vin
          required: true
          type: string
      responses:
        '200':
          description: relationship is deleted
          schema:
            $ref: '#/definitions/MappingConfirmationStatusDO'
        '400':
          description: some of the parameters are not correct
        '403':
          description: user is not allowed to access
        '404':
          description: 'vin not found or wrong format, token has wrong format'
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/mapping/v1/{vin}/licenceplate':
    post:
      tags:
        - /me/mapping/v1 - US
      summary: This method updates the realtionship with a new license plate.
      description: 'The following status codes may be returned with 200-response: OK, FAILURE.'

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: vin
          required: true
          type: string
        - in: body
          name: body
          description: data to be updated
          required: true
          schema:
            $ref: '#/definitions/UpdateMappingDO'
      responses:
        '200':
          description: successful response
        '400':
          description: parameter(s) in url or payload is not syntactically valid
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/mapping/v1/{vin}/preconditions':
    get:
      tags:
        - /me/mapping/v1 - EMEA
        - /me/mapping/v1 - US
      summary: 'Checks, whether all preconditions for mapping are fulfilled: '
      description: 'long vin known, vehicle of brand BMW, vehicle connectivity status not waived; also returns necessary policyId (AGB_POLICY_MAPPING_BMWI, AGB_POLICY_MAPPING_NEW, AGB_POLICY_MAPPING_OLD). In case of error returns one of:  NOTFOUND (= vehicle does not exist), VEHICLE_NOT_BMW, NOTMYINFO_COMPLIANT, WAIVED, FLEET_VEHICLE, BACKEND_SYSTEM_DOWN_NO_USER_ACTION.The following error codes are US-specific: NOTMYINFO_COMPLIANT, WAIVED, FLEET_VEHICLE, BACKEND_SYSTEM_DOWN_NO_USER_ACTION'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: 'the vin[7 or 17 characters] that is to be validated'
          required: true
          type: string
      responses:
        '200':
          description: 'possibly list of errors, policy Id necessary for mapping'
          schema:
            $ref: '#/definitions/MappingPreconditionsDO'
        '400':
          description: some of the parameters are not correct
        '403':
          description: user is not allowed to access
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/mapping/v1/{vin}/resend':
    post:
      tags:
        - /me/mapping/v1 - EMEA
        - /me/mapping/v1 - US
      summary: 'This method send a new valid token to the specified vehicle. '
      description: 'The following status codes may be returned with 200-response: OK, FAILURE.'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: vin
          required: true
          type: string
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/MappingInitStatusDO'
        '400':
          description: parameter(s) in url is not syntactically valid
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/mapping/v1/{vin}/secondary':
    delete:
      tags:
        - /me/mapping/v1 - US
      summary: 'For US only: Deletes the mapping between a vin and the secondary subscribers of the given customer (gcid). '
      description: 'If relationship did not exist, a success-status is returned The following errors may be returned with status 200: RELATIONSHIP_NOT_EXISTS_FOR_VIN_GCID or ANOTHER_RELATIONSHIP_ORDER_IN_PROGRESS.'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: 'gcid, in US this is the gcid of the primary user'
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: vin
          required: true
          type: string
      responses:
        '200':
          description: relationship is deleted
          schema:
            $ref: '#/definitions/MappingInitStatusDO'
        '400':
          description: some of the parameters are not correct
        '403':
          description: user is not allowed to access
        '404':
          description: 'vin not found or wrong format, token has wrong format'
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/mapping/v1/{vin}/token':
    post:
      tags:
        - /me/mapping/v1 - EMEA
        - /me/mapping/v1 - US
      summary: Second step (of two steps) to map the vehicle to the customer.
      description: 'This method tests, whether the token is correct. If yes, the vehicle is mapped. All error codes are returned with status 200. The following error codes are EMEA-specific: RELATIONSHIP_NOT_EXISTS_FOR_VIN_GCID, ANOTHER_RELATIONSHIP_ORDER_IN_PROGRESS, MAPPING_DISABLED, SECURITY_TOKEN_EXPIRED, SECURITY_TOKEN_INCORRECT_KNOWN_TOKEN_EXPIRED. The following error codes are US-specific: BACKEND_SYSTEM_DOWN_NO_USER_ACTION, BACKEND_SYSTEM_DOWN_USER_ACTION, RELATIONSHIP_CANNOT_BE_CONFIRMED, RELATIONSHIP_CANNOT_BE_CONFIRMED, CUSTOMER_DOES_NOT_EXIST, VEHICLE_DOES_NOT_EXIST. '

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: long vin
          required: true
          type: string
        - in: body
          name: body
          description: mapping token that has been sent to customer's vehicle
          required: true
          schema:
            $ref: '#/definitions/TokenDO'
      responses:
        '200':
          description: 'second step of mapping processed, token will be checked and vin will be confirmed.'
          schema:
            $ref: '#/definitions/MappingConfirmationStatusDO'
        '400':
          description: 'some of the parameters are not correct, tok'
        '403':
          description: user is not allowed to access
        '404':
          description: vin not found.
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /me/mapping/v3/status:
    get:
      tags:
        - /me/mapping/v3 - EMEA
      summary: 'Get the vehicle status for all vehicles of the customer: vin, license plate, mapping status, confirmation type. This endpoint also contains the new confirmation type status for LIGHT-mapped vehicles, which is not applicable for US; therefore use status/v1/ in US'
      description: 'This service also delivers the remote service status.Delivers error 403 if customer unknown, and 404 if no mapping exists'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: vehicle information could be retrieved
          schema:
            $ref: '#/definitions/VehicleRelationshipsV3EMEADO'
        '403':
          description: user is not allowed to access
        '404':
          description: mapping status not found
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/mapping/v3/{vin}':
    post:
      tags:
        - /me/mapping/v3 - EMEA
        - /me/mapping/v3 - US
      summary: 'First step (of two steps) to map the vehicle to the customer.  V3 version also remembers the number of mis-trials (repeatedly not-existing vin given by customer)  and blocks /precondition-method, if maximum number of mistrials reached.'
      description: 'This method also checks, whether user agreed to latest policy. The following error codes are EMEA-specific: BU_CHANGE_NOT_ALLOWED, MAPPING_DISABLED. The following error codes are US-specific: CUSTOMER_DOES_NOT_EXIST, WAIVED, FLEET_VEHICLE, NOT_ALLOWED_TO_CREATE_SECONDARY, BACKEND_SYSTEM_DOWN_NO_USER_ACTION, BACKEND_SYSTEM_DOWN_USER_ACTION, SAVING_LICENSE_PLATE_FAILED, NO_ADDRESS_AVAILABLE'

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: long vin
          required: true
          type: string
        - in: body
          name: body
          description: 'Contains all vehicle meta data necessary for mapping process, subscriberStatus for US only'
          required: true
          schema:
            $ref: '#/definitions/VehicleMappingDataDO'
      responses:
        '200':
          description: 'first step of mapping processed, token sent to customer''s vehicle'
          schema:
            $ref: '#/definitions/MappingInitStatusV3DO'
        '400':
          description: 'some of the parameters are not correct, licenseplate is limited to 20 characters.'
        '403':
          description: user is not allowed to access
        '404':
          description: vin not found or wrong format
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
    delete:
      tags:
        - /me/mapping/v3 - EMEA
        - /me/mapping/v3 - US
      summary: Deletes the mapping between a vin and a customer. No changes to v2-version.
      description: 'If relationship did not exist, a success-status is returned. The following errors may be returned with status 200: RELATIONSHIP_NOT_EXISTS_FOR_VIN_GCID or ANOTHER_RELATIONSHIP_ORDER_IN_PROGRESS.'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: 'gcid, in US this is either the gcid of the primary user or the gcid of the secondary user'
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: vin
          required: true
          type: string
      responses:
        '200':
          description: relationship is deleted
          schema:
            $ref: '#/definitions/MappingConfirmationStatusDO'
        '400':
          description: some of the parameters are not correct
        '403':
          description: user is not allowed to access
        '404':
          description: 'vin not found or wrong format, token has wrong format'
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/mapping/v3/{vin}/licenceplate':
    post:
      tags:
        - /me/mapping/v3 - US
      summary: This method updates the realtionship with a new license plate. No changes to v2-version.
      description: 'The following status codes may be returned with 200-response: OK, FAILURE.'

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: vin
          required: true
          type: string
        - in: body
          name: body
          description: data to be updated
          required: true
          schema:
            $ref: '#/definitions/UpdateMappingDO'
      responses:
        '200':
          description: successful response
        '400':
          description: parameter(s) in url or payload is not syntactically valid
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/mapping/v3/{vin}/light':
    post:
      tags:
        - /me/mapping/v3 - EMEA
      summary: Create a light mapping between customer (gcid) and vin. No changes to v2-version. For EMEA only.
      description: 'It is only possible to call this method, if shopping basket validation returned LIGHT_MAPPING_POSSIBLE'

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: long vin
          required: true
          type: string
      responses:
        '200':
          description: light mapping successful
          schema:
            $ref: '#/definitions/MappingInitStatusDO'
        '400':
          description: some of the parameters are not correct.
        '403':
          description: user is not allowed to access
        '404':
          description: vin not found or wrong format
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/mapping/v3/{vin}/preconditions':
    get:
      tags:
        - /me/mapping/v3 - EMEA
        - /me/mapping/v3 - US
      summary: 'Checks, whether all preconditions for mapping are fulfilled. V3 version also counts the number of times the user tries to call this function with a non-existing vin.  After some amount of mistrials (currently: 5) this method is blocked for a specified amount of time (5 minutes). '
      description: 'long vin known, vehicle of brand BMW, vehicle connectivity status not waived; also returns necessary policyId (AGB_POLICY_MAPPING_BMWI, AGB_POLICY_MAPPING_NEW, AGB_POLICY_MAPPING_OLD). In case of error returns one of:  NOTFOUND (= vehicle does not exist), VEHICLE_NOT_BMW, NOTMYINFO_COMPLIANT, WAIVED, FLEET_VEHICLE, BACKEND_SYSTEM_DOWN_NO_USER_ACTION.The following error codes are US-specific: NOTMYINFO_COMPLIANT, WAIVED, FLEET_VEHICLE, BACKEND_SYSTEM_DOWN_NO_USER_ACTION'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: 'the vin[7 or 17 characters] that is to be validated'
          required: true
          type: string
      responses:
        '200':
          description: 'possibly list of errors, policy Id necessary for mapping'
          schema:
            $ref: '#/definitions/MappingPreconditionsV3DO'
        '400':
          description: some of the parameters are not correct
        '403':
          description: user is not allowed to access
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/mapping/v3/{vin}/resend':
    post:
      tags:
        - /me/mapping/v3 - EMEA
        - /me/mapping/v3 - US
      summary: This method send a new valid token to the specified vehicle. No changes to v2-version.
      description: 'The following status codes may be returned with 200-response: OK, FAILURE.'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: vin
          required: true
          type: string
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/MappingInitStatusDO'
        '400':
          description: parameter(s) in url is not syntactically valid
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/mapping/v3/{vin}/secondary':
    delete:
      tags:
        - /me/mapping/v3 - US
      summary: 'For US only: Deletes the mapping between a vin and the secondary subscribers of the given customer (gcid). No changes to v2-version. For US only.'
      description: 'If relationship did not exist, a success-status is returned The following errors may be returned with status 200: RELATIONSHIP_NOT_EXISTS_FOR_VIN_GCID or ANOTHER_RELATIONSHIP_ORDER_IN_PROGRESS.'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: 'gcid, in US this is the gcid of the primary user'
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: vin
          required: true
          type: string
      responses:
        '200':
          description: relationship is deleted
          schema:
            $ref: '#/definitions/MappingInitStatusDO'
        '400':
          description: some of the parameters are not correct
        '403':
          description: user is not allowed to access
        '404':
          description: 'vin not found or wrong format, token has wrong format'
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/mapping/v3/{vin}/token':
    post:
      tags:
        - /me/mapping/v3 - EMEA
        - /me/mapping/v3 - US
      summary: Second step (of two steps) to map the vehicle to the customer. No changes to v2-version.
      description: 'This method tests, whether the token is correct. If yes, the vehicle is mapped. All error codes are returned with status 200. The following error codes are EMEA-specific: RELATIONSHIP_NOT_EXISTS_FOR_VIN_GCID, ANOTHER_RELATIONSHIP_ORDER_IN_PROGRESS, MAPPING_DISABLED, SECURITY_TOKEN_EXPIRED, SECURITY_TOKEN_INCORRECT_KNOWN_TOKEN_EXPIRED. The following error codes are US-specific: BACKEND_SYSTEM_DOWN_NO_USER_ACTION, BACKEND_SYSTEM_DOWN_USER_ACTION, RELATIONSHIP_CANNOT_BE_CONFIRMED, RELATIONSHIP_CANNOT_BE_CONFIRMED, CUSTOMER_DOES_NOT_EXIST, VEHICLE_DOES_NOT_EXIST. '

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: long vin
          required: true
          type: string
        - in: body
          name: body
          description: mapping token that has been sent to customer's vehicle
          required: true
          schema:
            $ref: '#/definitions/TokenDO'
      responses:
        '200':
          description: 'second step of mapping processed, token will be checked and vin will be confirmed.'
          schema:
            $ref: '#/definitions/MappingConfirmationStatusDO'
        '400':
          description: 'some of the parameters are not correct, tok'
        '403':
          description: user is not allowed to access
        '404':
          description: vin not found.
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /me/payment/v1/taxnumber:
    get:
      tags:
        - '/me/payment - taxnumber EMEA, US'
      summary: returns taxnumber/citizennumber or other similar number.
      description: ''

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/TaxnumberDO'
        '404':
          description: No taxnumber found
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
    post:
      tags:
        - '/me/payment - taxnumber EMEA, US'
      summary: stores taxnumber/citizennumber or other similar number
      description: 'gcid must be known to backend system (BIP), i. e. customer must have a profile.'

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - in: body
          name: body
          description: number
          required: true
          schema:
            $ref: '#/definitions/TaxnumberDO'
      responses:
        '200':
          description: successful response
        '400':
          description: taxnumber format wrong or taxnumber did not pass additional verfication check
        '404':
          description: no taxnumber defined for market of given customer
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
    delete:
      tags:
        - '/me/payment - taxnumber EMEA, US'
      summary: deletes taxnumber/citizennumber or other similar number.
      description: 'This method cannot be executed, if the taxnumber is mandatory for the market of the customer. '

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: successful response
        '400':
          description: 'Will be thrown, if deletion is not allowed.'
          schema:
            $ref: '#/definitions/ErrorsDO'
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /me/payment/v1/taxnumber/validation:
    get:
      tags:
        - '/me/payment - taxnumber EMEA, US'
      summary: 'returns status, if customer needs a taxnumber/citizennumber or other similar number'
      description: ''

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: 'successful response, regardless of whether taxnumber available or not'
          schema:
            $ref: '#/definitions/TaxnumberInformationDO'
        '404':
          description: no taxnumber defined for market of given customer
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/payment/v1/taxnumber/validation/{market}/{language}':
    get:
      tags:
        - '/me/payment - taxnumber EMEA, US'
      summary: 'returns status, if market needs a taxnumber/citizennumber or other similar number'
      description: ''

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: market
          in: path
          description: 'market / country (ISO country code): only certain markets are allowed; must be valid market; must be used together with language'
          required: true
          type: string
        - name: language
          in: path
          description: 'language (ISO language code) : only certain languages are allowed; must be valid language; must be used together with market'
          required: true
          type: string
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/ValidationAttributesAndConditionsDO'
        '404':
          description: no taxnumber defined for given market
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /me/payment/v1/wallet:
    get:
      tags:
        - '/me/payment/v1 - wallet EMEA, US'
      summary: returns the information of the customers wallet
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/PaymentInformationDO'
        '403':
          description: user is not allowed to access
        '404':
          description: no wallet found for user
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
    delete:
      tags:
        - '/me/payment/v1 - wallet EMEA, US'
      summary: Deletes the payment profile from BIP.
      description: ''

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: successful response
        '404':
          description: no payment profile exists for given gcid
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /me/payment/v1/wallet/session:
    post:
      tags:
        - '/me/payment/v1 - wallet EMEA, US'
      summary: returns a URL for opening the payment iFrame for adding or updating a payment method. All the given URLs must be absolute.
      description: ''

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - in: body
          name: body
          description: 'attributes for a wallet session, cardId == instrumentId of PaymentInformationDO from get-wallet-method'
          required: true
          schema:
            $ref: '#/definitions/WalletSessionDO'
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/UrlDO'
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/payment/v1/wallet/session/{callbackType}':
    post:
      tags:
        - '/me/payment/v1 - wallet EMEA, US'
      summary: synchronize the BPO payment data to BIP
      description: ''

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: callbackType
          in: path
          description: callback type
          required: true
          type: string
          enum:
            - SUCCESS
            - FAILURE
            - CANCEL
      responses:
        '200':
          description: successful response
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /me/payment/v2/wallet:
    get:
      tags:
        - '/me/payment/v2 - wallet EMEA, US'
      summary: returns the payment profile from BIP. No changes to v1-version.
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/PaymentInformationDO'
        '403':
          description: user is not allowed to access
        '404':
          description: no payment profile found for user
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
    delete:
      tags:
        - '/me/payment/v2 - wallet EMEA, US'
      summary: 'Deletes the payment profile from BIP. New to v2: error code: PaymentStatusEnumDO.ORDER_STILL_PENDING'
      description: Deletes the payment profile from BIP and returns a PaymentStatusDO at successful response.

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/PaymentStatusDO'
        '404':
          description: no payment profile exists for given gcid
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /me/payment/v2/wallet/session:
    post:
      tags:
        - '/me/payment/v2 - wallet EMEA, US'
      summary: returns a URL for opening the payment iFrame for adding or updating a payment method. All the given URLs must be absolute. No changes to v1-version.
      description: ''

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - in: body
          name: body
          description: 'attributes for a wallet session, cardId == instrumentId of PaymentInformationDO from get-wallet-method'
          required: true
          schema:
            $ref: '#/definitions/WalletSessionDO'
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/UrlDO'
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/payment/v2/wallet/session/{callbackType}':
    post:
      tags:
        - '/me/payment/v2 - wallet EMEA, US'
      summary: synchronize the BPO payment data to BIP. No changes to v1-version.
      description: ''

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: callbackType
          in: path
          description: callback type
          required: true
          type: string
          enum:
            - SUCCESS
            - FAILURE
            - CANCEL
      responses:
        '200':
          description: successful response
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /me/profile/v1:
    get:
      tags:
        - '/me/profile/v1 - EMEA, US - [deprecated as of T3-16]'
      summary: 'Returns the data of the session customer, customer and (private) address'
      description: 'Hub-specific, Business Service calls: in EMEA IPCustomerService.getCustomer (BIP),  in CN IPCustomerCNService.getCustomer (CASA), in US IPCustomerUSService.getCustomer (TDE)'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: 'all known customer attributes and private address data, if exists, are returned'
          schema:
            $ref: '#/definitions/CompleteCustomerDO'
        '403':
          description: user is not allowed to access
        '404':
          description: user not found
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
    post:
      tags:
        - '/me/profile/v1 - EMEA, US - [deprecated as of T3-16]'
      summary: 'Returns the updated customer and optionally private address data. For Japan the following name attributes should be present: firstName, alternateFirstName, lastName, alternateLastname, title (==gender). For other markets the following name attributes should be present: firstName, middleName, lastName, title (==gender). For Italy the following birth attributes must be present additionally: birthDate, birthCountry, birthProvince, birthCity. Address attributes are country specific, also. For US there might be a list of address suggestions returned in case the given address did not match any existing address. If an address suggestion is returned, the address object contains the address that is suggested. In this case the address is not saved!'
      description: 'Hub-specific, Business Service calls: in EMEA IPCustomerService.createOrUpdateCustomer (BIP),  in CN not available, in US IPCustomerUSService.createOrUpdateCustomer (TDE)</br>The following status codes could be in the response:</br>OK for success (HTTP Status Code 200)</br>CUSTOMER_NOT_VALID if the customer object is empty or not valid (HTTP Status Code 400)</br>ADDRESS_NOT_VALID if the customer address is empty or not valid (HTTP Status Code 400)</br>USER_ALREADY_EXISTS_WITH_ANOTHER_GCID (only for US) if a user with the same data and other gcid already exists (HTTP Status Code 400)'

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - in: body
          name: body
          description: 'Customer object containing ALL attributes for customer and optionally private address, (also attributes that do not change!). Account object not used here'
          required: true
          schema:
            $ref: '#/definitions/CompleteCustomerDO'
      responses:
        '200':
          description: all known customer attributes are returned
          schema:
            $ref: '#/definitions/CompleteCustomerWithAddressSuggestionsDO'
        '400':
          description: 'some of the parameters are not correct; if market - language combination invalid; if login email not in GCDM and not given in customer object; if returned in US-Hub, an address suggestions might be returned in place of the address (beware: address suggestion does contain address values only), it does not return values like the phone number since phone number cannot be validated.'
          schema:
            $ref: '#/definitions/CompleteCustomerWithAddressSuggestionsDO'
        '403':
          description: user is not allowed to access
        '404':
          description: User not found
        '500':
          description: An internal error or exception occurred
        '503':
          description: Provider not reachable
  /me/profile/v1/validation:
    get:
      tags:
        - '/me/profile/v1 - EMEA, US - [deprecated as of T3-16]'
      summary: 'Returns a list of mandatory attributes that are missing for the given customer. Precondition: Customer (gcid) exists in IDS. If locale given although customer already exists, throw 400. If no locale given although customer does not exist, throw 404.'
      description: 'Hub-specific, Business Service call: in EMEA IPCustomerService.checkCustomer. Market and language not necessary, if customer already exists in BIP; otherwise both country and language are needed.'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: market
          in: query
          description: 'market / country (ISO country code): only certain markets are allowed; must be valid market; must be used together with language; necessary, if customer does not exist'
          required: false
          type: string
        - name: language
          in: query
          description: 'language (ISO language code) : only certain languages are allowed; must be valid language; must be used together with market; necessary, if customer does not exist'
          required: false
          type: string
        - name: validationType
          in: query
          description: 'type: if ''MAPPING'' or empty validate customer only, if ''STORE'' also validate address. default is ''MAPPING'''
          required: false
          type: string
          enum:
            - MAPPING
            - STORE
      responses:
        '200':
          description: 'returns, which mandatory attributes need be set to create a customer not set for the customer'
          schema:
            $ref: '#/definitions/CustomerInformationV1DO'
        '400':
          description: 'some of the parameters are not correct; if market - language combination invalid; if market and language given, although customer already exists'
        '403':
          description: user is not allowed to access
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /me/profile/v2:
    get:
      tags:
        - '/me/profile/v2 - EMEA, US'
      summary: 'Returns the data of the session customer, customer and private address. No changes to v1-version.'
      description: 'Hub-specific, Business Service calls: in EMEA IPCustomerService.getCustomer (BIP),  in CN IPCustomerCNService.getCustomer (CASA), in US IPCustomerUSService.getCustomer (TDE)'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: 'all known customer attributes and private address data, if exists, are returned'
          schema:
            $ref: '#/definitions/CompleteCustomerDO'
        '403':
          description: user is not allowed to access
        '404':
          description: user not found
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: 'A business exception occured, e. g. provider not reachable'
          schema:
            $ref: '#/definitions/ErrorsDO'
    post:
      tags:
        - '/me/profile/v2 - EMEA, US'
      summary: Returns the updated customer and optionally customer address data. No changes to v1-version.
      description: 'If accountType=UNDEFINED is given, it will be ignored. For Japan the following name attributes should be present: firstName, alternateFirstName, lastName, alternateLastname, title (==gender). For other markets the following name attributes should be present: firstName, middleName, lastName, title (==gender). For Italy the following birth attributes must be present additionally: birthDate, birthCountry, birthProvince, birthCity. Address attributes are country specific, also. For US there might be a list of address suggestions returned in case the given address did not match any existing address. If an address suggestion is returned, the address object contains the address that is suggested. In this case the address is not saved!</br>The following status codes could be in the response:</br>OK for success (HTTP Status Code 200)</br>CUSTOMER_NOT_VALID if the customer object is empty or not valid (HTTP Status Code 400)</br>ADDRESS_NOT_VALID if the customer address is empty or not valid (HTTP Status Code 400)</br>USER_ALREADY_EXISTS_WITH_ANOTHER_GCID (only for US) if a user with the same data and other gcid already exists (HTTP Status Code 400)'

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - in: body
          name: body
          description: 'Customer object containing ALL attributes for customer and optionally private customer address, (also attributes that do not change!). Default for accountType : UNKNOWN. Account object not used here'
          required: true
          schema:
            $ref: '#/definitions/CompleteCustomerDO'
      responses:
        '200':
          description: all known customer attributes are returned
          schema:
            $ref: '#/definitions/CompleteCustomerWithAddressSuggestionsDO'
        '400':
          description: 'some of the parameters are not correct; if market - language combination invalid; if login email not in GCDM and not given in customer object; if input validation failed (using /validation), also 400 is returned; if returned in US-Hub, an address suggestions might be returned in place of the address (beware: address suggestion does contain address values only), it does not return values like the phone number since phone number cannot be validated.'
          schema:
            $ref: '#/definitions/CompleteCustomerWithAddressSuggestionsDO'
        '403':
          description: user is not allowed to access
        '404':
          description: User not found
        '500':
          description: An internal error occurred
        '503':
          description: 'A business exception occured, e. g. provider not reachable'
  /me/profile/v2/address/billing:
    get:
      tags:
        - '/me/profile/v2 - EMEA, US'
      summary: Returns the billing address data for the given address type of the session customer
      description: 'Hub-specific, Business Service calls: in EMEA IPCustomerService.getAddress (BIP), for other hubs currently not available'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: 'all known address attributes for the given address type, if exists, are returned'
          schema:
            $ref: '#/definitions/ProfileAddressDO'
        '403':
          description: user is not allowed to access
        '404':
          description: User not found
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: 'A business exception occured, e. g. provider not reachable'
          schema:
            $ref: '#/definitions/ErrorsDO'
    post:
      tags:
        - '/me/profile/v2 - EMEA, US'
      summary: 'Returns the updated billing address. '
      description: 'Hub-specific, Business Service calls: in EMEA IPCustomerService.createOrUpdateAddress (BIP),  in CN not available, in US IPCustomerUSService.createOrUpdateCustomer (TDE)'

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - in: body
          name: body
          description: the address object
          required: true
          schema:
            $ref: '#/definitions/ProfileAddressDO'
      responses:
        '200':
          description: all known customer attributes are returned
          schema:
            $ref: '#/definitions/ProfileAddressDO'
        '400':
          description: 'at least one of the parameters is wrong, validation of input failed'
        '403':
          description: user is not allowed to access
        '404':
          description: User not found
        '500':
          description: An internal error occurred
        '503':
          description: 'A business exception occured, e. g. provider not reachable'
  /me/profile/v2/address/billing/validation:
    get:
      tags:
        - '/me/profile/v2 - EMEA, US'
      summary: Returns a list of mandatory and optional attributes that are needed to create or update an address for the given user.
      description: 'Hub-specific, Business Service call: in EMEA IPCustomerService.getMandatoryAttributesAddress'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: 'returns, which mandatory attributes need to be set to create an address'
          schema:
            $ref: '#/definitions/AddressInformationDO'
        '400':
          description: some of the parameters are not correct; if market - language combination invalid; no address defined for market of customer
        '403':
          description: user is not allowed to access
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: 'A business exception occured, e. g. provider not reachable'
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/profile/v2/address/billing/validation/{market}/{language}':
    get:
      tags:
        - '/me/profile/v2 - EMEA, US'
      summary: Returns a list of mandatory attributes that are needed to create an address for the given market
      description: 'Hub-specific, Business Service call: in EMEA IPCustomerService.getMandatoryAttributesAddress'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: market
          in: path
          description: 'market / country (ISO country code): only certain markets are allowed'
          required: true
          type: string
        - name: language
          in: path
          description: 'language (ISO language code) : only certain languages are allowed '
          required: true
          type: string
      responses:
        '200':
          description: 'returns, which mandatory attributes need to be set to create an address'
          schema:
            $ref: '#/definitions/ValidationAttributesAndConditionsDO'
        '400':
          description: some of the parameters are not correct; if market - language combination invalid
        '403':
          description: user is not allowed to access
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: 'A business exception occured, e. g. provider not reachable'
          schema:
            $ref: '#/definitions/ErrorsDO'
  /me/profile/v2/address/delivery:
    get:
      tags:
        - '/me/profile/v2 - EMEA, US'
      summary: Returns the delivery address data for the given address type of the session customer
      description: 'Hub-specific, Business Service calls: in EMEA IPCustomerService.getAddress (BIP), for other hubs currently not available'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: 'all known address attributes for the given address type, if exists, are returned'
          schema:
            $ref: '#/definitions/ProfileAddressDO'
        '403':
          description: user is not allowed to access
        '404':
          description: User not found
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: 'A business exception occured, e. g. provider not reachable'
          schema:
            $ref: '#/definitions/ErrorsDO'
    post:
      tags:
        - '/me/profile/v2 - EMEA, US'
      summary: 'Returns the updated delivery address. '
      description: 'Hub-specific, Business Service calls: in EMEA IPCustomerService.createOrUpdateAddress (BIP),  in CN not available, in US IPCustomerUSService.createOrUpdateCustomer (TDE)'

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - in: body
          name: body
          description: the address object
          required: true
          schema:
            $ref: '#/definitions/ProfileAddressDO'
      responses:
        '200':
          description: all known customer attributes are returned
          schema:
            $ref: '#/definitions/ProfileAddressDO'
        '400':
          description: 'at least one of the parameters is wrong, validation of input failed, or market does not have a delivery address'
        '403':
          description: user is not allowed to access
        '404':
          description: User not found
        '500':
          description: An internal error occurred
        '503':
          description: 'A business exception occured, e. g. provider not reachable'
  /me/profile/v2/address/delivery/validation:
    get:
      tags:
        - '/me/profile/v2 - EMEA, US'
      summary: Returns a list of mandatory attributes that are needed to create an address for the given user
      description: 'Hub-specific, Business Service call: in EMEA IPCustomerService.getMandatoryAttributesAddress'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: 'returns, which mandatory attributes need to be set to create an address'
          schema:
            $ref: '#/definitions/AddressInformationDO'
        '400':
          description: some of the parameters are not correct; if market - language combination invalid; no address defined for market of customer
        '403':
          description: user is not allowed to access
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: 'A business exception occured, e. g. provider not reachable'
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/profile/v2/address/delivery/validation/{market}/{language}':
    get:
      tags:
        - '/me/profile/v2 - EMEA, US'
      summary: Returns a list of mandatory attributes that are needed to create an address for the given market
      description: 'Hub-specific, Business Service call: in EMEA IPCustomerService.getMandatoryAttributesAddress'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: market
          in: path
          description: 'market / country (ISO country code): only certain markets are allowed'
          required: true
          type: string
        - name: language
          in: path
          description: 'language (ISO language code) : only certain languages are allowed '
          required: true
          type: string
      responses:
        '200':
          description: 'returns, which mandatory attributes need to be set to create an address'
          schema:
            $ref: '#/definitions/AddressInformationDO'
        '400':
          description: some of the parameters are not correct; if market - language combination invalid
        '403':
          description: user is not allowed to access
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: 'A business exception occured, e. g. provider not reachable'
          schema:
            $ref: '#/definitions/ErrorsDO'
  /me/profile/v2/basic:
    get:
      tags:
        - '/me/profile/v2 - EMEA, US'
      summary: Returns the basic data of the customer.
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: 'all known customer attributes, if exists, are returned'
          schema:
            $ref: '#/definitions/CustomerBasicDO'
        '403':
          description: user is not allowed to access
        '404':
          description: user not found
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: 'A business exception occured, e. g. provider not reachable'
          schema:
            $ref: '#/definitions/ErrorsDO'
  /me/profile/v2/light:
    get:
      tags:
        - '/me/profile/v2 - EMEA, US'
      summary: Returns basic data of the customer from IDS.
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: 'all known customer attributes, if exists, are returned'
          schema:
            $ref: '#/definitions/CustomerLightDO'
        '403':
          description: user is not allowed to access
        '404':
          description: user not found
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: 'A business exception occured, e. g. provider not reachable'
          schema:
            $ref: '#/definitions/ErrorsDO'
  /me/profile/v2/validation:
    get:
      tags:
        - '/me/profile/v2 - EMEA, US'
      summary: Returns a list of mandatory and optional attributes that are missing for the given customer. Completely revised with respect to v1-version of validation.
      description: 'Precondition: Customer (gcid) exists in IDS. If locale given although customer already exists, throw 400. If no locale given although customer does not exist, throw 404.'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: market
          in: query
          description: 'market / country (ISO country code): only certain markets are allowed; must be valid market; must be used together with language; necessary, if customer does not exist; if customer does exist, market must not be given (customer market used for validation)'
          required: false
          type: string
        - name: language
          in: query
          description: 'language (ISO language code) : only certain languages are allowed; must be valid language; must be used together with market; necessary, if customer does not exist; if customer does not exist, language code must not be given (customer language used for validation)'
          required: false
          type: string
        - name: validationType
          in: query
          description: 'type: if ''MAPPING'' or empty validate customer only, if ''STORE'' also validate address. default is ''MAPPING'''
          required: false
          type: string
          enum:
            - MAPPING
            - STORE
      responses:
        '200':
          description: 'returns, which mandatory attributes need be set to create a customer, that have not yet been set for the customer. In addition all optional attributes that are not yet set to the customer are returned.'
          schema:
            $ref: '#/definitions/CustomerInformationDO'
        '400':
          description: 'some of the parameters are not correct; if market - language combination invalid; if market and language given, although customer already exists; STORE-validation selected, but market does not have any store'
        '403':
          description: user is not allowed to access
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: 'A business exception occured, e. g. provider not reachable'
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/profile/v2/validation/{market}/{language}':
    get:
      tags:
        - '/me/profile/v2 - EMEA, US'
      summary: Returns a list of mandatory and optional attributes for given market (independent of user)
      description: 'Hub-specific, Business Service call: in EMEA IPCustomerService.checkCustomer.'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: market
          in: path
          description: 'market / country (ISO country code): only certain markets are allowed; must be valid market; must be used together with language;'
          required: true
          type: string
        - name: language
          in: path
          description: 'language (ISO language code) : only certain languages are allowed; must be valid language; must be used together with market;'
          required: true
          type: string
        - name: validationType
          in: query
          description: 'type: if ''MAPPING'' or empty validate customer only, if ''STORE'' also validate address. default is ''MAPPING'''
          required: true
          type: string
          enum:
            - MAPPING
            - STORE
      responses:
        '200':
          description: 'returns, which mandatory attributes need be set to create a customer not set for the customer. Note: in EMEA only the privatePhoneNumber is linked to the communicationChannel'
          schema:
            $ref: '#/definitions/ValidationAttributesAndConditionsDO'
        '400':
          description: 'some of the parameters are not correct; if market - language combination invalid; if market and language given, although customer already exists'
        '403':
          description: user is not allowed to access
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: 'A business exception occured, e. g. provider not reachable'
          schema:
            $ref: '#/definitions/ErrorsDO'
  /me/service/batteryguard/v1:
    get:
      tags:
        - '/me/service/batteryguard - EMEA, US'
      summary: Returns battery guard status of all vehicles related to the customer
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/BatteryGuardStatusDO'
        '403':
          description: user is not allowed to access
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
    post:
      tags:
        - '/me/service/batteryguard - EMEA, US'
      summary: Updates the battery guard status of all given vehicles of the customer.
      description: 'If the status could be changed, the vehicle will be in the result list.'

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - in: body
          name: body
          description: the new status for all given vehicles
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/BatteryGuardStatusDO'
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/BatteryGuardStatusDO'
        '400':
          description: parameter(s) in url is not syntactically valid
        '403':
          description: user is not allowed to access
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /me/service/datastore/v1:
    post:
      tags:
        - '/me/service/datastore - EMEA, US'
      summary: Sets the value for a specific key
      description: 'The key-value-pair is associated with the userId from the header. If no key-value pair already exists for the given user, a new key-value pair will be created. Calls UserProfileService.setValueForKey'

      consumes:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - in: body
          name: body
          description: 'Key[a UUID] and value [maximal 1 million characters], key will be transformed to upper case'
          required: true
          schema:
            $ref: '#/definitions/KeyValueDO'
      responses:
        '200':
          description: new value for key saved in key-value-store
        '400':
          description: One of the required parameters was empty or incorrect
        '403':
          description: user is not allowed to access
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/service/datastore/v1/{key}':
    get:
      tags:
        - '/me/service/datastore - EMEA, US'
      summary: Returns the value for a specific key (key must be a UUID format)
      description: The key-value-pair is associated with the userId from the header. Calls Business Service UserProfileService.getValueForKey.

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: key
          in: path
          description: 'the key[a UUID] for which the value is to be returned, key will be transformed to upper case'
          required: true
          type: string
      responses:
        '200':
          description: key-value for user returned
          schema:
            $ref: '#/definitions/KeyValueDO'
        '400':
          description: One of the required parameters was empty or incorrect
        '403':
          description: user is not allowed to access
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
    delete:
      tags:
        - '/me/service/datastore - EMEA, US'
      summary: Deletes the value for the given key
      description: The key-value pair associated with the user id from the header is deleted. Calls UserProfileService.removeKeyValue

      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: key
          in: path
          description: 'key[a UUID] for which value is to be deleted, key will be transformed to upper case'
          required: true
          type: string
      responses:
        '200':
          description: Deletion successful.
        '400':
          description: One of the required parameters was empty or incorrect
        '403':
          description: user is not allowed to access
        '500':
          description: An internal error occurred
        '503':
          description: A business exception occured
  /me/service/email/account/v2:
    get:
      tags:
        - '/me/service/email/account/v2 - EMEA, US'
      summary: returns all email accounts configured by the customer. No changes to v1-version.
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/EmailAccountDO'
        '400':
          description: One of the required parameters was empty or incorrect
        '403':
          description: user is not allowed to access
        '404':
          description: email accounts not founds for given user
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
    post:
      tags:
        - '/me/service/email/account/v2 - EMEA, US'
      summary: 'creates a new email account (the maximum number of accounts that can be saved for a user is 10).New to v2-version: dedicated CreateEmailErrorEnums for validation errors (return code 400).'
      description: ''

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - in: body
          name: body
          description: account
          required: true
          schema:
            $ref: '#/definitions/EmailAccountDO'
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/EmailAccountDO'
        '400':
          description: 'One of the required parameters was empty or incorrect, the maximum number of allowed entries (10) is reached, account already exists or signature is limited to 512 characters.'
          schema:
            $ref: '#/definitions/CreateEmailErrorDO'
        '403':
          description: user is not allowed to access
        '404':
          description: email account not created
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/service/email/account/v2/validation/{type}':
    post:
      tags:
        - '/me/service/email/account/v2 - EMEA, US'
      summary: 'validate Inbox setting of an existing emailAccountNew to v2-version: new validation status, if error occurs during validation'
      description: ''

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: type
          in: path
          description: id of the email account
          required: true
          type: string
          enum:
            - INBOX
            - OUTBOX
            - BOTH
        - in: body
          name: body
          description: account
          required: true
          schema:
            $ref: '#/definitions/EmailAccountDO'
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/EmailValidationStatusV2DO'
        '400':
          description: 'One of the required parameters was empty or incorrect, signature is limited to 512 characters.'
        '403':
          description: user is not allowed to access
        '404':
          description: Validation failure
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/service/email/account/v2/{id}':
    post:
      tags:
        - '/me/service/email/account/v2 - EMEA, US'
      summary: 'updates the specified email account. New to v2-version: dedicated CreateEmailErrorEnums for validation errors (return code 400)'
      description: ''

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: id
          in: path
          description: id of the email account
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: account
          required: true
          schema:
            $ref: '#/definitions/EmailAccountDO'
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/EmailAccountDO'
        '400':
          description: 'One of the required parameters was empty or incorrect, the maximum number of allowed entries (10) is reached, account already exists or signature is limited to 512 characters.'
          schema:
            $ref: '#/definitions/CreateEmailErrorDO'
        '403':
          description: user is not allowed to access
        '404':
          description: unable to update email account with accountId
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
    delete:
      tags:
        - '/me/service/email/account/v2 - EMEA, US'
      summary: delete the specified email account from the list of the email accounts. No changes to v1-version.
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: id
          in: path
          description: id of the email account
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful response
        '400':
          description: One of the required parameters was empty or incorrect
        '403':
          description: user is not allowed to access
        '404':
          description: unable to delete email account with accountId
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /me/service/email/providers/v1:
    get:
      tags:
        - '/me/service/email/providers EMEA, US'
      summary: returns all providers for market of the given user.
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/EmailProviderDO'
        '400':
          description: One of the required parameters was empty or incorrect
        '403':
          description: user is not allowed to access
        '404':
          description: email accounts not founds for given user
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /me/service/email/template/v1:
    get:
      tags:
        - '/me/service/email/template - EMEA, US'
      summary: returns all email templates configured by the customer
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/EmailTemplateDO'
        '400':
          description: One of the required parameters was empty or incorrect
        '403':
          description: user is not allowed to access
        '404':
          description: email templates not founds for given user
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
    post:
      tags:
        - '/me/service/email/template - EMEA, US'
      summary: creates a new email template (the maximum number of templates that can be saved for a user is 20).
      description: ''

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - in: body
          name: body
          description: template
          required: true
          schema:
            $ref: '#/definitions/EmailTemplateDO'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/EmailTemplateDO'
        '400':
          description: 'One of the required parameters was empty or incorrect, or the maximum number of allowed entries (20) is reached. name is limited to 256 characters and content is limited to 512 characters.'
        '403':
          description: user is not allowed to access
        '404':
          description: email template not created
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/service/email/template/v1/{id}':
    post:
      tags:
        - '/me/service/email/template - EMEA, US'
      summary: updates the specified email template
      description: ''

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: id
          in: path
          description: id of the email template
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/EmailTemplateDO'
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/EmailTemplateDO'
        '400':
          description: One of the required parameters was empty or incorrect
        '403':
          description: user is not allowed to access
        '404':
          description: email template not found
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
    delete:
      tags:
        - '/me/service/email/template - EMEA, US'
      summary: delete the specified email template from the list of the email templates
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: id
          in: path
          description: id of the email template
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful response
        '400':
          description: One of the required parameters was empty or incorrect
        '403':
          description: user is not allowed to access
        '404':
          description: email template not found
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /me/service/feed/v1:
    get:
      tags:
        - '/me/service/feed - EMEA, US'
      summary: returns all feeds configured by the customer
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/FeedDO'
        '400':
          description: One of the required parameters was empty or incorrect
        '403':
          description: user is not allowed to access
        '404':
          description: feeds not founds for given user
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
    post:
      tags:
        - '/me/service/feed - EMEA, US'
      summary: creates a new feed (the maximum number of feeds that can be saved for a user is 50).
      description: ''

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - in: body
          name: body
          description: feed
          required: true
          schema:
            $ref: '#/definitions/FeedDO'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/FeedDO'
        '400':
          description: 'One of the required parameters was empty or incorrect, or the maximum number of allowed entries (50) is reached.'
        '404':
          description: feed not created
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /me/service/feed/v1/links:
    post:
      tags:
        - '/me/service/feed - EMEA, US'
      summary: 'returns suggested feed links from the given url, if available'
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - in: body
          name: body
          description: link
          required: true
          schema:
            $ref: '#/definitions/LinkRequestDO'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/FeedLinkDO'
        '400':
          description: One of the required parameters was empty or incorrect
        '403':
          description: user is not allowed to access
        '404':
          description: suggested links not founds for given user and link
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/service/feed/v1/{id}':
    post:
      tags:
        - '/me/service/feed - EMEA, US'
      summary: updates the specified feed
      description: ''

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: id
          in: path
          description: id of the feed
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: feed
          required: true
          schema:
            $ref: '#/definitions/FeedDO'
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/FeedDO'
        '400':
          description: One of the required parameters was empty or incorrect
        '403':
          description: user is not allowed to access
        '404':
          description: feed not found
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
    delete:
      tags:
        - '/me/service/feed - EMEA, US'
      summary: delete the specified feed from the list of the feeds
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: id
          in: path
          description: id of the feed
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful response
        '400':
          description: One of the required parameters was empty or incorrect
        '403':
          description: user is not allowed to access
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /me/service/map/urlsigner/v1:
    post:
      tags:
        - '/me/service/map/urlsigner/v1 - EMEA, US'
      summary: signs the given url with the secret. works only with google static maps urls. user must be logged in to use this function
      description: ''

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - in: body
          name: body
          description: url
          required: true
          schema:
            $ref: '#/definitions/MapUrlDO'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/MapUrlDO'
        '400':
          description: parameter(s) in query is not syntactically valid
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/service/mapupdate/areas/v1/{vin}':
    get:
      tags:
        - '/me/service/mapupdate/areas/v1 - EMEA, US'
      summary: Get all posible area-ids and selected area-ids for incremental over the air automatic update.
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: vin
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/MapUpdateDO'
        '400':
          description: parameter(s) in query is not syntactically valid
        '403':
          description: user is not allowed to access
        '404':
          description: vehicle and/or services not found
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
    post:
      tags:
        - '/me/service/mapupdate/areas/v1 - EMEA, US'
      summary: Set selected update Areas for over the air update. It is allowed to store only one region.
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - in: body
          name: body
          description: list of area region IDss
          required: true
          schema:
            $ref: '#/definitions/MapUpdateAreasPayloadDO'
        - name: vin
          in: path
          description: vin
          required: true
          type: string
      responses:
        '200':
          description: Successful response
        '400':
          description: parameter(s) in query is not syntactically valid
        '403':
          description: user is not allowed to access
        '404':
          description: vehicle and/or services not found
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/service/mapupdate/download/v1/{vin}':
    get:
      tags:
        - '/me/service/mapupdate/download/v1 - EMEA, US'
      summary: Returns the list of all available Full-Map-Updates.
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: vin
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/UpdateVehicleDO'
        '400':
          description: parameter(s) in query is not syntactically valid
        '403':
          description: user is not allowed to access
        '404':
          description: vehicle and/or services not found
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/service/mapupdate/download/v1/{vin}/{name}':
    get:
      tags:
        - '/me/service/mapupdate/download/v1 - EMEA, US'
      summary: 'returns an download map document, if exists for the BMW Donwload manager for Map Updates for the given map product.'
      description: ''

      produces:
        - application/bmw-mapupdate
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: vin
          required: true
          type: string
        - name: name
          in: path
          description: product name of map
          required: true
          type: string
      responses:
        '200':
          description: successful response
        '400':
          description: parameter(s) in query is not syntactically valid
        '403':
          description: user is not allowed to access
        '404':
          description: vehicle and/or services not found
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /me/service/parking/booking/v1/account:
    delete:
      tags:
        - '/me/service/parking/booking EMEA, US'
      summary: Deletes Token at GCDM and the account at Parknow Provider
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/DeleteAccountResponseDO'
        '400':
          description: 'Bad request, or wrong parameter. Error object is optional, might not be delivered.'
          schema:
            $ref: '#/definitions/ErrorsDO'
        '401':
          description: 'Unauthorized request, invalid access token'
          schema:
            $ref: '#/definitions/ErrorsDO'
        '403':
          description: user is not allowed to access
        '404':
          description: No results were found for the given query
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /me/service/parking/booking/v1/vehicles:
    get:
      tags:
        - '/me/service/parking/booking EMEA, US'
      summary: Delivers the lists of vehicles and their mapping states
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/VehicleListDO'
        '400':
          description: 'Bad request, or wrong parameter. Error object is optional, might not be delivered.'
          schema:
            $ref: '#/definitions/ErrorsDO'
        '401':
          description: 'Unauthorized request, invalid access token'
          schema:
            $ref: '#/definitions/ErrorsDO'
        '403':
          description: user is not allowed to access
        '404':
          description: No results were found for the given query
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/service/parking/booking/v1/vehicles/{vin}':
    get:
      tags:
        - '/me/service/parking/booking EMEA, US'
      summary: Delivers a list containing one vehicle with given vin and the mapping state
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/VehicleListDO'
        '400':
          description: 'Bad request, or wrong parameter. Error object is optional, might not be delivered.'
          schema:
            $ref: '#/definitions/ErrorsDO'
        '401':
          description: 'Unauthorized request, invalid access token'
          schema:
            $ref: '#/definitions/ErrorsDO'
        '403':
          description: user is not allowed to access
        '404':
          description: No results were found for the given query
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /me/service/parking/v1:
    get:
      tags:
        - '/me/service/parking EMEA, US'
      summary: returns the parking lots
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: lat
          in: query
          description: 'latitude: 48.191782'
          required: true
          type: number
          format: double
        - name: lon
          in: query
          description: 'longitude: 11.568569'
          required: true
          type: number
          format: double
        - name: cat
          in: query
          description: 'comma separated list of categories to filter result: VP, TOI, WOMAN'
          required: false
          type: string
        - name: start
          in: query
          description: 'Timestamp for start of parking. <br/>DateFormat is as follows:<br/><strong>yyyy-MM-dd''T''HH:mm:ss</strong>'
          required: false
          type: string
        - name: end
          in: query
          description: 'Timestamp for end of parking. <br/>DateFormat is as follows:<br/><strong>yyyy-MM-dd''T''HH:mm:ss</strong>'
          required: false
          type: string
        - name: distanceUnit
          in: query
          description: distanceUnit
          required: false
          type: string
          enum:
            - KM
            - MILE
        - name: maxcount
          in: query
          description: 'max number of (max = default = 100) '
          required: false
          type: integer
          format: int32
        - name: radius
          in: query
          description: radius in meters (max = default = 50000)
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/PoiDO'
        '400':
          description: Bad request or no connection
        '403':
          description: 'Unauthorized request, invalid X-rgw-gcid'
        '404':
          description: No results were found for the given query
        '503':
          description: A business exception occured
  /me/service/parking/v1/categories:
    get:
      tags:
        - '/me/service/parking EMEA, US'
      summary: 'returns the parking categories '
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/ParkingCategoryResponseDO'
        '400':
          description: Bad request or no connection
        '403':
          description: 'Unauthorized request, invalid X-rgw-gcid'
        '404':
          description: No results were found for the given query
        '503':
          description: A business exception occured
  /me/service/personalimage/v1:
    get:
      tags:
        - /me/service/personalimage - EMEA
      summary: Returns all personal image meta data belonging to one user
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/PersonalImageDO'
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
    post:
      tags:
        - /me/service/personalimage - EMEA
      summary: Creates a new personal image in the CDP DB
      description: ''

      consumes:
        - multipart/form-data
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: file
          in: formData
          required: false
          type: file
      responses:
        '200':
          description: 'OK: success, image will be scaled to a max width and max height of 470 px'
          schema:
            $ref: '#/definitions/PersonalImageDO'
        '400':
          description: 'some of the parameters are not correct; IMAGE_LIMIT_EXCEEDED: maximum number of allowed images already reached (maximum: 5 images), IMAGE_NAME_TOO_LARGE: file name longer than 40 chars, IMAGE_FILE_TOO_LARGE: image too large (max 1024KB), UNSUPPORTED_FILE_TYPE: filetype not supported (allowed: jpg, jpeg, pjpeg, gif, png, x-png) and image cannot be read (wrong format)'
          schema:
            $ref: '#/definitions/UploadImageStatusDO'
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: 'A business exception occured, image could be not created'
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/service/personalimage/v1/{imageId}':
    get:
      tags:
        - /me/service/personalimage - EMEA
      summary: Returns the personal image data
      description: ''

      produces:
        - image/png
        - image/jpg
        - image/gif
        - image/bmp
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: imageId
          in: path
          description: image id
          required: true
          type: string
      responses:
        '200':
          description: success
        '400':
          description: Some of the parameters are not correct
        '404':
          description: image does not exist
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
    delete:
      tags:
        - /me/service/personalimage - EMEA
      summary: Deletes personal image from the CDP DB
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: imageId
          in: path
          description: image id
          required: true
          type: string
      responses:
        '200':
          description: 'success, or: image does not exist or does not belong to customer and therefore could not be deleted'
        '400':
          description: Some of the parameters are not correct
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/service/personalimage/v1/{imageId}/base64':
    get:
      tags:
        - /me/service/personalimage - EMEA
      summary: Returns the personal image data as base64 data-url
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: imageId
          in: path
          description: image id
          required: true
          type: string
      responses:
        '200':
          description: success
        '400':
          description: Some of the parameters are not correct
        '404':
          description: image does not exist
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/service/remoteservices/v1/{vin}':
    post:
      tags:
        - '/me/service/remoteservices - EMEA, US'
      summary: Activates or Deactivates all remote services of the vehicle with the given vin. Deactivation is not allowed for market US.
      description: ''

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: long vin
          required: true
          type: string
        - in: body
          name: body
          description: operation name
          required: true
          schema:
            $ref: '#/definitions/RemoteServiceOperationDO'
      responses:
        '200':
          description: remote services activated/deactivated
          schema:
            $ref: '#/definitions/RemoteServiceExecutionStatusDO'
        '400':
          description: one of the required parameters was incorrect
        '403':
          description: user is not allowed to access
        '404':
          description: vin does not have needed feature
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /me/service/send2car/v1:
    get:
      tags:
        - '/me/service/send2car - EMEA, US'
      summary: returns the send to car status of all vehicles related to the customer
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/SendToCarDataDO'
        '403':
          description: user is not allowed to access
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
    post:
      tags:
        - '/me/service/send2car - EMEA, US'
      summary: updates the send to car status of all vehicles of the customer
      description: ''

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - in: body
          name: body
          description: the new config for all given vehicles
          required: true
          schema:
            $ref: '#/definitions/SendToCarDataDO'
      responses:
        '200':
          description: successful response
        '400':
          description: parameter(s) in url is not syntactically valid
        '403':
          description: user is not allowed to access
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /me/service/speechcontrol/v1:
    get:
      tags:
        - '/me/service/speechcontrol - EMEA, US'
      summary: Gets the list of vehicle with valid speech control accounts.
      description: ''

      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/SpeechControlVinDO'
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/service/speechcontrol/v1/{vin}/contactlist':
    delete:
      tags:
        - '/me/service/speechcontrol - EMEA, US'
      summary: Deletes the contact list from speechcontrol
      description: ''

      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Deletion successful.
        '400':
          description: One of the required parameters was empty or incorrect
        '403':
          description: user is not allowed to access
        '404':
          description: vin not known or service not available
        '500':
          description: An internal error occurred
        '503':
          description: A business exception occured
  '/me/service/speechcontrol/v1/{vin}/contactlist/sync':
    post:
      tags:
        - '/me/service/speechcontrol - EMEA, US'
      summary: Uploads the contact list for speechcontrol from contactbook. No function since T3-2017 (Contactbook was dereleased).
      description: ''

      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Upload/sync successful.
        '400':
          description: One of the required parameters was empty or incorrect
        '403':
          description: user is not allowed to access
        '404':
          description: vin not known or contactlist not found or service not available
        '500':
          description: An internal error occurred
        '503':
          description: A business exception occured
  '/me/service/speechcontrol/v1/{vin}/wordlist':
    post:
      tags:
        - '/me/service/speechcontrol - EMEA, US'
      summary: Uploads the wordlist list for speechcontrol.
      description: ''

      consumes:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          required: true
          type: string
        - in: body
          name: body
          description: list of words and list of vins for which word list is to be updated from speech control
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/SpeechControlWordDO'
      responses:
        '200':
          description: Upload successful.
        '400':
          description: One of the required parameters was empty or incorrect
        '403':
          description: user is not allowed to access
        '404':
          description: vin not known or service not available
        '500':
          description: An internal error occurred
        '503':
          description: A business exception occured
    delete:
      tags:
        - '/me/service/speechcontrol - EMEA, US'
      summary: Deletes the word list from speech control
      description: ''

      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Deletion successful.
        '400':
          description: One of the required parameters was empty or incorrect
        '403':
          description: user is not allowed to access
        '404':
          description: vin not known or service not available
        '500':
          description: An internal error occurred
        '503':
          description: A business exception occured
  /me/service/tol/v2/configuration:
    get:
      tags:
        - /me/service/tol/v2 - EMEA
      summary: returns the configuration for a custumer
      description: implemented

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/ConfigurationDO'
        '403':
          description: user is not allowed to access
        '404':
          description: no configuration found for custumer
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /me/service/tol/v2/confirm:
    post:
      tags:
        - /me/service/tol/v2 - EMEA
      summary: confirm deletion of tol data
      description: implemented

      parameters:
        - in: body
          name: body
          description: encrypted token for deletion of online logbook
          required: true
          schema:
            $ref: '#/definitions/TokenDO'
      responses:
        '200':
          description: token successful send
        '400':
          description: invalid token
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /me/service/tol/v2/import:
    post:
      tags:
        - /me/service/tol/v2 - EMEA
      summary: Import a datafile from USB
      description: implemented

      consumes:
        - multipart/form-data
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: file
          in: formData
          required: false
          type: file
      responses:
        '200':
          description: data sucessful imported
          schema:
            $ref: '#/definitions/ImportDataDO'
        '400':
          description: parameter(s) in url is not syntactically valid
        '403':
          description: user is not allowed to access
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: 'A business exception occured, image could be not created'
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/service/tol/v2/{vin}/checkin':
    post:
      tags:
        - /me/service/tol/v2 - EMEA
      summary: confirm drives
      description: implemented

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: vin
          required: true
          type: string
        - in: body
          name: body
          description: 'list of driveIds, to be checked in'
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
      responses:
        '200':
          description: empty list on successful response. List of CheckinErrorV2DO on logical errors in drive/trip fields
          schema:
            type: array
            items:
              $ref: '#/definitions/CheckinErrorV2DO'
        '400':
          description: parameter(s) in url is not syntactically valid
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid or not allowed to use TOL
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/service/tol/v2/{vin}/configuration':
    post:
      tags:
        - /me/service/tol/v2 - EMEA
      summary: save the configuration for a custumer/vin
      description: implemented

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: vin
          required: true
          type: string
        - in: body
          name: body
          description: configuration
          required: true
          schema:
            $ref: '#/definitions/SettingsDO'
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/ConfigurationDO'
        '400':
          description: parameter(s) in url is not syntactically valid
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid or not allowed to use TOL
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/service/tol/v2/{vin}/delete':
    post:
      tags:
        - /me/service/tol/v2 - EMEA
      summary: generate token for deletion of tol data
      description: implemented

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: vin
          required: true
          type: string
        - in: body
          name: body
          description: confirmation url
          required: true
          schema:
            type: string
      responses:
        '200':
          description: token successful send
        '400':
          description: parameter(s) in url is not syntactically valid
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid or not allowed to use TOL
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/service/tol/v2/{vin}/drivesForEdit':
    get:
      tags:
        - /me/service/tol/v2 - EMEA
      summary: returns a list of all editable drives
      description: implemented

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: vin
          required: true
          type: string
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/DriveGroupDO'
        '400':
          description: parameter(s) in url is not syntactically valid
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid or not allowed to use TOL
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/service/tol/v2/{vin}/drivesForReport':
    post:
      tags:
        - /me/service/tol/v2 - EMEA
      summary: returns a list of all confirmed drives
      description: implemented

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: vin
          required: true
          type: string
        - in: body
          name: body
          description: reportFilter
          required: true
          schema:
            $ref: '#/definitions/ReportFilterDO'
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/DriveGroupDO'
        '400':
          description: parameter(s) in url is not syntactically valid
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid or not allowed to use TOL
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/service/tol/v2/{vin}/editDrive':
    post:
      tags:
        - /me/service/tol/v2 - EMEA
      summary: save an edited drive
      description: implemented

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: vin
          required: true
          type: string
        - in: body
          name: body
          description: drive to be edited
          required: true
          schema:
            $ref: '#/definitions/EditDriveDO'
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/DriveGroupDO'
        '400':
          description: logical error in drive/trip fields
          schema:
            $ref: '#/definitions/EditErrorDO'
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid or not allowed to use TOL
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/service/tol/v2/{vin}/generateReport':
    post:
      tags:
        - /me/service/tol/v2 - EMEA
      summary: returns an report pdf
      description: implemented

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
        - application/pdf
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: vin
          required: true
          type: string
        - in: body
          name: body
          description: parameters for generating report
          required: true
          schema:
            $ref: '#/definitions/ReportParamsDO'
      responses:
        '200':
          description: successful response
        '400':
          description: parameter(s) in url is not syntactically valid
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid or not allowed to use TOL
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/service/tol/v2/{vin}/mergeDrives':
    post:
      tags:
        - /me/service/tol/v2 - EMEA
      summary: save merged drives
      description: implemented

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: vin
          required: true
          type: string
        - in: body
          name: body
          description: drives to be merged
          required: true
          schema:
            $ref: '#/definitions/MergeDriveDO'
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/DriveGroupDO'
        '400':
          description: logical error in drive/trip fields
          schema:
            $ref: '#/definitions/MergeErrorDO'
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid or not allowed to use TOL
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/service/tol/v2/{vin}/recentValues':
    get:
      tags:
        - /me/service/tol/v2 - EMEA
      summary: return a list of recent values for input fields
      description: implemented

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: vin
          required: true
          type: string
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/RecentValuesDO'
        '400':
          description: parameter(s) in url is not syntactically valid
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid or not allowed to use TOL
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/service/tol/v2/{vin}/reportHistory':
    get:
      tags:
        - /me/service/tol/v2 - EMEA
      summary: returns a list of report data
      description: implemented

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: vin
          required: true
          type: string
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/ReportHistoryDO'
        '400':
          description: parameter(s) in url is not syntactically valid
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid or not allowed to use TOL
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/service/tol/v2/{vin}/splitDrives':
    post:
      tags:
        - /me/service/tol/v2 - EMEA
      summary: split a merged drive
      description: implemented

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: vin
          required: true
          type: string
        - in: body
          name: body
          description: 'list of driveIds, to be splitted'
          required: true
          schema:
            $ref: '#/definitions/SplitDriveDO'
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/DriveGroupDO'
        '400':
          description: logical error in drive/trip fields
          schema:
            $ref: '#/definitions/SplitErrorDO'
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid or not allowed to use TOL
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /me/service/vehicleprofile/v1:
    get:
      tags:
        - '/me/service/vehicleprofile - EMEA, US'
      summary: returns a list of all saved vehicle profiles
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/VehicleProfileInfoDO'
        '400':
          description: One of the required parameters was empty or incorrect
        '403':
          description: user is not allowed to access
        '404':
          description: unable to delete email account with accountId
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/me/service/vehicleprofile/v1/{id}':
    post:
      tags:
        - '/me/service/vehicleprofile - EMEA, US'
      summary: renames an existing profile
      description: ''

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: id
          in: path
          description: id of vehicle profile
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: new name of profile
          required: true
          schema:
            $ref: '#/definitions/VehicleProfileInfoDO'
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/VehicleProfileInfoDO'
        '400':
          description: One of the required parameters was empty or incorrect
        '403':
          description: user is not allowed to access
        '404':
          description: unable to rename vehicle profile with profileId
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
    delete:
      tags:
        - '/me/service/vehicleprofile - EMEA, US'
      summary: deletes an existing profile
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: id
          in: path
          description: id of vehicle profile
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: success
        '400':
          description: One of the required parameters was empty or incorrect
        '403':
          description: user is not allowed to access
        '404':
          description: unable to delete vehicle profile with profileId
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /me/vehicles/v1:
    get:
      tags:
        - '/me/vehicles/v1 - EMEA, US'
      summary: 'return static data for all fully-mapped confirmed vehicles of given user, light-mapped vehicles will not be returned'
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: all
          in: query
          description: 'all - if set to true, the not confirmed vehicles will be added to response, without personal data. But the light-mapped vehicles will not be returned.'
          required: false
          type: boolean
          default: 'false'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/VehicleStaticDetailsDO'
        '403':
          description: user is not allowed to access
        '404':
          description: vehicle and/or data not found
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /me/vehicles/v2:
    get:
      tags:
        - '/me/vehicles/v2 - EMEA, US'
      summary: 'return static data for all confirmed vehicles of given user, this includes fully-confirmed mapped vehicles and light-mapped vehicles'
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: all
          in: query
          description: 'all - if set to true, the not confirmed vehicles will be added to response, without personal data.'
          required: false
          type: boolean
          default: 'false'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/VehicleStaticDetailsDO'
        '403':
          description: user is not allowed to access
        '404':
          description: vehicle and/or data not found
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/policy/v1/{policyId}':
    post:
      tags:
        - '/policy - EMEA, US'
      summary: The policyId the user agrees to. User always agrees to latest version of this policy
      description: 'Business Service call: IPPolicyService.agreeToLatestPolicyVersion'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: policyId
          in: path
          description: policyId to which user agrees to
          required: true
          type: string
          enum:
            - AGB_REGISTER
            - AGB_STORE_JP_AOSCT
            - AGB_VEHICLE_BMWI
            - AGB_VEHICLE_NEW
            - AGB_VEHICLE_OLD
      responses:
        '200':
          description: user successfully agreed to latest policy version
        '400':
          description: One of the required parameters was empty or incorrect
        '403':
          description: user is not allowed to access
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/policy/v1/{policyId}/{type}/{market}/{language}':
    get:
      tags:
        - '/policy - EMEA, US'
      summary: 'Returns the policy of the given policy id, type and language'
      description: 'Business Service call: IPPolicyService.getLatestPolicyDocument'

      produces:
        - application/json;charset=utf-8
        - text/html
        - application/pdf
      parameters:
        - name: policyId
          in: path
          description: policyId for which policy document is retrieved
          required: true
          type: string
          enum:
            - AGB_REGISTER
            - AGB_STORE_JP_AOSCT
            - AGB_VEHICLE_BMWI
            - AGB_VEHICLE_NEW
            - AGB_VEHICLE_OLD
        - name: type
          in: path
          description: type of the returned policy
          required: true
          type: string
          enum:
            - PDF
            - HTML
            - JSON
        - name: market
          in: path
          description: market for which policy document is retrieved
          required: true
          type: string
        - name: language
          in: path
          description: language of the returned policy
          required: true
          type: string
      responses:
        '200':
          description: policy document could be retrieved
        '400':
          description: One of the required parameters was empty or incorrect
        '404':
          description: no policy found for given parameters
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /service/chargingstation/v1:
    get:
      tags:
        - '/service/chargingstation EMEA, US'
      summary: Returns the charging stations for the given geo coordinates with the static attributes.
      description: The request parameters 'lat' and 'lon' denote the geo coordinates for the search. A list of all returned attributes can be found <a target='blank' href='../documentation/chargingstation/attributes.html'>here</a>.

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: lat
          in: query
          description: latitude
          required: true
          type: number
          format: double
        - name: lon
          in: query
          description: longitude
          required: true
          type: number
          format: double
        - name: distanceUnit
          in: query
          description: distanceUnit
          required: false
          type: string
          enum:
            - KM
            - MILE
        - name: maxcount
          in: query
          description: 'max number of (max = default = 2000) '
          required: false
          type: integer
          default: '2000'
          format: int32
        - name: radius
          in: query
          description: radius in meters (max = default = 200000)
          required: false
          type: integer
          default: '50000'
          format: int32
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/PoiDO'
        '400':
          description: invalid values for the lat and lon parameters
        '404':
          description: no stations found
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /service/chargingstation/v1/dynamic:
    post:
      tags:
        - '/service/chargingstation EMEA, US'
      summary: 'Returns the given charging station''s dynamic data, as a List of Pois.'
      description: 'The size of the list depends on the providerIds, which can be a list of coma separated values.'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: lat
          in: query
          description: latitude
          required: true
          type: number
          format: double
        - name: lon
          in: query
          description: longitude
          required: true
          type: number
          format: double
        - in: body
          name: body
          description: the dynamic category id followed by a list of poi keys
          required: true
          schema:
            $ref: '#/definitions/ChargingStationsDynamicDataRequestDO'
        - name: distanceUnit
          in: query
          description: distanceUnit
          required: false
          type: string
          enum:
            - KM
            - MILE
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/PoiDO'
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /service/chargingstation/v1/static:
    get:
      tags:
        - '/service/chargingstation EMEA, US'
      summary: Returns the given charging station's static data. The attribute with ID=-275 shows whether or not the station is a ChargeNow station. ID=-261 shows if the station has dynamic data.The attribute with ID=-275 shows whether or not the station is a ChargeNow station. ID=-261 shows if the station has dynamic data. ID=-287 shows if the station has been verified. ID=-288 shows if the station can be reserved. ID=-288 shows legal disclaimer. ID=-850 is the charging station type (AC/DC). ID=-851 represents all the available plugtypes. ID=-860 is the PT attribute.
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: id
          in: query
          description: chargingStationId
          required: true
          type: string
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/AttributeDO'
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/service/dealer/v1/{brand}/{partnerNumber}/{subsidiaryNumber}':
    get:
      tags:
        - '/service/dealer - EMEA, US'
      summary: Returns the data of the dealer found by given parameters.
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: brand
          in: path
          description: brand
          required: true
          type: string
          enum:
            - BM
            - BI
            - MI
            - RR
        - name: partnerNumber
          in: path
          description: partnerNumber
          required: true
          type: string
        - name: subsidiaryNumber
          in: path
          description: subsidiaryNumber
          required: true
          type: string
      responses:
        '200':
          description: key-value for user returned
          schema:
            $ref: '#/definitions/DealerAddressDO'
        '400':
          description: One of the required parameters was empty or incorrect
        '404':
          description: dealer not found
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /service/fuelprice/v1:
    get:
      tags:
        - '/service/fuelprice EMEA, US'
      summary: Returns the fuel prices for the given geo coordinates.
      description: The request parameters 'lat' and 'lon' denote the geo coordinates for the search.

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: lat
          in: query
          description: latitude
          required: true
          type: number
          format: double
        - name: lon
          in: query
          description: longitude
          required: true
          type: number
          format: double
        - name: distanceUnit
          in: query
          description: distanceUnit
          required: false
          type: string
          enum:
            - KM
            - MILE
        - name: maxcount
          in: query
          description: 'max number of (max = default = 100) '
          required: false
          type: integer
          format: int32
        - name: radius
          in: query
          description: radius in meters (max = default = 50000)
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/PoiDO'
        '404':
          description: fuel prices not found
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/service/rangespider/v1/{vin}':
    get:
      tags:
        - '/service/rangespider EMEA, US'
      summary: Range spider coordinates representation.
      description: 'The representation consists of two arrays of coordinates, inner and outer polygon, and also one coordinate which defines the car''s current location.'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: long vin
          required: true
          type: string
        - name: lat
          in: query
          description: latitude
          required: true
          type: number
          format: double
        - name: lon
          in: query
          description: longitude
          required: true
          type: number
          format: double
        - name: chargingState
          in: query
          description: the charging state of the vehicle in percent format value (0 <= chargingState <= 100)
          required: true
          type: number
          format: double
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/RangeSpiderResponseDO'
        '400':
          description: invalid values for the lat and lon parameters
        '404':
          description: vin is not related to given gcid or does not have needed feature
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /service/traffic/v1/event:
    get:
      tags:
        - '/service/traffic - EMEA, US'
      summary: Gets the traffic events base-url.
      description: 'Client must append the Parameter BBOX for the current viewport of the map. e.g. &BBOX=11.0078125,48.16045455774706,13.18359375,52.26815737376817'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: return the traffic events overlay URL from INRIX
          schema:
            $ref: '#/definitions/UrlDO'
        '400':
          description: One of the required parameters was empty or incorrect
        '403':
          description: user is not allowed to access
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: Traffic events URL could not be retrieved.
          schema:
            $ref: '#/definitions/ErrorsDO'
  /service/traffic/v1/flow:
    get:
      tags:
        - '/service/traffic - EMEA, US'
      summary: Gets the traffic flow base-url.
      description: 'Client must append the Parameter BBOX for the current viewport of the map. e.g. &BBOX=11.0078125,48.16045455774706,13.18359375,52.26815737376817'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: return the traffic flow overlay URL from INRIX
          schema:
            $ref: '#/definitions/UrlDO'
        '400':
          description: One of the required parameters was empty or incorrect
        '403':
          description: user is not allowed to access
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: Traffic flow URL could not be retrieved.
          schema:
            $ref: '#/definitions/ErrorsDO'
  /service/weather/v1/forecast:
    get:
      tags:
        - '/service/weather - EMEA, US'
      summary: Returns the weather forecast for the given geo coordinates.
      description: 'The request parameters ''lat'' and ''lon'' denote the geo coordinates for the weather forecast. Position 0,0 is not allowed. The request parameter ''days'' denotes the number of days for which the forecast shall be returned. The parameter ''tempScale'' denotes the temperature scale C (CELSIUS) or F (FAHRENHEIT). locale can be set optional for getting content for internal reverseGeocoding in given language/country. depending on country code, different providers will be used.'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: lat
          in: query
          description: latitude
          required: true
          type: number
          format: double
        - name: lon
          in: query
          description: longitude
          required: true
          type: number
          format: double
        - name: tempScale
          in: query
          description: 'temperature unit [C,F]'
          required: false
          type: string
          default: C
          enum:
            - C
            - F
        - name: days
          in: query
          description: 'number of days[1-5] for forecast.'
          required: false
          type: integer
          default: '5'
          format: int32
        - name: locale
          in: query
          description: locale
          required: false
          type: string
          enum:
            - ar_AE
            - cs_CZ
            - da_DK
            - de_AT
            - de_BE
            - de_CH
            - de_DE
            - de_LU
            - el_GR
            - en_AE
            - en_AU
            - en_AT
            - en_BE
            - en_BG
            - en_BR
            - en_CN
            - en_CA
            - en_CH
            - en_CZ
            - en_DE
            - en_DK
            - en_ES
            - en_FI
            - en_FR
            - en_GB
            - en_GR
            - en_HK
            - en_HU
            - en_IE
            - en_IN
            - en_IT
            - en_JP
            - en_KR
            - en_KW
            - en_LU
            - en_MO
            - en_MX
            - en_MY
            - en_NL
            - en_NO
            - en_NZ
            - en_PL
            - en_PT
            - en_RO
            - en_RU
            - en_SE
            - en_SG
            - en_SI
            - en_SK
            - en_TH
            - en_TR
            - en_TW
            - en_US
            - en_ZA
            - es_AR
            - es_CL
            - es_CO
            - es_ES
            - es_MX
            - es_US
            - fi_FI
            - fr_BE
            - fr_CA
            - fr_CH
            - fr_FR
            - fr_LU
            - hi_IN
            - hu_HU
            - it_CH
            - it_IT
            - ja_JP
            - ko_KR
            - nl_BE
            - nl_NL
            - no_NO
            - pl_PL
            - pt_BR
            - pt_PT
            - ro_RO
            - ru_RU
            - sv_SE
            - tr_TR
            - zh_CN
            - zh_HK
            - zh_MO
            - zh_SG
            - zh_TW
            - th_TH
            - xy_XY
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/WeatherForecastDO'
        '404':
          description: weather not found
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /service/weather/v1/highresolution:
    get:
      tags:
        - '/service/weather - EMEA, US'
      summary: Returns the weather details for the given coordinates.
      description: The request parameters 'lat' and 'lon' denote the geo coordinates for the weather forecast.

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: lat
          in: query
          description: latitude
          required: true
          type: number
          format: double
        - name: lon
          in: query
          description: longitude
          required: true
          type: number
          format: double
        - name: tempScale
          in: query
          description: 'temperature unit [C,F], default is Celsius, if nothing is given'
          required: false
          type: string
          default: C
          enum:
            - C
            - F
        - name: resolution
          in: query
          description: 'resolution in minutes [1,10,30,60,120,240]'
          required: false
          type: integer
          default: '60'
          format: int32
        - name: limit
          in: query
          description: 'limit of messaure points [1-30]'
          required: false
          type: integer
          default: '10'
          format: int32
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/HighResolutionDO'
        '404':
          description: weather not found
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/setting/codetable/v1/{market}':
    get:
      tags:
        - '/setting/codetable - EMEA, US'
      summary: returns all code tables (input for dropdown boxes) for a specific market
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: market
          in: path
          description: 'country code for market e.g. DE, GB'
          required: true
          type: string
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/CodeTablesByCountryDO'
        '400':
          description: One of the required parameters was empty or incorrect
        '404':
          description: codetable for country is not available
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /setting/market/v1:
    get:
      tags:
        - '/setting/market - EMEA, US'
      summary: Returns a list of all CDP markets
      description: ''

      produces:
        - application/json;charset=utf-8
      responses:
        '200':
          description: returns a list of all known CDP markets for this hub and the available languages
          schema:
            $ref: '#/definitions/MarketsDO'
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v1/{market}/offers':
    get:
      tags:
        - '/store/v1 - EMEA, US'
      summary: returns all possible offers for a market and productType specfied in the query-parameters
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: market
          in: path
          description: country code iso-3166 alpha 2
          required: true
          type: string
        - name: type
          in: query
          description: 'productType - if not set, than all products will be returned'
          required: false
          type: string
          default: ALL
          enum:
            - 'OFF'
            - PROD
            - COMP
            - SUB
            - APP
            - ALL
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/MasterOfferDO'
        '400':
          description: parameter(s) in query is not syntactically valid
        '403':
          description: user is not allowed to access
        '404':
          description: if there are no offers for given market
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v1/{market}/offers/availability':
    get:
      tags:
        - /store/v1 - TEST
      summary: returns for each offer in given market and product type whether content description available
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: market
          in: path
          description: country code iso-3166 alpha 2
          required: true
          type: string
        - name: type
          in: query
          description: 'productType - if not set, than all products will be returned'
          required: false
          type: string
          default: ALL
          enum:
            - 'OFF'
            - PROD
            - COMP
            - SUB
            - APP
            - ALL
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/MasterOfferAvailabilityDO'
        '400':
          description: parameter(s) in query is not syntactically valid
        '403':
          description: user is not allowed to access
        '404':
          description: if there are no offers for given market
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v1/{vin}/cancel/{portfolioId}':
    delete:
      tags:
        - '/store/v1 - EMEA, US'
      summary: 'Cancel the order for given portfolioId, if product was booked recently.'
      description: ''

      consumes:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          required: true
          type: string
        - name: portfolioId
          in: path
          description: portfolioId to cancel
          required: true
          type: string
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/OrderStatusDO'
        '400':
          description: parameter(s) in url or payload is not syntactically valid </br> error code 'PARAMETER_VIN_NOT_VALID' </br> error code 'PAYLOAD_OFFER_LIST_IS NOT_VALID'
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid </br> error code 'RELATIONSHIP_GCID_VIN_NOT_EXISTS'
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v1/{vin}/checkout':
    post:
      tags:
        - '/store/v1 - EMEA, US'
      summary: Validates all mandatory data for given user and vehicle.
      description: ''

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: 'the vin[17 characters] for which to checkout'
          required: true
          type: string
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/CheckOrderPreconditionsDO'
        '400':
          description: parameter(s) in url or payload is not syntactically valid </br> error code 'PARAMETER_VIN_NOT_VALID' </br> error code 'PAYLOAD_OFFER_LIST_IS NOT_VALID'
        '403':
          description: user is not allowed to access
        '404':
          description: 'vin is not related to given gcid, vin does not exist'
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v1/{vin}/offer/{offerCode}':
    get:
      tags:
        - '/store/v1 - EMEA, US'
      summary: returns offer details for given offerCode.
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: 'the vin[17 characters] for which the offer will be returned'
          required: true
          type: string
        - name: offerCode
          in: path
          description: offerCode
          required: true
          type: string
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/RetrieveOfferDO'
        '400':
          description: parameter(s) in url or payload is not syntactically valid </br> error code 'PARAMETER_VIN_NOT_VALID' </br> error code 'PAYLOAD_OFFER_LIST_IS NOT_VALID'
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid </br> error code 'RELATIONSHIP_GCID_VIN_NOT_EXISTS'
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v1/{vin}/offersAndPortfolios':
    get:
      tags:
        - '/store/v1 - EMEA, US'
      summary: This method returns all possible offers and portfolios for a the specified vin in the regarding market
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: 'the vin[17 characters] for which the offers and portfolio will be returned'
          required: true
          type: string
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/SearchOffersAndPortfoliosDO'
        '400':
          description: parameter(s) in url is not syntactically valid
        '403':
          description: user is not allowed to access
        '404':
          description: 'no offers or booked items can be found for given user and vehicle (from BIP, status: NO_OFFERS_AND_PORTFOLIOS_AVAILABLE) or vin does not belong to user (from IDS, status: VIN_DOES_NOT_BELONG_TO_USER).'
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v1/{vin}/submit/{offerCode}':
    post:
      tags:
        - '/store/v1 - EMEA, US'
      summary: This method purchases the selected offer(s)
      description: ''

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: 'the vin[17 characters] for which the offer will be submitted'
          required: true
          type: string
        - name: offerCode
          in: path
          description: offerCode
          required: true
          type: string
        - in: body
          name: body
          description: list of policy ID's to agree
          required: true
          schema:
            $ref: '#/definitions/PoliciesToAgreeDO'
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/OrderStatusDO'
        '400':
          description: parameter(s) in url or payload is not syntactically valid </br> error code 'PARAMETER_VIN_NOT_VALID' </br> error code 'PAYLOAD_OFFER_LIST_IS NOT_VALID'
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid </br> error code 'RELATIONSHIP_GCID_VIN_NOT_EXISTS'
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v2/basket/{market}/{vin}/validation':
    post:
      tags:
        - /store/v2 - EMEA
      summary: 'tests whether contents of shopping basket is valid and consistent and may be bought for given vin; used in public store where user unknown; possible error codes for offer deletion and offer suggestion in response: (OK), NOT_FOUND, NOT_ELIGIBLE, MISSING_PARENT, IN_PORTFOLIO'
      description: for security reasons this call does not evaluated the vin's actual portfolio; after login the offer shown might not be valid for this vin any longer

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: market
          in: path
          description: country code iso-3166 alpha 2
          required: true
          type: string
        - name: vin
          in: path
          description: 'the vin[17 characters] for which the validation will be returned'
          required: true
          type: string
        - in: body
          name: body
          description: list of offer codes
          required: true
          schema:
            $ref: '#/definitions/OfferCodeListDO'
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/ValidateStoreBasketDO'
        '400':
          description: parameter(s) in query is not syntactically valid
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v2/basket/{vin}/validation':
    post:
      tags:
        - /store/v2 - EMEA
      summary: 'tests whether contents of shopping basket is valid and consistent and may be bought for given vin; used in private store where user is known; possible error codes for offer deletion and offer suggestion in response: (OK), NOT_FOUND, NOT_ELIGIBLE, MISSING_PARENT, IN_PORTFOLIO'
      description: ''

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: 'the vin[17 characters] for which the validation will be returned'
          required: true
          type: string
        - in: body
          name: body
          description: list of offer codes
          required: true
          schema:
            $ref: '#/definitions/OfferCodeListDO'
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/ValidateStoreBasketDO'
        '400':
          description: parameter(s) in query is not syntactically valid
        '403':
          description: user is not allowed to access
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v2/discount/{masterOfferId}/{discountCode}':
    get:
      tags:
        - /store/v2 - EMEA
      summary: returns discount offers for given discount code
      description: ''

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: masterOfferId
          in: path
          description: master offer id for which discounts are requested
          required: true
          type: string
        - name: discountCode
          in: path
          description: discount code
          required: true
          type: string
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/MasterOfferDO'
        '400':
          description: 'parameter(s) in url or payload is not syntactically valid, e. g. vin not 7-char'
        '403':
          description: user is not allowed to access
        '404':
          description: offer does not exist
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v2/discount/{vin}/{masterOfferId}/{discountCode}':
    get:
      tags:
        - /store/v2 - EMEA
      summary: returns discount offers for given discount code and vin
      description: ''

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: masterOfferId
          in: path
          description: master offer id for which discounts are requested
          required: true
          type: string
        - name: vin
          in: path
          description: 'the vin[17 characters] for which discount offers are to be displayed'
          required: true
          type: string
        - name: discountCode
          in: path
          description: discount code
          required: true
          type: string
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/MasterOfferDO'
        '400':
          description: 'parameter(s) in url or payload is not syntactically valid, e. g. vin not 7-char'
        '403':
          description: user is not allowed to access
        '404':
          description: offer does not exist
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v2/offers/{market}':
    get:
      tags:
        - /store/v2 - EMEA
      summary: returns all possible offers for a market and productType specfied in the query-parameters
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: market
          in: path
          description: country code iso-3166 alpha 2
          required: true
          type: string
          pattern: ' [A-Z]{2}'
        - name: type
          in: query
          description: 'productType - if not set, than all products will be returned'
          required: false
          type: string
          default: ALL
          enum:
            - 'OFF'
            - PROD
            - COMP
            - SUB
            - APP
            - ALL
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/MasterOfferDO'
        '400':
          description: parameter(s) in query is not syntactically valid
        '403':
          description: user is not allowed to access
        '404':
          description: if there are no offers for given market
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v2/offers/{market}/availability':
    get:
      tags:
        - /store/v2 - TEST
      summary: returns for each offer in given market and product type whether content description available
      description: Test method!

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: market
          in: path
          description: country code iso-3166 alpha 2
          required: true
          type: string
        - name: type
          in: query
          description: 'productType - if not set, than all products will be returned'
          required: false
          type: string
          default: ALL
          enum:
            - 'OFF'
            - PROD
            - COMP
            - SUB
            - APP
            - ALL
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/MasterOfferAvailabilityDO'
        '400':
          description: parameter(s) in query is not syntactically valid
        '403':
          description: user is not allowed to access
        '404':
          description: if there are no offers for given market
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v2/offers/{market}/{vin}/{offerCode}/compatibility':
    get:
      tags:
        - /store/v2 - EMEA
      summary: tests whether the given offer is technically compatible with the given vin; used in public store where user unknown
      description: 'This API is NOT supposed to be talkative; therefore, only ''true'' or ''false'' are returned. Otherwise, it is possible to spy on any vin.'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: market
          in: path
          description: country code iso-3166 alpha 2
          required: true
          type: string
        - name: offerCode
          in: path
          description: 'offer code, example: DE_BM_00_ConciergeOffer001'
          required: true
          type: string
        - name: vin
          in: path
          description: 'the vin[17 characters] for which the compatibility will be returned'
          required: true
          type: string
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/OfferCompatibilityDO'
        '400':
          description: parameter(s) in query is not syntactically valid
        '404':
          description: if given market and / or offer code is invalid or if vin does not exist
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /store/v2/orders:
    get:
      tags:
        - /store/v2 - EMEA
      summary: This method returns the order status for all vins that are associated / mapped to the given user (gcid / telematicId)
      description: 'This method is used to ''ping'' the status of the order, after ''submit'' has been called.'

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/OrderStatusV2DO'
        '400':
          description: parameter(s) in url or payload is not syntactically valid
        '403':
          description: user is not allowed to access
        '404':
          description: no orders exist
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: 'A business exception occured, e. g. customer does not exist'
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v2/{vin}/checkout':
    post:
      tags:
        - /store/v2 - EMEA
      summary: Validates all mandatory data for given user and vehicle.
      description: ''

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: 'the vin[17 characters] for which to checkout'
          required: true
          type: string
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/CheckOrderPreconditionsDO'
        '400':
          description: parameter(s) in url or payload is not syntactically valid </br> error code 'PARAMETER_VIN_NOT_VALID' </br> error code 'PAYLOAD_OFFER_LIST_IS NOT_VALID'
        '403':
          description: user is not allowed to access
        '404':
          description: 'vin is not related to given gcid, vin does not exist'
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v2/{vin}/offer/{offerCode}':
    get:
      tags:
        - /store/v2 - EMEA
      summary: 'returns offer details for given offerCode, the v2-version is an anonymous method, since information is needed in public store, also ''distributionChannel''(INTERNET, EXFACTORY)  now optional parameter; default INTERNET.'
      description: 'gcid-header optional, since method may be used anonymously'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: vin
          in: path
          description: 'the vin[17 characters] for which the offer will be returned'
          required: true
          type: string
        - name: offerCode
          in: path
          description: offerCode
          required: true
          type: string
        - name: market
          in: query
          description: country code iso-3166 alpha 2
          required: true
          type: string
        - name: distributionChannel
          in: query
          description: 'distribution channel, optional, value: INTERNET or EXFACTORY, default: INTERNET'
          required: false
          type: string
          enum:
            - INTERNET
            - EXFACTORY
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/RetrieveOfferDO'
        '400':
          description: parameter(s) in url or payload is not syntactically valid </br> error code 'PARAMETER_VIN_NOT_VALID' </br> error code 'PAYLOAD_OFFER_LIST_IS NOT_VALID'
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid </br> error code 'RELATIONSHIP_GCID_VIN_NOT_EXISTS'
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v2/{vin}/offers':
    get:
      tags:
        - /store/v2 - EMEA
      summary: 'used in public store, returns a list of offers for the given vin as well as the BU / market of the vin'
      description: read BU / market from BIP; for security reasons this call does not evaluated the vin's actual portfolio; after login the offer shown might not be valid for this vin any longer

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: vin
          in: path
          description: 'the vin[17 characters] for which the offers will be returned'
          required: true
          type: string
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/SearchOffersByVinDO'
        '400':
          description: parameter(s) in query is not syntactically valid
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v2/{vin}/offersAndPortfolios':
    get:
      tags:
        - /store/v2 - EMEA
      summary: This method returns all possible offers and portfolios for a the specified vin in the regarding market
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: 'the vin[17 characters] for which the offers an portfolio will be returned'
          required: true
          type: string
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/SearchOffersAndPortfoliosDO'
        '400':
          description: parameter(s) in url is not syntactically valid
        '403':
          description: user is not allowed to access
        '404':
          description: 'no offers or booked items can be found for given user and vehicle (from BIP, status: NO_OFFERS_AND_PORTFOLIOS_AVAILABLE) or vin does not belong to user (from IDS, status: VIN_DOES_NOT_BELONG_TO_USER).'
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v2/{vin}/submit':
    post:
      tags:
        - /store/v2 - EMEA
      summary: 'This method purchases the selected offer(s) for a given vin, if shopping basket invalid, this most probably means that light mapping is still in progress and ''submit''-call returns MAPPING_IN_PROGRESS. (Client should only call ''submit'' when shopping basket valid! If shopping basket mapping status LIGHT_MAPPING_POSSIBLE, client should do a light mapping first.)'
      description: ''

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: 'the vin[17 characters] for which to submit'
          required: true
          type: string
        - in: body
          name: body
          description: 'list of offer codes, possibly discount code, and list of policy ID''s to agree'
          required: true
          schema:
            $ref: '#/definitions/OfferAndPolicyListV2DO'
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/SubmitOrderStatusV2DO'
        '400':
          description: 'parameter(s) in url or payload is not syntactically valid (vin incorrect, preconditions not fulfilled)'
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid </br> error code 'RELATIONSHIP_GCID_VIN_NOT_EXISTS' or 'VIn UNKNOWN'
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v2/{vin}/{portfolioId}':
    delete:
      tags:
        - /store/v2 - EMEA
      summary: 'Cancel the order for given portfolioId, if product was booked recently.'
      description: 'formally: store/v1/{vin}/cancel/{portfolioId}'

      consumes:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: 'the vin[17 characters] for which the portfolio will be returned'
          required: true
          type: string
        - name: portfolioId
          in: path
          description: portfolioId to cancel
          required: true
          type: string
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/OrderStatusDO'
        '400':
          description: parameter(s) in url or payload is not syntactically valid </br> error code 'PARAMETER_VIN_NOT_VALID' </br> error code 'PAYLOAD_OFFER_LIST_IS NOT_VALID'
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid </br> error code 'RELATIONSHIP_GCID_VIN_NOT_EXISTS'
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v3/basket/{market}/{vin}/validation':
    post:
      tags:
        - /store/v3 - EMEA
      summary: 'tests whether contents of shopping basket is valid and consistent and may be bought for given vin; used in public store where user unknown; possible error codes for offer deletion and offer suggestion in response: (OK), NOT_FOUND, NOT_ELIGIBLE, MISSING_PARENT, IN_PORTFOLIO. New input parameters for service inclusive offers (extOfferCat = besttype, extOfferSubCat = sa-code); new mapping status WAIVED in response.'
      description: for security reasons this call does not evaluated the vin's actual portfolio; after login the offer shown might not be valid for this vin any longer

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: market
          in: path
          description: country code iso-3166 alpha 2
          required: true
          type: string
        - name: vin
          in: path
          description: 'the vin[17 characters] for which the validation will be returned'
          required: true
          type: string
        - in: body
          name: body
          description: list of offer codes
          required: true
          schema:
            $ref: '#/definitions/ExtOfferCodeListDO'
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/ValidateStoreBasketV3DO'
        '400':
          description: parameter(s) in query is not syntactically valid
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v3/basket/{vin}/validation':
    post:
      tags:
        - /store/v3 - EMEA
      summary: 'tests whether contents of shopping basket is valid and consistent and may be bought for given vin; used in private store where user is known; possible error codes for offer deletion and offer suggestion in response: (OK), NOT_FOUND, NOT_ELIGIBLE, MISSING_PARENT, IN_PORTFOLIO. New input parameters for service inclusive offers (extOfferCat = besttype, extOfferSubCat = sa-code); new mapping status WAIVED in response.'
      description: ''

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: 'the vin[17 characters] for which the validation will be returned'
          required: true
          type: string
        - in: body
          name: body
          description: list of offer codes
          required: true
          schema:
            $ref: '#/definitions/ExtOfferCodeListDO'
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/ValidateStoreBasketV3DO'
        '400':
          description: parameter(s) in query is not syntactically valid
        '403':
          description: user is not allowed to access
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v3/discount/{masterOfferId}/{discountCode}':
    get:
      tags:
        - /store/v3 - EMEA
      summary: returns discount offers for given discount code. Response object extended with extOfferCat (besttype) and extOfferSubCat (sa-code) for service inclusive offers.
      description: ''

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: masterOfferId
          in: path
          description: master offer id for which discounts are requested
          required: true
          type: string
        - name: discountCode
          in: path
          description: discount code
          required: true
          type: string
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/MasterOfferDO'
        '400':
          description: 'parameter(s) in url or payload is not syntactically valid, e. g. vin not 7-char'
        '403':
          description: user is not allowed to access
        '404':
          description: offer does not exist
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v3/discount/{vin}/{masterOfferId}/{discountCode}':
    get:
      tags:
        - /store/v3 - EMEA
      summary: returns discount offers for given discount code and vin. Response object extended with extOfferCat (besttype) and extOfferSubCat (sa-code) for service inclusive offers.
      description: ''

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: masterOfferId
          in: path
          description: master offer id for which discounts are requested
          required: true
          type: string
        - name: vin
          in: path
          description: 'the vin[17 characters] for which discount offers are to be displayed'
          required: true
          type: string
        - name: discountCode
          in: path
          description: discount code
          required: true
          type: string
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/MasterOfferDO'
        '400':
          description: 'parameter(s) in url or payload is not syntactically valid, e. g. vin not 7-char'
        '403':
          description: user is not allowed to access
        '404':
          description: offer does not exist
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v3/offers/{market}':
    get:
      tags:
        - /store/v3 - EMEA
      summary: returns all possible offers for a market and productType specfied in the query-parameters. Response object extended with extOfferCat (besttype) and extOfferSubCat (sa-code) for service inclusive offers.
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: market
          in: path
          description: country code iso-3166 alpha 2
          required: true
          type: string
          pattern: ' [A-Z]{2}'
        - name: type
          in: query
          description: 'productType - if not set, than all products will be returned'
          required: false
          type: string
          default: ALL
          enum:
            - 'OFF'
            - PROD
            - COMP
            - SUB
            - APP
            - ALL
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/MasterOfferDO'
        '400':
          description: parameter(s) in query is not syntactically valid
        '403':
          description: user is not allowed to access
        '404':
          description: if there are no offers for given market
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v3/offers/{market}/availability':
    get:
      tags:
        - /store/v3 - TEST
      summary: returns for each offer in given market and product type whether content description available. No changes to v2-version.
      description: Test method!

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: market
          in: path
          description: country code iso-3166 alpha 2
          required: true
          type: string
        - name: type
          in: query
          description: 'productType - if not set, than all products will be returned'
          required: false
          type: string
          default: ALL
          enum:
            - 'OFF'
            - PROD
            - COMP
            - SUB
            - APP
            - ALL
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/MasterOfferAvailabilityDO'
        '400':
          description: parameter(s) in query is not syntactically valid
        '403':
          description: user is not allowed to access
        '404':
          description: if there are no offers for given market
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v3/offers/{market}/{vin}/{offerCode}/compatibility':
    get:
      tags:
        - /store/v3 - EMEA
      summary: tests whether the given offer is technically compatible with the given vin; used in public store where user unknown. No changes to v2-version.
      description: 'This API is NOT supposed to be talkative; therefore, only ''true'' or ''false'' are returned. Otherwise, it is possible to spy on any vin.'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: market
          in: path
          description: country code iso-3166 alpha 2
          required: true
          type: string
        - name: offerCode
          in: path
          description: 'offer code, example: DE_BM_00_ConciergeOffer001'
          required: true
          type: string
        - name: vin
          in: path
          description: 'the vin[17 characters] for which the compatibility will be returned'
          required: true
          type: string
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/OfferCompatibilityDO'
        '400':
          description: parameter(s) in query is not syntactically valid
        '404':
          description: if given market and / or offer code is invalid or if vin does not exist
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /store/v3/orders:
    get:
      tags:
        - /store/v3 - EMEA
      summary: This method returns the order status for all vins that are associated / mapped to the given user (gcid / telematicId).
      description: 'This method is used to ''ping'' the status of the order, after ''submit'' has been called.'

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: orderId
          in: query
          description: the OrderId
          required: false
          type: string
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/OrderStatusV3DO'
        '400':
          description: parameter(s) in url or payload is not syntactically valid
        '403':
          description: user is not allowed to access
        '404':
          description: no orders exist
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: 'A business exception occured, e. g. customer does not exist'
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v3/subscription/{vin}/{offerCode}':
    delete:
      tags:
        - /store/v3 - EMEA
      summary: Cancel the prolongation of an auto renewable product
      description: ''

      consumes:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: 'the vin[17 characters] for which the offer will be canceled'
          required: true
          type: string
        - name: offerCode
          in: path
          description: offerId to cancel prolongation
          required: true
          type: string
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/CancelStatusDO'
        '400':
          description: parameter(s) in url or payload is not syntactically valid </br> error code 'PARAMETER_VIN_NOT_VALID' </br> error code 'PAYLOAD_OFFER_LIST_IS NOT_VALID'
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid </br> error code 'RELATIONSHIP_GCID_VIN_NOT_EXISTS'
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v3/{vin}/checkout':
    post:
      tags:
        - /store/v3 - EMEA
      summary: Validates all mandatory data for given user and vehicle. No changes to v2-version.
      description: ''

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: 'the vin[17 characters] for which to checkout'
          required: true
          type: string
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/CheckOrderPreconditionsDO'
        '400':
          description: parameter(s) in url or payload is not syntactically valid </br> error code 'PARAMETER_VIN_NOT_VALID' </br> error code 'PAYLOAD_OFFER_LIST_IS NOT_VALID'
        '403':
          description: user is not allowed to access
        '404':
          description: 'vin is not related to given gcid, vin does not exist'
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v3/{vin}/external/offer':
    post:
      tags:
        - /store/v3 - EMEA
      summary: 'returns offer details for given external offerCodes, an external offer is a SI/RI offer or a ''smart access'' offer; ''distributionChannel''(INTERNET, EXFACTORY) optional parameter; default INTERNET.'
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: vin
          in: path
          description: 'the vin[17 characters] for which the external offers will be returned'
          required: true
          type: string
        - name: market
          in: query
          description: country code iso-3166 alpha 2
          required: true
          type: string
        - in: body
          name: body
          description: list of offer codes
          required: true
          schema:
            $ref: '#/definitions/OfferCodeListDO'
        - name: distributionChannel
          in: query
          description: 'distribution channel, optional, value: INTERNET or EXFACTORY, default: INTERNET'
          required: false
          type: string
          enum:
            - INTERNET
            - EXFACTORY
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/MasterOfferDO'
        '400':
          description: parameter(s) in url or payload is not syntactically valid </br> error code 'PARAMETER_VIN_NOT_VALID' </br> error code 'PAYLOAD_OFFER_LIST_IS NOT_VALID'
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid </br> error code 'RELATIONSHIP_GCID_VIN_NOT_EXISTS'
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v3/{vin}/offer/{offerCode}':
    get:
      tags:
        - /store/v3 - EMEA
      summary: 'returns offer details for given offerCode, the v2-version is an anonymous method, since information is needed in public store, also ''distributionChannel''(INTERNET, EXFACTORY)  now optional parameter; default INTERNET. No changes to v2-version.'
      description: 'gcid-header optional, since method may be used anonymously'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: vin
          in: path
          description: 'the vin[17 characters] for which the offer will be returned'
          required: true
          type: string
        - name: offerCode
          in: path
          description: offerCode
          required: true
          type: string
        - name: market
          in: query
          description: country code iso-3166 alpha 2
          required: true
          type: string
        - name: distributionChannel
          in: query
          description: 'distribution channel, optional, value: INTERNET or EXFACTORY, default: INTERNET'
          required: false
          type: string
          enum:
            - INTERNET
            - EXFACTORY
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/RetrieveOfferDO'
        '400':
          description: parameter(s) in url or payload is not syntactically valid </br> error code 'PARAMETER_VIN_NOT_VALID' </br> error code 'PAYLOAD_OFFER_LIST_IS NOT_VALID'
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid </br> error code 'RELATIONSHIP_GCID_VIN_NOT_EXISTS'
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v3/{vin}/offers':
    get:
      tags:
        - /store/v3 - EMEA
      summary: 'used in public store, returns a list of offers for the given vin as well as the BU / market of the vin.  Response object extended with extOfferCat (besttype) and extOfferSubCat (sa-code) for service inclusive offers.'
      description: read BU / market from BIP; for security reasons this call does not evaluated the vin's actual portfolio; after login the offer shown might not be valid for this vin any longer

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: vin
          in: path
          description: 'the vin[17 characters] for which the offers will be returned'
          required: true
          type: string
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/SearchOffersByVinDO'
        '400':
          description: parameter(s) in query is not syntactically valid
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v3/{vin}/offersAndPortfolios':
    get:
      tags:
        - /store/v3 - EMEA
      summary: This method returns all possible offers and portfolios for a the specified vin in the regarding market. Response object extended with extOfferCat (besttype) and extOfferSubCat (sa-code) for service inclusive offers.
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: 'the vin[17 characters] for which the offers an portfolio will be returned'
          required: true
          type: string
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/SearchOffersAndPortfoliosDO'
        '400':
          description: parameter(s) in url is not syntactically valid
        '403':
          description: user is not allowed to access
        '404':
          description: 'no offers or booked items can be found for given user and vehicle (from BIP, status: NO_OFFERS_AND_PORTFOLIOS_AVAILABLE) or vin does not belong to user (from IDS, status: VIN_DOES_NOT_BELONG_TO_USER).'
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v3/{vin}/submit':
    post:
      tags:
        - /store/v3 - EMEA
      summary: 'This method purchases the selected offer(s) for a given vin, if shopping basket invalid, this most probably means that light mapping is still in progress and ''submit''-call returns MAPPING_IN_PROGRESS. (Client should only call ''submit'' when shopping basket valid! If shopping basket mapping status LIGHT_MAPPING_POSSIBLE, client should do a light mapping first.) New input parameters for service inclusive offers (extOfferCat = besttype, extOfferSubCat = sa-code).'
      description: ''

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: 'the vin[17 characters] for which to submit'
          required: true
          type: string
        - in: body
          name: body
          description: 'list of offer codes, possibly discount code, and list of policy ID''s to agree'
          required: true
          schema:
            $ref: '#/definitions/OfferAndPolicyListV3DO'
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/SubmitOrderStatusV2DO'
        '400':
          description: 'parameter(s) in url or payload is not syntactically valid (vin incorrect, preconditions not fulfilled)'
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid </br> error code 'RELATIONSHIP_GCID_VIN_NOT_EXISTS' or 'VIN UNKNOWN'
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v3/{vin}/{portfolioId}':
    delete:
      tags:
        - /store/v3 - EMEA
      summary: 'Cancel the order for given portfolioId, if product was booked recently. No changes to v2-version.'
      description: 'formally: store/v1/{vin}/cancel/{portfolioId}'

      consumes:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: 'the vin[17 characters] for which the portfolio will be returned'
          required: true
          type: string
        - name: portfolioId
          in: path
          description: portfolioId to cancel
          required: true
          type: string
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/OrderStatusDO'
        '400':
          description: parameter(s) in url or payload is not syntactically valid </br> error code 'PARAMETER_VIN_NOT_VALID' </br> error code 'PAYLOAD_OFFER_LIST_IS NOT_VALID'
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid </br> error code 'RELATIONSHIP_GCID_VIN_NOT_EXISTS'
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v4/basket/{market}/{vin}/validation':
    post:
      tags:
        - /store/v4 - EMEA
      summary: 'tests whether contents of shopping basket is valid and consistent and may be bought for given vin; used in public store where user unknown; possible error codes for offer deletion and offer suggestion in response: (OK), NOT_FOUND, NOT_ELIGIBLE, MISSING_PARENT, IN_PORTFOLIO. New input parameters for service inclusive offers (besttype, sa-code); new mapping status WAIVED in response.'
      description: for security reasons this call does not evaluated the vin's actual portfolio; after login the offer shown might not be valid for this vin any longer

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: market
          in: path
          description: country code iso-3166 alpha 2
          required: true
          type: string
        - name: vin
          in: path
          description: 'the vin[17 characters] for which the validation will be returned'
          required: true
          type: string
        - in: body
          name: body
          description: list of offer codes
          required: true
          schema:
            $ref: '#/definitions/ExtOfferCodeListDO'
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/ValidateStoreBasketV3DO'
        '400':
          description: parameter(s) in query is not syntactically valid
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v4/basket/{vin}/validation':
    post:
      tags:
        - /store/v4 - EMEA
      summary: 'tests whether contents of shopping basket is valid and consistent and may be bought for given vin; used in private store where user is known; possible error codes for offer deletion and offer suggestion in response: (OK), NOT_FOUND, NOT_ELIGIBLE, MISSING_PARENT, IN_PORTFOLIO. New input parameters for service inclusive offers (besttype, sa-code); new mapping status WAIVED in response.'
      description: ''

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: 'the vin[17 characters] for which the validation will be returned'
          required: true
          type: string
        - in: body
          name: body
          description: list of offer codes
          required: true
          schema:
            $ref: '#/definitions/ExtOfferCodeListDO'
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/ValidateStoreBasketV3DO'
        '400':
          description: parameter(s) in query is not syntactically valid
        '403':
          description: user is not allowed to access
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v4/discount/{masterOfferId}/{discountCode}':
    get:
      tags:
        - /store/v4 - EMEA
      summary: returns discount offers for given discount code. Response object extended with besttype and sa-code for service inclusive offers.
      description: ''

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: masterOfferId
          in: path
          description: master offer id for which discounts are requested
          required: true
          type: string
        - name: discountCode
          in: path
          description: discount code
          required: true
          type: string
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/MasterOfferDO'
        '400':
          description: 'parameter(s) in url or payload is not syntactically valid, e. g. vin not 7-char'
        '403':
          description: user is not allowed to access
        '404':
          description: offer does not exist
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v4/discount/{vin}/{masterOfferId}/{discountCode}':
    get:
      tags:
        - /store/v4 - EMEA
      summary: returns discount offers for given discount code and vin. Response object extended with besttype and sa-code for service inclusive offers.
      description: ''

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: masterOfferId
          in: path
          description: master offer id for which discounts are requested
          required: true
          type: string
        - name: vin
          in: path
          description: 'the vin[17 characters] for which discount offers are to be displayed'
          required: true
          type: string
        - name: discountCode
          in: path
          description: discount code
          required: true
          type: string
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/MasterOfferDO'
        '400':
          description: 'parameter(s) in url or payload is not syntactically valid, e. g. vin not 7-char'
        '403':
          description: user is not allowed to access
        '404':
          description: offer does not exist
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v4/offers/{market}':
    get:
      tags:
        - /store/v4 - EMEA
      summary: returns all possible offers for a market and productType specfied in the query-parameters. Response object extended with besttype and sa-code for service inclusive offers.
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: market
          in: path
          description: country code iso-3166 alpha 2
          required: true
          type: string
          pattern: ' [A-Z]{2}'
        - name: type
          in: query
          description: 'productType - if not set, than all products will be returned'
          required: false
          type: string
          default: ALL
          enum:
            - 'OFF'
            - PROD
            - COMP
            - SUB
            - APP
            - ALL
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/MasterOfferDO'
        '400':
          description: parameter(s) in query is not syntactically valid
        '403':
          description: user is not allowed to access
        '404':
          description: if there are no offers for given market
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v4/offers/{market}/availability':
    get:
      tags:
        - /store/v4 - TEST
      summary: returns for each offer in given market and product type whether content description available. No changes to v2-version.
      description: Test method!

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: market
          in: path
          description: country code iso-3166 alpha 2
          required: true
          type: string
        - name: type
          in: query
          description: 'productType - if not set, than all products will be returned'
          required: false
          type: string
          default: ALL
          enum:
            - 'OFF'
            - PROD
            - COMP
            - SUB
            - APP
            - ALL
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/MasterOfferAvailabilityDO'
        '400':
          description: parameter(s) in query is not syntactically valid
        '403':
          description: user is not allowed to access
        '404':
          description: if there are no offers for given market
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v4/offers/{market}/{vin}/{offerCode}/compatibility':
    get:
      tags:
        - /store/v4 - EMEA
      summary: tests whether the given offer is technically compatible with the given vin; used in public store where user unknown. No changes to v2-version.
      description: 'This API is NOT supposed to be talkative; therefore, only ''true'' or ''false'' are returned. Otherwise, it is possible to spy on any vin.'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: market
          in: path
          description: country code iso-3166 alpha 2
          required: true
          type: string
        - name: offerCode
          in: path
          description: 'offer code, example: DE_BM_00_ConciergeOffer001'
          required: true
          type: string
        - name: vin
          in: path
          description: 'the vin[17 characters] for which the compatibility will be returned'
          required: true
          type: string
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/OfferCompatibilityDO'
        '400':
          description: parameter(s) in query is not syntactically valid
        '404':
          description: if given market and / or offer code is invalid or if vin does not exist
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /store/v4/orders:
    get:
      tags:
        - /store/v4 - EMEA
      summary: This method returns the order status for all vins that are associated / mapped to the given user (gcid / telematicId).
      description: 'This method is used to ''ping'' the status of the order, after ''submit'' has been called.'

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: orderId
          in: query
          description: the OrderId
          required: false
          type: string
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/OrderStatusV3DO'
        '400':
          description: parameter(s) in url or payload is not syntactically valid
        '403':
          description: user is not allowed to access
        '404':
          description: no orders exist
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: 'A business exception occured, e. g. customer does not exist'
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v4/{vin}/checkout':
    post:
      tags:
        - /store/v4 - EMEA
      summary: Validates all mandatory data for given user and vehicle. No changes to v2-version.
      description: ''

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: 'the vin[17 characters] for which to checkout'
          required: true
          type: string
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/CheckOrderPreconditionsDO'
        '400':
          description: parameter(s) in url or payload is not syntactically valid </br> error code 'PARAMETER_VIN_NOT_VALID' </br> error code 'PAYLOAD_OFFER_LIST_IS NOT_VALID'
        '403':
          description: user is not allowed to access
        '404':
          description: 'vin is not related to given gcid, vin does not exist'
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v4/{vin}/external/offer':
    post:
      tags:
        - /store/v4 - EMEA
      summary: 'returns offer details for given external offerCodes, an external offer is a SI/RI offer; ''distributionChannel''(INTERNET, EXFACTORY) optional parameter; default INTERNET.'
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: vin
          in: path
          description: 'the vin[17 characters] for which the external offers will be returned'
          required: true
          type: string
        - name: market
          in: query
          description: country code iso-3166 alpha 2
          required: true
          type: string
        - in: body
          name: body
          description: list of offer codes
          required: true
          schema:
            $ref: '#/definitions/OfferCodeListDO'
        - name: distributionChannel
          in: query
          description: 'distribution channel, optional, value: INTERNET or EXFACTORY, default: INTERNET'
          required: false
          type: string
          enum:
            - INTERNET
            - EXFACTORY
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/MasterOfferDO'
        '400':
          description: parameter(s) in url or payload is not syntactically valid </br> error code 'PARAMETER_VIN_NOT_VALID' </br> error code 'PAYLOAD_OFFER_LIST_IS NOT_VALID'
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid </br> error code 'RELATIONSHIP_GCID_VIN_NOT_EXISTS'
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v4/{vin}/offer/{offerCode}':
    get:
      tags:
        - /store/v4 - EMEA
      summary: 'returns offer details for given offerCode, the v2-version is an anonymous method, since information is needed in public store, also ''distributionChannel''(INTERNET, EXFACTORY)  now optional parameter; default INTERNET. No changes to v2-version.'
      description: 'gcid-header optional, since method may be used anonymously'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: vin
          in: path
          description: 'the vin[17 characters] for which the offer will be returned'
          required: true
          type: string
        - name: offerCode
          in: path
          description: offerCode
          required: true
          type: string
        - name: market
          in: query
          description: country code iso-3166 alpha 2
          required: true
          type: string
        - name: distributionChannel
          in: query
          description: 'distribution channel, optional, value: INTERNET or EXFACTORY, default: INTERNET'
          required: false
          type: string
          enum:
            - INTERNET
            - EXFACTORY
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/RetrieveOfferDO'
        '400':
          description: parameter(s) in url or payload is not syntactically valid </br> error code 'PARAMETER_VIN_NOT_VALID' </br> error code 'PAYLOAD_OFFER_LIST_IS NOT_VALID'
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid </br> error code 'RELATIONSHIP_GCID_VIN_NOT_EXISTS'
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v4/{vin}/offers':
    get:
      tags:
        - /store/v4 - EMEA
      summary: 'used in public store, returns a list of offers for the given vin as well as the BU / market of the vin.  Response object extended with besttype and sa-code for service inclusive offers.'
      description: read BU / market from BIP; for security reasons this call does not evaluated the vin's actual portfolio; after login the offer shown might not be valid for this vin any longer

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: vin
          in: path
          description: 'the vin[17 characters] for which the offers will be returned'
          required: true
          type: string
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/SearchOffersByVinDO'
        '400':
          description: parameter(s) in query is not syntactically valid
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v4/{vin}/offersAndPortfolios':
    get:
      tags:
        - /store/v4 - EMEA
      summary: This method returns all possible offers and portfolios for a the specified vin in the regarding market. Response object extended with besttype and sa-code for service inclusive offers.
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: 'the vin[17 characters] for which the offers an portfolio will be returned'
          required: true
          type: string
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/SearchOffersAndPortfoliosDO'
        '400':
          description: parameter(s) in url is not syntactically valid
        '403':
          description: user is not allowed to access
        '404':
          description: 'no offers or booked items can be found for given user and vehicle (from BIP, status: NO_OFFERS_AND_PORTFOLIOS_AVAILABLE) or vin does not belong to user (from IDS, status: VIN_DOES_NOT_BELONG_TO_USER).'
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v4/{vin}/submit':
    post:
      tags:
        - /store/v4 - EMEA
      summary: 'This method purchases the selected offer(s) for a given vin, if shopping basket invalid, this most probably means that light mapping is still in progress and ''submit''-call returns MAPPING_IN_PROGRESS. (Client should only call ''submit'' when shopping basket valid! If shopping basket mapping status LIGHT_MAPPING_POSSIBLE, client should do a light mapping first.) New input parameters for service inclusive offers (besttype, sa-code).'
      description: ''

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: 'the vin[17 characters] for which to submit'
          required: true
          type: string
        - in: body
          name: body
          description: 'list of offer codes, possibly discount code, and list of policy ID''s to agree'
          required: true
          schema:
            $ref: '#/definitions/OfferAndPolicyListV4DO'
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/SubmitOrderStatusV2DO'
        '400':
          description: 'parameter(s) in url or payload is not syntactically valid (vin incorrect, preconditions not fulfilled)'
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid </br> error code 'RELATIONSHIP_GCID_VIN_NOT_EXISTS' or 'VIN UNKNOWN'
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/store/v4/{vin}/{portfolioId}':
    delete:
      tags:
        - /store/v4 - EMEA
      summary: 'Cancel the order for given portfolioId, if product was booked recently. No changes to v2-version.'
      description: 'formally: store/v1/{vin}/cancel/{portfolioId}'

      consumes:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: 'the vin[17 characters] for which the portfolio will be returned'
          required: true
          type: string
        - name: portfolioId
          in: path
          description: portfolioId to cancel
          required: true
          type: string
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/OrderStatusDO'
        '400':
          description: parameter(s) in url or payload is not syntactically valid </br> error code 'PARAMETER_VIN_NOT_VALID' </br> error code 'PAYLOAD_OFFER_LIST_IS NOT_VALID'
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid </br> error code 'RELATIONSHIP_GCID_VIN_NOT_EXISTS'
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /thirdparty/parknow/v1/vehicle:
    get:
      tags:
        - '/thirdparty/parknow - EMEA, US'
      summary: returns all vehicles from the customer
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/ParkNowVehicleDO'
        '400':
          description: One of the required parameters was empty or incorrect
        '403':
          description: user is not allowed to access
        '404':
          description: vehicles not found for given user
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/vehicle/connection/v1/{vin}/dewaive':
    post:
      tags:
        - '/vehicle/connection - EMEA, US'
      summary: dewaives a waived vehicle
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: vin
          required: true
          type: string
      responses:
        '200':
          description: successful response
        '400':
          description: parameter(s) in url is not syntactically valid
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/vehicle/dynamic/v1/{vin}':
    get:
      tags:
        - '/vehicle/dynamic - EMEA, US'
      summary: This method returns the dynamic data of an vehicle.
      description: 'Position will be returned only, if vehicle tracking is enabled. This method calls the CCG (Connected Charging Gateway) and requests information about the following attributes: beConditionBasedSer-vices, beMaxRangeFuel, beMaxRangeElectric, beRemainingRangeFuel, beRemainingRangeElectric, unitOfLength, unitOfEnergy, unitOfElectricConsumption, unitOfCombustionConsumption, isAmPm, updateTime, Segment_LastTrip_time_segment_end. BevService.getVehicleInformation(); formerly: /dynamicdata/v1/{vin}'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: 'the vin[17 characters] for which the services will be returned'
          required: true
          type: string
        - name: offset
          in: query
          description: 'offset in minutes from GMT, default is 0'
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/DynamicDataDO'
        '403':
          description: user is not allowed to access
        '404':
          description: vehicle and/or services not found
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/vehicle/efficiency/v1/{vin}':
    get:
      tags:
        - '/vehicle/efficiency/v1 - EMEA, US'
      summary: returns the statistics data for a eDrive vehicle
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: long vin
          required: true
          type: string
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/ScoreListDO'
        '400':
          description: One of the required parameters was empty or incorrect
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
    post:
      tags:
        - '/vehicle/efficiency/v1 - EMEA, US'
      summary: sets the community flag
      description: ''

      consumes:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: long vin
          required: true
          type: string
        - in: body
          name: body
          description: community switch
          required: true
          schema:
            $ref: '#/definitions/CommunityDO'
      responses:
        '200':
          description: successful response
        '400':
          description: One of the required parameters was empty or incorrect
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
    delete:
      tags:
        - '/vehicle/efficiency/v1 - EMEA, US'
      summary: reset statistics and ranking data
      description: ''

      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: long vin
          required: true
          type: string
      responses:
        '200':
          description: successful response
        '400':
          description: One of the required parameters was empty or incorrect
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /vehicle/image/v1:
    get:
      tags:
        - '/vehicle/image EMEA, US'
      summary: returns an array of URLs to the cosy pictures for all vehicles mapped to a user.
      description: 'vehicles from the Accountmanagement should be listed; Backend Calls: IPVehicleService.getRelationshipByGcid, UserProfileService.getVehicleDetailsV2'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: width
          in: query
          description: width  of the images
          required: true
          type: integer
          format: int32
        - name: startAngle
          in: query
          description: 'default is 330� [0-359]'
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/ImageUrlDO'
        '400':
          description: parameter(s) in url is not syntactically valid
        '403':
          description: user is not allowed to access
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/vehicle/image/v1/{vin}':
    get:
      tags:
        - '/vehicle/image EMEA, US'
      summary: returns a URL to a cosy picture for a specific VIN. this method does not check the user.
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: vin
          in: path
          description: 'the vin[17 characters] for which the image url will be returned'
          required: true
          type: string
        - name: width
          in: query
          description: width  of the images
          required: true
          type: integer
          format: int32
        - name: startAngle
          in: query
          description: 'default is 330� [0-359]'
          required: false
          type: integer
          format: int32
        - name: stepAngle
          in: query
          description: 'default is 0, allowed values [0, 10, 20, 30, 60, 90, 120], 0 means, that only one URL will be returned'
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/ImageUrlDO'
        '400':
          description: parameter(s) in url is not syntactically valid
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /vehicle/loginsetting/v1:
    get:
      tags:
        - '/vehicle/loginsetting EMEA, US'
      summary: 'Returns the security login settings for customer. if customer requests the first time, the default value will be  returned'
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/LoginSettingsDO'
        '400':
          description: parameter(s) in url is not syntactically valid
        '403':
          description: user is not allowed to access
        '404':
          description: unable to get login settings
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
    post:
      tags:
        - '/vehicle/loginsetting EMEA, US'
      summary: Stores the current security login settings for customer.
      description: ''

      consumes:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - in: body
          name: body
          description: new setting
          required: false
          schema:
            $ref: '#/definitions/SaveLoginSettingsDO'
      responses:
        '200':
          description: successful response
        '400':
          description: parameter(s) in url is not syntactically valid
        '403':
          description: user is not allowed to access
        '404':
          description: unable to store login settings
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  /vehicle/myinfo/v1:
    post:
      tags:
        - '/vehicle/myinfo - EMEA, US'
      summary: sends a myInfo message to the specified vehicles
      description: 'formerly: /myinfo/sendmyinfo/v2'

      consumes:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - in: body
          name: body
          description: myinfo data and list of all vehicles
          required: true
          schema:
            $ref: '#/definitions/MyInfoDO'
      responses:
        '200':
          description: successful response
        '400':
          description: One of the required parameters was empty or incorrect
        '403':
          description: user is not allowed to access
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/vehicle/navigation/v1/{vin}':
    get:
      tags:
        - '/vehicle/navigation - EMEA, US'
      summary: Return navigation data for given vin.
      description: 'If vehicle tracking is disabled, the lat/lon value will be filtered out. if Backend delivers 0,0, this will be returned from API.'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: 'the vin[17 characters] for which the services will be returned'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/NavigationData'
        '403':
          description: user is not allowed to access
        '404':
          description: vehicle and/or data not found
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/vehicle/remoteservice/v1/{vin}':
    post:
      tags:
        - '/vehicle/remoteservice - EMEA, US [deprecated as of T3-16]'
      summary: 'Activates or Deactivates all remote services of the vehicle with the given vin, according to the parameter value.'
      description: ''

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: long vin
          required: true
          type: string
        - in: body
          name: body
          description: operation name
          required: true
          schema:
            $ref: '#/definitions/RemoteServiceOperationDO'
      responses:
        '200':
          description: remote services deactivated
        '400':
          description: one of the required parameters was incorrect
        '403':
          description: user is not allowed to access
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/vehicle/remoteservices/chargingprofile/v1/{vin}':
    get:
      tags:
        - '/vehicle/remoteservices/chargingprofile EMEA, US'
      summary: returns the current charging profile of the given electric vehicle from B2V (CCG)
      description: ''

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: ' vin'
          required: true
          type: string
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/ChargingProfile'
        '400':
          description: one of the required parameters was incorrect
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
    post:
      tags:
        - '/vehicle/remoteservices/chargingprofile EMEA, US'
      summary: Executes the remote service for charging profile
      description: ''

      consumes:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: vin
          required: true
          type: string
        - in: body
          name: body
          description: charging profile to be send to the car and stored in CSI
          required: true
          schema:
            $ref: '#/definitions/ChargingProfile'
      responses:
        '200':
          description: remote service was successfully executed
          schema:
            $ref: '#/definitions/RemoteServiceResultDO'
        '400':
          description: charging profile in payload is syntactically not valid </br> error code 'CHARGINGPROFILE_NOT_VALID'
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/vehicle/remoteservices/chargingprofile/v1/{vin}/state/execution':
    get:
      tags:
        - '/vehicle/remoteservices/chargingprofile EMEA, US'
      summary: returns the state and the date of the given execution
      description: ''

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: vin
          required: true
          type: string
        - name: eventId
          in: query
          description: eventId
          required: true
          type: string
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/ChargingProfileExecutionDO'
        '400':
          description: one of the required parameters was incorrect
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid or </br>event status is UNKNOWN or missing
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/vehicle/remoteservices/v1/{vin}/RCN':
    post:
      tags:
        - '/vehicle/remoteservices - EMEA, US'
      summary: This method executes the RemoteClimateNow remote service.
      description: IPVehicleService.executeRemoteService

      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: the vin
          required: true
          type: string
      responses:
        '200':
          description: execution of remote service is successful
          schema:
            $ref: '#/definitions/RemoteServiceResponseDO'
        '400':
          description: one of the required parameters was incorrect
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid or does not have needed feature
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/vehicle/remoteservices/v1/{vin}/RCP':
    get:
      tags:
        - '/vehicle/remoteservices - EMEA, US'
      summary: returns the current charging profile of the given electric vehicle from B2V (CCG)
      description: ''

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: ' vin'
          required: true
          type: string
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/ChargingProfile'
        '400':
          description: one of the required parameters was incorrect
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
    post:
      tags:
        - '/vehicle/remoteservices - EMEA, US'
      summary: Executes the remote service for charging profile
      description: ''

      consumes:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: vin
          required: true
          type: string
        - in: body
          name: body
          description: charging profile to be send to the car and stored in CSI
          required: true
          schema:
            $ref: '#/definitions/ChargingProfile'
      responses:
        '200':
          description: remote service was successfully executed
          schema:
            $ref: '#/definitions/RemoteServiceResultDO'
        '400':
          description: charging profile in payload is syntactically not valid </br> error code 'CHARGINGPROFILE_NOT_VALID'
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/vehicle/remoteservices/v1/{vin}/RCT':
    post:
      tags:
        - '/vehicle/remoteservices - EMEA, US'
      summary: This method executes the RemoteClimateTimer remote service.
      description: IPVehicleService.executeRemoteService

      consumes:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: the vin
          required: true
          type: string
        - in: body
          name: body
          description: payload of remote service in case of remote service type is of type 'RCT'
          required: false
          schema:
            $ref: '#/definitions/RemoteServiceRCTDO'
      responses:
        '200':
          description: execution of remote service is successful
          schema:
            $ref: '#/definitions/RemoteServiceResponseDO'
        '400':
          description: one of the required parameters was incorrect
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid or does not have needed feature
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/vehicle/remoteservices/v1/{vin}/RDL':
    post:
      tags:
        - '/vehicle/remoteservices - EMEA, US'
      summary: This method executes the RemoteDoorLock remote service.
      description: IPVehicleService.executeRemoteService

      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: the vin
          required: true
          type: string
      responses:
        '200':
          description: execution of remote service is successful
          schema:
            $ref: '#/definitions/RemoteServiceResponseDO'
        '400':
          description: one of the required parameters was incorrect
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid or does not have needed feature
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/vehicle/remoteservices/v1/{vin}/RDU':
    post:
      tags:
        - '/vehicle/remoteservices - EMEA, US'
      summary: This method executes the RemoteDoorUnlock remote service.
      description: IPVehicleService.executeRemoteService

      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: the vin
          required: true
          type: string
      responses:
        '200':
          description: execution of remote service is successful
          schema:
            $ref: '#/definitions/RemoteServiceResponseDO'
        '400':
          description: one of the required parameters was incorrect
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid or does not have needed feature
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/vehicle/remoteservices/v1/{vin}/RHB':
    post:
      tags:
        - '/vehicle/remoteservices - EMEA, US'
      summary: This method executes the RemoteHornBlow remote service.
      description: IPVehicleService.executeRemoteService

      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: the vin
          required: true
          type: string
      responses:
        '200':
          description: execution of remote service is successful
          schema:
            $ref: '#/definitions/RemoteServiceResponseDO'
        '400':
          description: one of the required parameters was incorrect
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid or does not have needed feature
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/vehicle/remoteservices/v1/{vin}/RLF':
    post:
      tags:
        - '/vehicle/remoteservices - EMEA, US'
      summary: This method executes the RemoteLightFlash remote service.
      description: IPVehicleService.executeRemoteService

      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: the vin
          required: true
          type: string
      responses:
        '200':
          description: execution of remote service is successful
          schema:
            $ref: '#/definitions/RemoteServiceResponseDO'
        '400':
          description: one of the required parameters was incorrect
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid or does not have needed feature
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/vehicle/remoteservices/v1/{vin}/VF':
    post:
      tags:
        - '/vehicle/remoteservices - EMEA, US'
      summary: This method executes the VehicleFinder remote service.
      description: IPVehicleService.executeRemoteService

      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: the vin
          required: true
          type: string
      responses:
        '200':
          description: execution of remote service is successful
          schema:
            $ref: '#/definitions/RemoteServiceResponseDO'
        '400':
          description: one of the required parameters was incorrect
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid or does not have needed feature
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/vehicle/remoteservices/v1/{vin}/history':
    get:
      tags:
        - '/vehicle/remoteservices - EMEA, US'
      summary: This method returns the remote service history.
      description: IPVehicleService.getServiceEventHistory

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: the vin
          required: true
          type: string
        - name: maxResult
          in: query
          description: maximum results (default = 15)
          required: false
          type: integer
          default: '15'
          format: int32
        - name: timeSpan
          in: query
          description: 'time span (in days, default = 21)'
          required: false
          type: integer
          default: '21'
          format: int32
      responses:
        '200':
          description: 'fetching remote service history is successful, resultlist is limited.'
          schema:
            type: array
            items:
              $ref: '#/definitions/RemoteServiceEventsDO'
        '400':
          description: parameter(s) in url is not syntactically valid
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid or does not have needed feature
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
    delete:
      tags:
        - '/vehicle/remoteservices - EMEA, US'
      summary: Deletes all remote services of vehicle in the history.
      description: IPVehicleService.clearServiceEventHistory

      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: the vin
          required: true
          type: string
      responses:
        '200':
          description: successful deletion of remote service history
        '400':
          description: parameter(s) in url is not syntactically valid
        '403':
          description: user is not allowed to access
        '404':
          description: no history found for given vin and user or vin does not have needed feature
        '500':
          description: An internal error occurred
        '503':
          description: A business exception occured
  '/vehicle/remoteservices/v1/{vin}/state/execution':
    get:
      tags:
        - '/vehicle/remoteservices - EMEA, US'
      summary: 'Returns the status of the last remoteservice execution, which was executed with this API or the CDP Customer-Portal.'
      description: ''

      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: the vin
          required: true
          type: string
      responses:
        '200':
          description: successful
          schema:
            $ref: '#/definitions/RemoteServiceEventDO'
        '400':
          description: parameter(s) in url is not syntactically valid
        '403':
          description: user is not allowed to access
        '404':
          description: vin is not related to given gcid or does not have needed feature
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/vehicle/service/v1/{vin}':
    get:
      tags:
        - '/vehicle/service - EMEA, US'
      summary: returns all telematic services for the given vehicle and the features for CDP Clients.
      description: 'UserProfileService.getSubscriptionsByVin(); formerly: /services/v1/{vin}'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: 'the vin[17 characters] for which the services will be returned'
          required: true
          type: string
        - name: all
          in: query
          description: 'all - if set to true, all the resources and services will be present in the response list'
          required: false
          type: boolean
          default: 'false'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/ResourceDO'
        '403':
          description: user is not allowed to access
        '404':
          description: vehicle and/or services not found or vehicle not assigned to given user
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/vehicle/servicepartner/v1/{vin}':
    get:
      tags:
        - '/vehicle/servicepartner - EMEA, US'
      summary: Returns servicepartner with coordinates for the given vehicle
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: 'the vin[17 characters] for which the services will be returned'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ServicePartnerAddressDO'
        '400':
          description: One of the required parameters was empty or incorrect
        '403':
          description: user is not allowed to access
        '404':
          description: Servicepartner not found for given vin
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
    post:
      tags:
        - '/vehicle/servicepartner - EMEA, US'
      summary: Change to servicepartner with partnerNo and subsidiaryNo for the given vehicle.
      description: 'The following errors may be returned with status 200: ANOTHER_SERVICEPARTNER_ORDER_IN_PROGRESS, SERVICEPARTNER_COUNTRY_SELECT_FAILURE.'

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: 'the vin[17 characters] for which the services will be changed.'
          required: true
          type: string
        - in: body
          name: body
          description: servicepartner
          required: true
          schema:
            $ref: '#/definitions/ServicePartnerIDsDO'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ServicePartnerStatusDO'
        '400':
          description: One of the required parameters was empty or incorrect
        '403':
          description: user is not allowed to access
        '404':
          description: Servicepartner not found
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
    delete:
      tags:
        - '/vehicle/servicepartner - EMEA, US'
      summary: Delete the servicepartner from the given vehicle.
      description: 'The following errors may be returned with status 200: ANOTHER_SERVICEPARTNER_ORDER_IN_PROGRESS.'

      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: 'the vin[17 characters] for which the services will be changed.'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ServicePartnerStatusDO'
        '400':
          description: One of the required parameters was empty or incorrect
        '403':
          description: user is not allowed to access
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/vehicle/servicepartner/v1/{vin}/search':
    get:
      tags:
        - '/vehicle/servicepartner - EMEA, US'
      summary: Search for service partner by coordinates (latitude / longitude). It is not allowed to search in other countries.
      description: 'Search range is 50 km, max results are 2000. the attribute with typeId=-77 is the ''partnerNumber'' and with typeId=-78 is the ''subsidaryNumber'''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: lat
          in: query
          description: latitude
          required: true
          type: number
          format: double
        - name: lon
          in: query
          description: longitude
          required: true
          type: number
          format: double
        - name: distanceUnit
          in: query
          description: distanceUnit
          required: false
          type: string
          enum:
            - KM
            - MILE
        - name: vin
          in: path
          description: 'the vin[17 characters] for which the services will be searched. Needed because ServicePartner depends on the brand of the vehicle.'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/PoiDO'
        '400':
          description: One of the required parameters was empty or incorrect
        '403':
          description: user is not allowed to access
        '404':
          description: Servicepartner not found
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/vehicle/specs/v1/{vin}':
    get:
      tags:
        - '/vehicle/specs - EMEA, US'
      summary: returns some technical data for a given vehicle
      description: 'for customers of market Japan, no data will be returned'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: X-rgw-gcid
          in: header
          description: gcid
          required: true
          type: string
          default: ''
        - name: vin
          in: path
          description: 'the vin[17 characters] for which the services will be returned'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/TechnicalDataDO'
        '403':
          description: user is not allowed to access
        '404':
          description: vehicle and/or data not found
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/vehicle/v1/{vin}':
    get:
      tags:
        - '/vehicle/v1 - EMEA, US [deprecated as of T3-16]'
      summary: returns all static vehicle details for a given vin (as a list with one entry)
      description: ''

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: vin
          in: path
          description: 'the vin[7 or 17 characters] for which the details will be returned. vin must not be assigned to customer.'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/VehicleStaticBasicDetailsDO'
        '404':
          description: vehicle and/or data not found
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/vehicle/v2/{vin}':
    get:
      tags:
        - '/vehicle/v2 - EMEA, US'
      summary: 'returns all static vehicle details for a given vin, no changes to v1-version except return format (no longer a one-element list, but an object)'
      description: 'UserProfileService.getVehicleDetailsV2(); formerly; /staticdata/v1/{vin}'

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: vin
          in: path
          description: 'the vin[7 or 17 characters] for which the details will be returned. vin must not be assigned to customer.'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/VehicleStaticBasicDetailsDO'
        '404':
          description: vehicle and/or data not found
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
  '/vehicle/v2/{vin}/bu':
    get:
      tags:
        - '/vehicle/v2 - EMEA, US'
      summary: 'returns the business unit with company code id stored in BIP for given vehicle, necessary for store v/3 functionality with SI/RI'
      description: IPVehicleManagement.retrieveVehicle

      produces:
        - application/json;charset=utf-8
      parameters:
        - name: vin
          in: path
          description: 'the vin[7 or 17 characters] for which business unit will be returned.'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/VehicleStaticBusinessUnitDO'
        '404':
          description: vehicle and/or data not found
        '500':
          description: An internal error occurred
          schema:
            $ref: '#/definitions/ErrorsDO'
        '503':
          description: A business exception occured
          schema:
            $ref: '#/definitions/ErrorsDO'
definitions:
  AddressDO:
    type: object
    properties:
      countryCode:
        type: string
      country:
        type: string
      region:
        type: string
      regionCode:
        type: string
      city:
        type: string
      postalCode:
        type: string
      postbox:
        type: string
      street:
        type: string
      formattedAddress:
        type: string
      neighborhood:
        type: string
      houseNumber:
        type: string
      streetName:
        type: string
      district:
        type: string
      county:
        type: string
      countyCode:
        type: string
      quarter:
        type: string
      block:
        type: string
      building:
        type: string
      floor:
        type: string
      unit:
        type: string
      crossing:
        type: string
      establishment:
        type: string
  AddressInformationDO:
    type: object
    properties:
      address:
        $ref: '#/definitions/ProfileAddressDO'
      missingAttributesAndConditions:
        $ref: '#/definitions/ValidationAttributesAndConditionsDO'
  AddressSuggestionDO:
    type: object
    required:
      - errorCode
      - suggestion
    properties:
      errorCode:
        type: string
      suggestion:
        type: string
  AddressSuggestionsDO:
    type: object
    properties:
      addressSuggestions:
        type: array
        items:
          $ref: '#/definitions/AddressSuggestionDO'
  AttributeDO:
    type: object
    properties:
      typeId:
        type: integer
        format: int64
      element:
        type: string
      name:
        type: string
      value:
        type: string
      resultId:
        type: integer
        format: int64
  AttributeSourceDO:
    type: object
    properties:
      sourceName:
        type: string
      attributes:
        type: array
        xml:
          name: attr
        items:
          $ref: '#/definitions/AttributeDO'
  BatteryGuardStatusDO:
    type: object
    required:
      - status
      - vin
    properties:
      vin:
        type: string
      status:
        type: string
        enum:
          - ACTIVE
          - INACTIVE
  CancelStatusDO:
    type: object
    properties:
      status:
        type: string
        enum:
          - SUCCESS
          - ARS_NOT_AVAILABLE
          - CANCEL_NOT_POSSIBLE
          - ALREADY_CANCELLED
  CharacteristicDO:
    type: object
    required:
      - characteristic
      - quantity
    properties:
      characteristic:
        type: string
        enum:
          - TOTAL_CONSUMPTION
          - AUXILIARY_CONSUMPTION
          - DRIVING_MODE
          - ACCELERATION
          - ANTICIPATION
          - CONSUMPTION
          - CHARGING_BEHAVIOUR
          - ELECTRIC_DRIVING
      quantity:
        type: integer
        format: int32
  ChargingProfile:
    type: object
    required:
      - xmlVersion
    properties:
      twoTimeTimer:
        $ref: '#/definitions/TwoTimeTimerType'
      weekTimer:
        $ref: '#/definitions/WeekTimerType'
      pendingUpdate:
        type: boolean
        default: false
      xmlVersion:
        $ref: '#/definitions/XmlVersionType'
    xml:
      name: ChargingProfile
  ChargingProfileExecutionDO:
    type: object
    properties:
      status:
        type: string
        enum:
          - STARTED
          - NACK
          - ACK
          - TIMEOUT
          - UNKNOWN
          - ERROR
      date:
        type: string
        format: date-time
  ChargingStationsDynamicDataRequestDO:
    type: object
    required:
      - dynamicCategoryId
    properties:
      dynamicCategoryId:
        type: string
        description: dynamicCategoryId
      poiKeys:
        type: array
        items:
          type: string
    description: Model describing a request object for the dynamic data operation for chargingstations.
  CheckOrderPreconditionsDO:
    type: object
    properties:
      address:
        description: customers billing address
        $ref: '#/definitions/ProfileAddressDO'
      statusList:
        type: array
        description: list of PreconditionStatus
        items:
          $ref: '#/definitions/PreconditionStatusDO'
      policiesToAgree:
        type: array
        description: policies to agree
        items:
          type: string
      prices:
        type: array
        description: US prices
        items:
          $ref: '#/definitions/PriceDO'
      paymentInfo:
        $ref: '#/definitions/PaymentInformationDO'
    description: Model describing offer details
  CheckinErrorV2DO:
    type: object
    required:
      - driveId
      - error
    properties:
      driveId:
        type: integer
        format: int64
      error:
        type: string
        enum:
          - ALREADY_CHECKEDIN
          - UNKNOWN_DRIVEID
          - TECHNICLE_ERROR_NOT_EDITED
          - CHECKIN_NOT_CHRONOLOGIC
          - CHECKIN_INCOMPLETE_MERGE
          - OFFICE_DRIVE_MANDATORY
  CodeTableDO:
    type: object
    required:
      - items
      - name
    properties:
      name:
        type: string
      items:
        type: array
        items:
          $ref: '#/definitions/KeyValueDO'
  CodeTablesByCountryDO:
    type: object
    properties:
      languageTables:
        type: array
        items:
          $ref: '#/definitions/CodeTablesByLanguageDO'
  CodeTablesByLanguageDO:
    type: object
    required:
      - codeTables
      - language
    properties:
      language:
        type: string
      codeTables:
        type: array
        items:
          $ref: '#/definitions/CodeTableDO'
  CommunityDO:
    type: object
    required:
      - community
    properties:
      community:
        type: string
        enum:
          - ACTIVATE
          - DEACTIVATE
  CompleteCustomerDO:
    type: object
    required:
      - customer
    properties:
      customer:
        description: customer
        $ref: '#/definitions/CustomerDO'
      customerAddress:
        $ref: '#/definitions/CustomerAddressDO'
    description: Model describing customer with customer private address and payment profile
  CompleteCustomerWithAddressSuggestionsDO:
    type: object
    required:
      - customer
    properties:
      customer:
        description: customer
        $ref: '#/definitions/CustomerDO'
      addressSuggestions:
        description: addressSuggestions
        $ref: '#/definitions/AddressSuggestionsDO'
      status:
        type: string
        description: status
        enum:
          - OK
          - USER_ALREADY_EXISTS_WITH_ANOTHER_GCID
          - ADDRESS_NOT_VALID
          - CUSTOMER_NOT_VALID
      customerAddress:
        $ref: '#/definitions/CustomerAddressDO'
    description: Model describing customer with customer private address and payment profile
  ConfigurationDO:
    type: object
    required:
      - firstTimeUsage
      - vin
    properties:
      vin:
        type: string
      licensePlateList:
        type: array
        items:
          $ref: '#/definitions/LicensePlateDO'
      showGeoPos:
        type: boolean
        default: false
      notification:
        type: string
        enum:
          - TWO_DAYS
          - FIVE_DAYS
          - SEVEN_DAYS
          - TWO_WEEKS
          - FOUR_WEEKS
          - NONE
      firstTimeUsage:
        type: boolean
        default: false
      bookingStatus:
        type: string
        enum:
          - BOOKED
          - SHORT_GRACE_PERIOD
          - LONG_GRACE_PERIOD
          - EXPIRED
  CoordinateDO:
    type: object
    properties:
      lat:
        type: number
        format: double
      lon:
        type: number
        format: double
  CreateEmailErrorDO:
    type: object
    required:
      - error
    properties:
      error:
        type: string
        enum:
          - WRONG_EMAIL_FORMAT
          - SIGNATURE_LENGTH_EXCEEDED
          - MAX_ACCOUNTS_EXCEEDED
          - ACCOUNT_EXISTS
  CustomerAddressDO:
    type: object
    properties:
      academicTitle1:
        type: string
      academicTitle2:
        type: string
      namePrefix1:
        type: string
      namePrefix2:
        type: string
      nameSuffix:
        type: string
      nameSupplement:
        type: string
      country:
        type: string
      coName:
        type: string
      alternateCompany:
        type: string
      companyDepartment:
        type: string
      alternateCompanyDepartment:
        type: string
      streetName:
        type: string
      addrLine1:
        type: string
      addrLine2:
        type: string
      addrLine3:
        type: string
      streetNumber:
        type: string
      streetNumberSuffix:
        type: string
      poBox:
        type: string
      cityName:
        type: string
      postalCode:
        type: string
      district:
        type: string
      region:
        type: string
      location:
        type: string
      buildingName:
        type: string
      floor:
        type: string
      room:
        type: string
      privatePhoneNumber:
        type: string
      officePhoneNumber:
        type: string
      mobilePhoneNumber:
        type: string
  CustomerBasicAddressDO:
    type: object
    properties:
      country:
        type: string
      streetName:
        type: string
      addrLine1:
        type: string
      addrLine2:
        type: string
      addrLine3:
        type: string
      streetNumber:
        type: string
      streetNumberSuffix:
        type: string
      poBox:
        type: string
      cityName:
        type: string
      postalCode:
        type: string
      district:
        type: string
      region:
        type: string
      location:
        type: string
      buildingName:
        type: string
      floor:
        type: string
      room:
        type: string
  CustomerBasicDO:
    type: object
    properties:
      loginEmail:
        type: string
      salutation:
        type: string
      firstName:
        type: string
      alternateFirstName:
        type: string
      lastName:
        type: string
      alternateLastName:
        type: string
      middleName:
        type: string
      alternateMiddleName:
        type: string
      language:
        type: string
      country:
        type: string
      customerAddress:
        description: customerAddress
        $ref: '#/definitions/CustomerBasicAddressDO'
  CustomerDO:
    type: object
    properties:
      loginEmail:
        type: string
      salutation:
        type: string
      firstName:
        type: string
      alternateFirstName:
        type: string
      lastName:
        type: string
      alternateLastName:
        type: string
      middleName:
        type: string
      alternateMiddleName:
        type: string
      language:
        type: string
      country:
        type: string
      preferredCommunicationChannel:
        type: string
      birthDate:
        type: string
      birthCountry:
        type: string
      birthProvince:
        type: string
      birthCity:
        type: string
      company:
        type: string
      accountType:
        type: string
        enum:
          - UNDEFINED
          - PRIVATE
          - BUSINESS
  CustomerInformationDO:
    type: object
    properties:
      customer:
        $ref: '#/definitions/CustomerDO'
      customerAddress:
        $ref: '#/definitions/CustomerAddressDO'
      missingAttributesAndConditionsCustomer:
        $ref: '#/definitions/ValidationAttributesAndConditionsDO'
      missingAttributesAndConditionsCustomerAddress:
        $ref: '#/definitions/ValidationAttributesAndConditionsDO'
  CustomerInformationV1DO:
    type: object
    properties:
      customer:
        $ref: '#/definitions/CustomerDO'
      customerAddress:
        $ref: '#/definitions/CustomerAddressDO'
      missingAttributesCustomer:
        $ref: '#/definitions/MandatoryAttributeSetV1DO'
      missingAttributesCustomerAddress:
        $ref: '#/definitions/MandatoryAttributeSetV1DO'
  CustomerLightDO:
    type: object
    properties:
      loginEmail:
        type: string
      salutation:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      mobilePhone:
        type: string
      language:
        type: string
      country:
        type: string
      preferredCommunicationChannel:
        type: string
  DealerAddressDO:
    type: object
    properties:
      dealer:
        $ref: '#/definitions/DealerDataDO'
      lat:
        type: number
        format: double
      lng:
        type: number
        format: double
  DealerDataDO:
    type: object
    required:
      - businessFax
      - businessPartnerId
      - businessPhone
      - city
      - country
      - countryIsoCode
      - dealerName
      - email
      - lastChangeDate
      - partnerNumber
      - portfolioCodes
      - portfolioNames
      - state
      - street
      - subsidiaryNumber
      - url
      - zipCode
    properties:
      dealerName:
        type: string
      businessPartnerId:
        type: string
      partnerNumber:
        type: string
      lastChangeDate:
        type: string
        format: date-time
      subsidiaryNumber:
        type: string
      countryIsoCode:
        type: string
      street:
        type: string
      zipCode:
        type: string
      city:
        type: string
      state:
        type: string
      country:
        type: string
      email:
        type: string
      url:
        type: string
      businessPhone:
        type: string
      businessFax:
        type: string
      portfolioCodes:
        type: string
      portfolioNames:
        type: string
    xml:
      name: DealerData
  DeleteAccountResponseDO:
    type: object
    properties:
      status:
        type: string
        enum:
          - OK
          - INVALID
          - 'NULL'
  DepartureTimeLongType:
    type: object
    required:
      - departureTime
      - timerActive
      - weekdays
    properties:
      departureTime:
        $ref: '#/definitions/TimeStampShortType'
      weekdays:
        $ref: '#/definitions/WeekdaysType'
      timerActive:
        type: string
        enum:
          - NO_ACTION
          - ACTIVATE
          - DEACTIVATE
  DriveDO:
    type: object
    required:
      - checkedIn
      - driveType
      - editType
      - endTrip
      - startTrip
      - technicalError
    properties:
      id:
        type: integer
        format: int64
        description: 'optional only, if editType==MERGED_DRIVE'
      technicalError:
        type: boolean
        default: false
      systemGenerated:
        type: string
        format: date-time
      driveType:
        type: string
        enum:
          - PRIVATE
          - HOME_WORK
          - OFFICE
      editType:
        type: string
        enum:
          - SINGLE_DRIVE
          - HISTORY_DRIVE
          - MERGED_DRIVE
          - MERGED_PART
          - SPLITTED_DRIVE
      driver:
        type: string
      reason:
        type: string
      customerVisited:
        type: string
      remark:
        type: string
      startTrip:
        $ref: '#/definitions/TripDO'
      endTrip:
        $ref: '#/definitions/TripDO'
      checkedIn:
        type: boolean
        default: false
      lfdNr:
        type: integer
        format: int32
      editHistory:
        type: array
        items:
          $ref: '#/definitions/EditHistoryDO'
  DriveGroupDO:
    type: object
    properties:
      drives:
        type: array
        items:
          $ref: '#/definitions/DriveDO'
  DynamicDataDO:
    type: object
    properties:
      attributesMap:
        type: object
        additionalProperties:
          type: string
      vehicleMessages:
        type: object
        additionalProperties:
          type: array
          items:
            $ref: '#/definitions/VehicleMessageDO'
  EditDriveDO:
    type: object
    required:
      - driveType
      - id
    properties:
      id:
        type: integer
        format: int64
      startAddress:
        type: string
        description: maxLength = 80
      endAddress:
        type: string
        description: maxLength = 80
      startDate:
        type: string
        format: date-time
      endDate:
        type: string
        format: date-time
      driver:
        type: string
        description: maxLength = 50
      driveType:
        type: string
        enum:
          - PRIVATE
          - HOME_WORK
          - OFFICE
      customerVisited:
        type: string
        description: maxLength = 100
      reason:
        type: string
        description: maxLength = 100
      remark:
        type: string
        description: mandatory for driveType=OFFICE; maxLength = 80
  EditErrorDO:
    type: object
    required:
      - error
    properties:
      error:
        type: string
        enum:
          - ID_MANDATORY
          - DRIVETYPE_MANDATORY
          - START_DATE_MANDATORY
          - END_DATE_MANDATORY
          - MAXLEN_EXCEEDED
          - NO_CHANGES
          - START_DATE_OVERLAP
          - END_DATE_OVERLAP
          - START_DATE_INVALID_FORMAT
          - END_DATE_INVALID_FORMAT
          - START_DATE_AFTER_END_DATE
          - MERGED_PART_NOT_EDITABLE
          - OFFICEDRIVE_CUSTOMER_MANDATORY
          - OFFICEDRIVE_DRIVER_MANDATORY
          - OFFICEDRIVE_REASON_MANDATORY
          - OFFICEDRIVE_REMARK_MANDATORY
          - HOME_WORK_DRIVE_REMARK_MANDATORY
  EditHistoryDO:
    type: object
    required:
      - dateTime
    properties:
      dateTime:
        type: string
        format: date-time
      remark:
        type: string
  EmailAccountDO:
    type: object
    required:
      - email
    properties:
      id:
        type: integer
        format: int64
      inboxProtocol:
        type: string
        enum:
          - IMAP
          - POP3
          - POP3S
          - IMAPS
      inboxHost:
        type: string
      inboxPort:
        type: integer
        format: int32
      smtpHost:
        type: string
      smtpPort:
        type: integer
        format: int32
      smtpUseAuth:
        type: boolean
        default: false
      smtpUseSSL:
        type: boolean
        default: false
      smtpUseTLS:
        type: boolean
        default: false
      smtpUseOtherAuth:
        type: boolean
        default: false
      smtpUserName:
        type: string
      smtpPassword:
        type: string
      email:
        type: string
      username:
        type: string
      password:
        type: string
      signature:
        type: string
  EmailProviderDO:
    type: object
    required:
      - host
      - id
      - name
      - port
      - protocol
      - smtpHost
      - smtpPort
      - smtpUseAuth
      - smtpUseSSL
      - smtpUseTLS
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
      protocol:
        type: string
      host:
        type: string
      port:
        type: integer
        format: int32
      usernameIsFullEmail:
        type: boolean
        description: 'if true, the username must be the complete email adress.'
        default: false
      smtpHost:
        type: string
      smtpPort:
        type: integer
        format: int32
      smtpUseAuth:
        type: boolean
        default: false
      smtpUseSSL:
        type: boolean
        default: false
      smtpUseTLS:
        type: boolean
        default: false
  EmailTemplateDO:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
        xml:
          name: header
      content:
        type: string
        xml:
          name: text
    xml:
      name: email_text_module_entry
  EmailValidationStatusV2DO:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        description: type
        enum:
          - INBOX
          - OUTBOX
      status:
        type: string
        enum:
          - OK
          - ERROR
          - INVALID_PASSWORD
          - INVALID_HOST
          - UNREACHABLE_HOST_PORT
          - INVALID_SSL_CERT
  ErrorDO:
    type: object
    properties:
      errorCode:
        type: string
      message:
        type: string
  ErrorsDO:
    type: object
    properties:
      errors:
        type: array
        items:
          $ref: '#/definitions/ErrorDO'
  ExtOfferCodeAndDiscountDO:
    type: object
    required:
      - offerCode
    properties:
      offerCode:
        description: offer that is bought
        $ref: '#/definitions/ExtOfferCodeDO'
      discountCode:
        type: string
        description: discount code for offer that is bought. Not used! Use basketdiscountCode for complete basket instead
    description: Model describing an offer and a discount for this offer
  ExtOfferCodeDO:
    type: object
    properties:
      offerCode:
        type: string
      extOfferCat:
        type: string
      extOfferSubCat:
        type: string
  ExtOfferCodeListDO:
    type: object
    properties:
      offerCodes:
        type: array
        items:
          $ref: '#/definitions/ExtOfferCodeDO'
  ExtOfferCodeV4DO:
    type: object
    properties:
      offerCode:
        type: string
      extOfferCat:
        type: string
      extOfferSubCat:
        type: string
  FeedDO:
    type: object
    required:
      - title
      - url
    properties:
      id:
        type: integer
        format: int64
      url:
        type: string
        description: maxLength = 1024
      title:
        type: string
        description: maxLength = 256
  FeedLinkDO:
    type: object
    required:
      - title
      - url
    properties:
      url:
        type: string
      title:
        type: string
  ForecastDO:
    type: object
    properties:
      date:
        type: string
        format: date-time
      forecastDescription:
        type: string
      overallDayForecast:
        $ref: '#/definitions/ForecastDataDO'
      morningForecast:
        $ref: '#/definitions/ForecastDataDO'
      noonForecast:
        $ref: '#/definitions/ForecastDataDO'
      eveningForecast:
        $ref: '#/definitions/ForecastDataDO'
      nightForecast:
        $ref: '#/definitions/ForecastDataDO'
  ForecastDataDO:
    type: object
    properties:
      weatherState:
        type: string
        enum:
          - HAZE
          - SUNNY
          - CLOUDY
          - CLOUDED
          - OVERCAST
          - FOG
          - LIGHT_RAIN
          - MODERATE_RAIN
          - HEAVY_RAIN
          - RAINSTORM
          - THUNDERSTORM
          - THUNDERSTORM_WITH_HAIL
          - LIGHT_SNOW
          - MODERATE_SNOW
          - HEAVY_SNOW
          - SNOWSTORM
          - SLEET
          - ICE_RAIN
          - HAIL
          - DUST
          - DUSTSTORM
          - SAND
          - SANDSTORM
          - UNKNOWN
      humidity:
        type: number
        format: double
      airPressure:
        type: number
        format: double
      minTemperature:
        type: number
        format: double
      maxTemperature:
        type: number
        format: double
      avgTemperature:
        type: number
        format: double
      windSpeed:
        type: number
        format: double
      windDirection:
        type: string
        enum:
          - NORTH
          - NORTHEAST
          - EAST
          - SOUTHEAST
          - SOUTH
          - SOUTHWEST
          - WEST
          - NORTHWEST
      chanceOfRain:
        type: integer
        format: int32
      avgRainfall:
        type: number
        format: double
      uvi:
        type: integer
        format: int64
      description:
        type: string
      sunrise:
        type: string
      sunset:
        type: string
  ForecastListDO:
    type: object
    properties:
      forecast:
        type: array
        items:
          $ref: '#/definitions/ForecastDO'
  HighResolutionDO:
    type: object
    required:
      - forecasts
    properties:
      provider:
        type: string
      resolution:
        type: integer
        format: int32
      unit:
        type: string
        enum:
          - C
          - F
      location:
        type: string
      forecasts:
        $ref: '#/definitions/HighResolutionsDO'
    xml:
      name: highresolutionforecast
  HighResolutionDataDO:
    type: object
    properties:
      weatherState:
        type: string
        enum:
          - HAZE
          - SUNNY
          - CLOUDY
          - CLOUDED
          - OVERCAST
          - FOG
          - LIGHT_RAIN
          - MODERATE_RAIN
          - HEAVY_RAIN
          - RAINSTORM
          - THUNDERSTORM
          - THUNDERSTORM_WITH_HAIL
          - LIGHT_SNOW
          - MODERATE_SNOW
          - HEAVY_SNOW
          - SNOWSTORM
          - SLEET
          - ICE_RAIN
          - HAIL
          - DUST
          - DUSTSTORM
          - SAND
          - SANDSTORM
          - UNKNOWN
      humidity:
        type: number
        format: double
      airPressure:
        type: number
        format: double
      temperature:
        type: number
        format: double
      windSpeed:
        type: number
        format: double
      windDirection:
        type: string
        enum:
          - NORTH
          - NORTHEAST
          - EAST
          - SOUTHEAST
          - SOUTH
          - SOUTHWEST
          - WEST
          - NORTHWEST
      chanceOfRain:
        type: integer
        format: int32
      avgRainfall:
        type: number
        format: double
      description:
        type: string
      time:
        type: string
  HighResolutionsDO:
    type: object
    properties:
      forecast:
        type: array
        items:
          $ref: '#/definitions/HighResolutionDataDO'
    xml:
      name: forecasts
  ImageUrlDO:
    type: object
    required:
      - angleUrls
      - vin
    properties:
      vin:
        type: string
      angleUrls:
        type: array
        items:
          $ref: '#/definitions/UrlAngleDO'
  ImportDataDO:
    type: object
    properties:
      numDrives:
        type: integer
        format: int32
      counter:
        type: integer
        format: int32
      id:
        type: integer
        format: int64
  InvoiceDocumentDO:
    type: object
    required:
      - creationDate
      - id
      - invoiceNumber
      - type
      - vin
    properties:
      id:
        type: string
      vin:
        type: string
      invoiceNumber:
        type: string
      creationDate:
        type: string
        format: date-time
      type:
        type: string
        enum:
          - INVOICE
          - RECEIPT
          - CREDITNOTE
          - REMINDER_1
          - REMINDER_2
          - REMINDER_3
          - UNKNOWN
  InvoiceDocumentV2DO:
    type: object
    required:
      - creationDate
      - id
      - invoiceNumber
      - orderId
      - type
      - vin
    properties:
      id:
        type: string
      vin:
        type: string
      invoiceNumber:
        type: string
      creationDate:
        type: string
        format: date-time
      type:
        type: string
        enum:
          - INVOICE
          - RECEIPT
          - CREDITNOTE
          - REMINDER_1
          - REMINDER_2
          - REMINDER_3
          - UNKNOWN
      orderId:
        type: string
        description: the customer Order Number for this invoice
      paymentStatus:
        type: string
        description: the Payment Status this invoice
        enum:
          - PENDING
          - PAID
          - DISPUTE
          - FAILED
  KeyValueDO:
    type: object
    properties:
      key:
        type: string
      value:
        type: string
  LanguageCodeDO:
    type: object
    properties:
      language:
        type: string
        description: the current language for documents
      availableLanguages:
        type: array
        description: returns a list of all possible language codes for the given user.
        items:
          type: string
  LastTripDO:
    type: object
    required:
      - lastTrip
      - name
    properties:
      name:
        type: string
        enum:
          - ACTUAL_DISTANCE_WITHOUT_CHARGING
          - AVERAGE_ELECTRIC_CONSUMPTION
          - AVERAGE_RECUPERATED_ENERGY_PER_100_KM
          - COMBINED_AVG_CONSUMED_LITERS_OVERALL
          - CUMULATED_ELECTRIC_DRIVEN_DISTANCE
          - LASTTRIP_DELTA_KM
          - LASTTRIP_DELTA_TIME
          - LASTTRIP_RATIO_ELECTRIC_DRIVEN_DISTANCE
          - LASTTRIP_TIME_SEGMENT_END
          - LONGEST_DISTANCE_WITHOUT_CHARGING
          - SAVED_LITERS_OVERALL
          - TIMESTAMP_STATISTICS_RESET
          - SAVED_CO2
          - SAVED_CO2_GREEN_ENERGY
      unit:
        type: string
        enum:
          - KWH
          - KWH_PER_100KM
          - MLS_PER_KWH
          - KM_PER_KWH
          - L_PER_100KM
          - MPG
          - KM_PER_L
          - KM
          - KG
          - LITER
          - MILE
          - MINUTES
          - PERCENTAGE
          - TIMESTAMP_STATISTICS_RESET
          - NONE
      lastTrip:
        type: string
  LicensePlateDO:
    type: object
    required:
      - created
      - licensePlate
    properties:
      licensePlate:
        type: string
      created:
        type: string
        format: date-time
      id:
        type: integer
        format: int64
  LifeTimeDO:
    type: object
    required:
      - lifeTime
      - name
    properties:
      name:
        type: string
        enum:
          - ACTUAL_DISTANCE_WITHOUT_CHARGING
          - AVERAGE_ELECTRIC_CONSUMPTION
          - AVERAGE_RECUPERATED_ENERGY_PER_100_KM
          - COMBINED_AVG_CONSUMED_LITERS_OVERALL
          - CUMULATED_ELECTRIC_DRIVEN_DISTANCE
          - LASTTRIP_DELTA_KM
          - LASTTRIP_DELTA_TIME
          - LASTTRIP_RATIO_ELECTRIC_DRIVEN_DISTANCE
          - LASTTRIP_TIME_SEGMENT_END
          - LONGEST_DISTANCE_WITHOUT_CHARGING
          - SAVED_LITERS_OVERALL
          - TIMESTAMP_STATISTICS_RESET
          - SAVED_CO2
          - SAVED_CO2_GREEN_ENERGY
      unit:
        type: string
        enum:
          - KWH
          - KWH_PER_100KM
          - MLS_PER_KWH
          - KM_PER_KWH
          - L_PER_100KM
          - MPG
          - KM_PER_L
          - KM
          - KG
          - LITER
          - MILE
          - MINUTES
          - PERCENTAGE
          - TIMESTAMP_STATISTICS_RESET
          - NONE
      lifeTime:
        type: string
  LinkRequestDO:
    type: object
    required:
      - url
    properties:
      url:
        type: string
        description: 'url or part of url, like bmw.de'
  ListOfDepartureTimesType:
    type: object
    required:
      - departureTimeLong
    properties:
      departureTimeLong:
        type: array
        items:
          $ref: '#/definitions/DepartureTimeLongType'
  LocationDO:
    type: object
    properties:
      latitude:
        type: number
        format: double
      longitude:
        type: number
        format: double
      city:
        type: string
      country:
        type: string
  LoginSettingsDO:
    type: object
    properties:
      loginConfig:
        type: string
        enum:
          - CONFIDENTIAL_APPS
          - WML_BON_START
          - AUTO_LOGIN
      availableTypes:
        type: array
        items:
          type: string
          enum:
            - CONFIDENTIAL_APPS
            - WML_BON_START
            - AUTO_LOGIN
  MandatoryAttributeChoiceV1DO:
    type: object
    properties:
      choiceA:
        type: array
        items:
          $ref: '#/definitions/MandatoryAttributeV1DO'
      choiceB:
        type: array
        items:
          $ref: '#/definitions/MandatoryAttributeV1DO'
      choiceC:
        type: array
        items:
          $ref: '#/definitions/MandatoryAttributeV1DO'
  MandatoryAttributeSetV1DO:
    type: object
    properties:
      mandatoryAttributes:
        type: array
        items:
          $ref: '#/definitions/MandatoryAttributeV1DO'
      mandatoryAttributeChoices:
        type: array
        items:
          $ref: '#/definitions/MandatoryAttributeChoiceV1DO'
  MandatoryAttributeV1DO:
    type: object
    properties:
      attributeName:
        type: string
      format:
        type: string
      type:
        type: string
        enum:
          - STRING
          - INT
          - ENUM
          - DATE
      minLength:
        type: integer
        format: int32
      maxLength:
        type: integer
        format: int32
      codeTableName:
        type: string
      enumValues:
        type: array
        items:
          type: string
  MapUpdateAreaDO:
    type: object
    properties:
      areaId:
        type: string
      selected:
        type: boolean
        default: false
  MapUpdateAreasPayloadDO:
    type: object
    properties:
      areas:
        type: array
        items:
          type: string
  MapUpdateDO:
    type: object
    properties:
      areas:
        type: array
        items:
          $ref: '#/definitions/MapUpdateAreaDO'
      mapVersion:
        type: string
      fullUpdateRequired:
        type: boolean
        default: false
    description: MapUpdateDO
  MapUrlDO:
    type: object
    properties:
      url:
        type: string
  MappingConfirmationStatusDO:
    type: object
    properties:
      status:
        type: string
        enum:
          - OK
          - SECURITYTOKEN_NOT_MATCHING
          - MAX_RETRY_COUNT_EXCEEDED
          - RELATIONSHIP_NOT_EXISTS_FOR_VIN_GCID
          - ANOTHER_RELATIONSHIP_ORDER_IN_PROGRESS
          - MAPPING_DISABLED
          - SECURITY_TOKEN_EXPIRED
          - SECURITY_TOKEN_INCORRECT_KNOWN_TOKEN_EXPIRED
          - BACKEND_SYSTEM_DOWN_NO_USER_ACTION
          - BACKEND_SYSTEM_DOWN_USER_ACTION
          - RELATIONSHIP_CANNOT_BE_CONFIRMED
          - CUSTOMER_DOES_NOT_EXIST
          - VEHICLE_DOES_NOT_EXIST
      mappingStatus:
        type: string
        description: 'for T3-compability, same value like ''status''. will be removed with T-16 Release'
        enum:
          - OK
          - SECURITYTOKEN_NOT_MATCHING
          - MAX_RETRY_COUNT_EXCEEDED
          - RELATIONSHIP_NOT_EXISTS_FOR_VIN_GCID
          - ANOTHER_RELATIONSHIP_ORDER_IN_PROGRESS
          - MAPPING_DISABLED
          - SECURITY_TOKEN_EXPIRED
          - SECURITY_TOKEN_INCORRECT_KNOWN_TOKEN_EXPIRED
          - BACKEND_SYSTEM_DOWN_NO_USER_ACTION
          - BACKEND_SYSTEM_DOWN_USER_ACTION
          - RELATIONSHIP_CANNOT_BE_CONFIRMED
          - CUSTOMER_DOES_NOT_EXIST
          - VEHICLE_DOES_NOT_EXIST
    description: contains possible status code after first step of mapping process
  MappingInitStatusDO:
    type: object
    properties:
      status:
        type: string
        enum:
          - OK
          - FAILURE
          - EXISTS
          - NOTMYINFO_COMPLIANT
          - CUSTOMER_DOES_NOT_EXIST
          - VEHICLE_NOT_BMW
          - ANOTHER_RELATIONSHIP_ORDER_IN_PROGRESS
          - BU_CHANGE_NOT_ALLOWED
          - MAPPING_DISABLED
          - WAIVED
          - FLEET_VEHICLE
          - NOT_ALLOWED_TO_CREATE_SECONDARY
          - BACKEND_SYSTEM_DOWN_NO_USER_ACTION
          - BACKEND_SYSTEM_DOWN_USER_ACTION
          - SAVING_LICENSE_PLATE_FAILED
          - NO_ADDRESS_AVAILABLE
      mappingStatus:
        type: string
        description: 'for T3-compability, same value like ''status''. will be removed with T3-16 Release'
        enum:
          - OK
          - FAILURE
          - EXISTS
          - NOTMYINFO_COMPLIANT
          - CUSTOMER_DOES_NOT_EXIST
          - VEHICLE_NOT_BMW
          - ANOTHER_RELATIONSHIP_ORDER_IN_PROGRESS
          - BU_CHANGE_NOT_ALLOWED
          - MAPPING_DISABLED
          - WAIVED
          - FLEET_VEHICLE
          - NOT_ALLOWED_TO_CREATE_SECONDARY
          - BACKEND_SYSTEM_DOWN_NO_USER_ACTION
          - BACKEND_SYSTEM_DOWN_USER_ACTION
          - SAVING_LICENSE_PLATE_FAILED
          - NO_ADDRESS_AVAILABLE
      message:
        type: string
  MappingInitStatusV3DO:
    type: object
    properties:
      status:
        type: string
        enum:
          - OK
          - FAILURE
          - EXISTS
          - NOTMYINFO_COMPLIANT
          - CUSTOMER_DOES_NOT_EXIST
          - VEHICLE_NOT_BMW
          - ANOTHER_RELATIONSHIP_ORDER_IN_PROGRESS
          - BU_CHANGE_NOT_ALLOWED
          - MAPPING_DISABLED
          - WAIVED
          - FLEET_VEHICLE
          - NOT_ALLOWED_TO_CREATE_SECONDARY
          - BACKEND_SYSTEM_DOWN_NO_USER_ACTION
          - BACKEND_SYSTEM_DOWN_USER_ACTION
          - SAVING_LICENSE_PLATE_FAILED
          - NO_ADDRESS_AVAILABLE
          - MAPPING_BLOCKED
      message:
        type: string
  MappingPreconditionsDO:
    type: object
    required:
      - status
      - vin
    properties:
      model:
        type: string
        description: model
      market:
        type: string
        description: market
      policyId:
        type: string
        description: policyId
      vin:
        type: string
        description: vin
      marketChange:
        type: boolean
        description: marketChange
        default: false
      status:
        type: string
        description: status
        enum:
          - NOTFOUND
          - VEHICLE_NOT_BMW
          - NOTMYINFO_COMPLIANT
          - WAIVED
          - FLEET_VEHICLE
          - BACKEND_SYSTEM_DOWN_NO_USER_ACTION
      error:
        type: string
        description: 'for T3-compability, same value like ''status''. will be removed with T-16 Release'
        enum:
          - NOTFOUND
          - VEHICLE_NOT_BMW
          - NOTMYINFO_COMPLIANT
          - WAIVED
          - FLEET_VEHICLE
          - BACKEND_SYSTEM_DOWN_NO_USER_ACTION
  MappingPreconditionsV3DO:
    type: object
    required:
      - status
      - vin
    properties:
      model:
        type: string
        description: model
      market:
        type: string
        description: market
      policyId:
        type: string
        description: policyId
      vin:
        type: string
        description: vin
      marketChange:
        type: boolean
        description: marketChange
        default: false
      status:
        type: string
        description: status
        enum:
          - NOTFOUND
          - VEHICLE_NOT_BMW
          - NOTMYINFO_COMPLIANT
          - WAIVED
          - FLEET_VEHICLE
          - BACKEND_SYSTEM_DOWN_NO_USER_ACTION
          - MAPPING_BLOCKED
  MarketDO:
    type: object
    properties:
      country:
        type: string
      language:
        type: array
        items:
          type: string
  MarketsDO:
    type: object
    properties:
      market:
        type: array
        items:
          $ref: '#/definitions/MarketDO'
  MasterOfferAvailabilityDO:
    type: object
    required:
      - descriptionAvailable
      - offerCode
    properties:
      offerCode:
        type: string
      descriptionAvailable:
        type: boolean
        default: false
  MasterOfferDO:
    type: object
    required:
      - masterOfferCode
      - parentHierarchy
      - storeOffer
      - type
    properties:
      masterOfferCode:
        type: string
        description: 'the master offer code, Base_xxx (e. g. Base_RTTIOffer)'
      type:
        type: string
        description: 'the product type: offer, (mobile) app, ...'
        enum:
          - 'OFF'
          - PROD
          - COMP
          - SUB
          - APP
          - ALL
      parentHierarchy:
        type: array
        description: 'the parent offer codes, e. g. Base_CDwAppsOffer, Base_CDwoAppsOffer'
        items:
          type: string
      mustBookBefore:
        type: array
        description: 'offers that must be booked, before this offer can be booked'
        items:
          type: string
      storeOffer:
        type: array
        description: 'list of Connected Drive offers belonging to this base offer, e. g. BE_BM_00_RTTIOffer001, BE_BM_00_RTTIOffer006, ... the offers are business unit (country) specific, brand specific, and have a distinct contract period.'
        items:
          $ref: '#/definitions/SubOfferDO'
      offerCategories:
        type: array
        description: 'list of offer categories (enum): BASIC_PACKAGE, BMW_I, BUNDLE, COMFORT, CONTROL, ENTERTAINMENT, MARKET_SG, MINI, MOBILITY, OFFICE_PRODUCTIVITY, OPS, RR, SAFETY, SERVICE, TEST, TRIAL'
        items:
          type: string
          enum:
            - BASIC_PACKAGE
            - MOBILITY
            - TRIAL
            - TEST
            - RR
            - MINI
            - BMW_I
            - COMFORT
            - CONTROL
            - SERVICE
            - SAFETY
            - ENTERTAINMENT
            - OFFICE_PRODUCTIVITY
            - OPS
            - REMOTE
            - BUNDLE
            - MARKET_SG
      offerPosition:
        type: integer
        format: int32
        description: 'offers position, for sorting purposes (offer positions are not consecutive)'
      externalOffer:
        type: string
        description: 'Set to ''SI'', if this is an external SI offer; set to ''DIG'', if this is a ''smart access'' offer; otherwise empty; new with store/v3 api'
    description: base offer (wrapper offer) describing Connected Drive offers with different contract periods
  MergeDriveDO:
    type: object
    required:
      - driveType
      - mergeIds
      - remark
    properties:
      mergeIds:
        type: array
        items:
          type: integer
          format: int64
      driver:
        type: string
        description: mandatory for driveType=OFFICE; maxLength = 50
      driveType:
        type: string
        enum:
          - PRIVATE
          - HOME_WORK
          - OFFICE
      customerVisited:
        type: string
        description: mandatory for driveType=OFFICE; maxLength = 100
      reason:
        type: string
        description: mandatory for driveType=OFFICE; maxLength = 100
      remark:
        type: string
        description: maxLength = 80
  MergeErrorDO:
    type: object
    required:
      - error
    properties:
      error:
        type: string
        enum:
          - MERGEIDS_MANDATORY
          - DRIVETYPE_MANDATORY
          - REMARK_MANDATORY
          - OFFICEDRIVE_CUSTOMER_MANDATORY
          - OFFICEDRIVE_DRIVER_MANDATORY
          - OFFICEDRIVE_REASON_MANDATORY
          - MAXLEN_EXCEEDED
          - TECHNICLE_ERROR_NOT_EDITED
          - MERGE_NOT_CHRONOLOGIC
          - ALREADY_MERGED
          - DRIVEID_NOT_FOUND
  MyInfoDO:
    type: object
    required:
      - message
      - subject
      - vins
    properties:
      vins:
        type: array
        items:
          type: string
      message:
        type: string
        description: 'message, maximal 255 charcters'
      subject:
        type: string
        description: 'subject, maximal 20 characters'
      lat:
        type: string
      lng:
        type: string
      country:
        type: string
      countryCode:
        type: string
      zip:
        type: string
      region:
        type: string
      regionCode:
        type: string
      county:
        type: string
      countyCode:
        type: string
      district:
        type: string
      city:
        type: string
      quarter:
        type: string
      neighborhood:
        type: string
      block:
        type: string
      street:
        type: string
      number:
        type: string
      building:
        type: string
      floor:
        type: string
      crossing:
        type: string
      establishment:
        type: string
      organization:
        type: string
      category:
        type: string
      title:
        type: string
      name:
        type: string
      firstname:
        type: string
      middlename:
        type: string
      phonetype1:
        type: string
        enum:
          - UNKNOWN
          - HOME
          - WORK
          - CELL
      phonetype2:
        type: string
        enum:
          - UNKNOWN
          - HOME
          - WORK
          - CELL
      phonetype3:
        type: string
        enum:
          - UNKNOWN
          - HOME
          - WORK
          - CELL
      phonetype4:
        type: string
        enum:
          - UNKNOWN
          - HOME
          - WORK
          - CELL
      phone1:
        type: string
      phone2:
        type: string
      phone3:
        type: string
      phone4:
        type: string
      email:
        type: string
      formattedPhoneNumber:
        type: string
      internationalPhoneNumber:
        type: string
      url:
        type: string
  NavigationData:
    type: object
    required:
      - driveTrain
      - eco
      - ecoEv
      - isoCountryCode
      - norm
      - normEv
      - vehicleMass
    properties:
      latitude:
        type: number
        format: double
      longitude:
        type: number
        format: double
      isoCountryCode:
        type: string
      auxPowerRegular:
        type: number
        format: double
      auxPowerEcoPro:
        type: number
        format: double
      auxPowerEcoProPlus:
        type: number
        format: double
      soc:
        type: number
        format: double
        xml:
          name: SOC
      eco:
        type: string
      norm:
        type: string
      ecoEv:
        type: string
      normEv:
        type: string
      vehicleMass:
        type: string
      driveTrain:
        type: string
      pendingUpdate:
        type: boolean
        default: false
      vehicleTracking:
        type: boolean
        default: false
      socmax:
        type: number
        format: double
      kaccReg:
        type: string
      kdecReg:
        type: string
      kaccEco:
        type: string
      kdecEco:
        type: string
      kup:
        type: string
      kdown:
        type: string
    xml:
      name: navigationData
  OfferAndPolicyListV2DO:
    type: object
    required:
      - offerCodeAndDiscount
      - policiesToAgree
    properties:
      salesChannel:
        type: string
        description: sales channel used when buying offer in store
        enum:
          - INTERNET
          - MOBILE
      offerCodeAndDiscount:
        type: array
        description: 'list of offer codes to be bought, possibly with discounts'
        items:
          $ref: '#/definitions/OfferCodeAndDiscountDO'
      policiesToAgree:
        type: array
        description: policies user needs to agree to prior to buying offer
        items:
          type: string
    description: 'Model describing offers, discounts and belonging policies; sales channel not mandatory (default: INTERNET)'
  OfferAndPolicyListV3DO:
    type: object
    required:
      - offerCodeAndDiscount
      - policiesToAgree
    properties:
      salesChannel:
        type: string
        description: sales channel used when buying offer in store
        enum:
          - INTERNET
          - MOBILE
      offerCodeAndDiscount:
        type: array
        description: 'list of offer codes to be bought, possibly with discounts'
        items:
          $ref: '#/definitions/ExtOfferCodeAndDiscountDO'
      policiesToAgree:
        type: array
        description: policies user needs to agree to prior to buying offer
        items:
          type: string
      referenceTimestamp:
        type: string
        format: date-time
        description: 'reference timestamp from validate shopping basket response (store/v3/basket/{market}/{vin}/validation)'
      basketDiscountCode:
        type: string
        description: discount code for offers in shopping basket
    description: 'Model describing offers, discounts and belonging policies; sales channel not mandatory (default: INTERNET)'
  OfferAndPolicyListV4DO:
    type: object
    required:
      - policiesToAgree
    properties:
      salesChannel:
        type: string
        description: sales channel used when buying offer in store
        enum:
          - INTERNET
          - MOBILE
      policiesToAgree:
        type: array
        description: policies user needs to agree to prior to buying offer
        items:
          type: string
      referenceTimestamp:
        type: string
        format: date-time
        description: 'reference timestamp from validate shopping basket response (store/v4/basket/{market}/{vin}/validation)'
      basketDiscountCode:
        type: string
        description: discount code for offers in shopping basket
      offerCodes:
        type: array
        items:
          $ref: '#/definitions/ExtOfferCodeV4DO'
    description: 'Model describing offers, discounts and belonging policies; sales channel not mandatory (default: INTERNET)'
  OfferCodeAndDiscountDO:
    type: object
    required:
      - offerCode
    properties:
      offerCode:
        type: string
        description: offer that is bought
      discountCode:
        type: string
        description: discount code for offer that is bought
    description: Model describing an offer and a discount for this offer
  OfferCodeAndStatusV2DO:
    type: object
    properties:
      offerCode:
        type: string
        description: an offer code
      status:
        type: string
        description: status of the offer with given offer code
        enum:
          - RECEIVED
          - PROVISIONING
          - COMPLETED
          - ERROR
          - ACTIVATION_REQUIRED
          - CANCELED
    description: 'Model describing the status of a single offer belonging to an order for one vin, after customer submitted shopping basket'
  OfferCodeAndStatusV3DO:
    type: object
    properties:
      offerCode:
        type: string
        description: an offer code
      status:
        type: string
        description: status of the offer with given offer code
        enum:
          - RECEIVED
          - PROVISIONING
          - COMPLETED
          - ERROR
          - ACTIVATION_REQUIRED
          - CANCELED
      netPrice:
        type: string
        description: The Net Price of the Offer
      grossPrice:
        type: string
        description: The Gross Price of the Offer
      offerLabel:
        type: string
        description: The Label of the Offer
      startDate:
        type: string
        format: date-time
        description: The Start Date of the Offer
      endDate:
        type: string
        format: date-time
        description: The End Date of the Offer
    description: 'Model describing the status of a single offer belonging to an order for one vin, after customer submitted shopping basket'
  OfferCodeListDO:
    type: object
    properties:
      offerCodes:
        type: array
        items:
          type: string
  OfferCompatibilityDO:
    type: object
    properties:
      compatible:
        type: boolean
        default: false
  OfferDeletionItemDO:
    type: object
    properties:
      offerCode:
        type: string
      masterOfferId:
        type: string
      errorCode:
        type: string
        enum:
          - OK
          - NOT_FOUND
          - NOT_ELIGIBLE
          - MISSING_PARENT
          - IN_PORTFOLIO
  OfferLineItemDO:
    type: object
    properties:
      offerCode:
        type: string
      masterOfferId:
        type: string
      prices:
        type: array
        items:
          $ref: '#/definitions/PriceV2DO'
      taxRate:
        type: number
        format: double
  OfferSuggestionItemDO:
    type: object
    properties:
      offerCode:
        type: string
      masterOfferId:
        type: string
      offerSuggestionOfferCode:
        type: string
      offerSuggestionsMasterOfferId:
        type: string
      errorCode:
        type: string
        enum:
          - OK
          - NOT_FOUND
          - NOT_ELIGIBLE
          - MISSING_PARENT
          - IN_PORTFOLIO
  OrderStatusDO:
    type: object
    properties:
      status:
        type: string
        enum:
          - SUCCESS
          - FAILURE
          - ORDER_IN_PROGRESS
          - POLICY_AGREEMENT_FAILURE
          - IS_WAIVED
  OrderStatusV2DO:
    type: object
    required:
      - status
    properties:
      status:
        type: string
        description: 'status of order ''Received'', ''Provisioning'', ''Completed'', ''Error'', or ''Canceled'''
        enum:
          - RECEIVED
          - PROVISIONING
          - COMPLETED
          - ERROR
          - ACTIVATION_REQUIRED
          - CANCELED
      processId:
        type: integer
        format: int64
        description: processId order id of this order status
      orderId:
        type: string
        description: order id of this order status
      relatedOrderId:
        type: string
        description: order id of original order for reference purposes
      vin:
        type: string
        description: vin
      creationDate:
        type: string
        format: date-time
        description: creationDate
      salesChannel:
        type: string
        description: the sales channel given when this order was submitted
      offerCodeAndStatus:
        type: array
        description: contains a list of offer codes belonging to this order
        items:
          $ref: '#/definitions/OfferCodeAndStatusV2DO'
    description: 'Model describing the status of an order for one vin, after customer submitted shopping basket'
  OrderStatusV3DO:
    type: object
    required:
      - status
    properties:
      status:
        type: string
        description: 'status of order ''Received'', ''Provisioning'', ''Completed'', ''Error'', or ''Canceled'''
        enum:
          - RECEIVED
          - PROVISIONING
          - COMPLETED
          - ERROR
          - ACTIVATION_REQUIRED
          - CANCELED
      processId:
        type: integer
        format: int64
        description: processId order id of this order status
      orderId:
        type: string
        description: order id of this order status
      relatedOrderId:
        type: string
        description: order id of original order for reference purposes
      vin:
        type: string
        description: vin
      creationDate:
        type: string
        format: date-time
        description: creationDate
      salesChannel:
        type: string
        description: the sales channel given when this order was submitted
      offerCodeAndStatus:
        type: array
        description: contains a list of offer codes belonging to this order
        items:
          $ref: '#/definitions/OfferCodeAndStatusV3DO'
      orderNetPrice:
        type: string
        description: The Net Price of the Order
      orderGrossPrice:
        type: string
        description: The Gross Price of the Order
      orderTax:
        type: string
        description: The Tax Value of the Order
    description: 'Model describing the status of an order for one vin, after customer submitted shopping basket'
  ParkNowVehicleDO:
    type: object
    properties:
      hashedvin:
        type: string
      licensePlate:
        type: string
      model:
        type: string
      brand:
        type: string
      parktransaction:
        type: boolean
        default: false
    description: ParkTransactionVehicleDO
  ParkingCategoryResponseDO:
    type: object
    properties:
      category:
        type: string
  PaymentInformationDO:
    type: object
    properties:
      lastFourCardNumbers:
        type: string
      institute:
        type: string
      cardToDate:
        type: string
        description: card valid thru date coded as MMYY
      paymentMethod:
        type: string
        enum:
          - CREDITCARD
          - DEBIT
          - INVOICE
      cardId:
        type: string
  PaymentStatusDO:
    type: object
    properties:
      status:
        type: string
        enum:
          - OK
          - ORDER_STILL_PENDING
  PersonalImageDO:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      size:
        type: integer
        format: int64
  PoiDO:
    type: object
    properties:
      id:
        type: integer
        format: int64
      key:
        type: string
      name:
        type: string
      address:
        xml:
          name: addr
        $ref: '#/definitions/AddressDO'
      latitude:
        type: number
        format: double
        xml:
          name: lat
      longitude:
        type: number
        format: double
        xml:
          name: lng
      openingHours:
        type: string
        xml:
          name: oh
      openStatus:
        type: string
        xml:
          name: open
        enum:
          - C
          - O
          - 'N'
      distance:
        type: number
        format: double
        xml:
          name: dist
      provider:
        type: string
      attributes:
        type: array
        xml:
          name: attr
        items:
          $ref: '#/definitions/AttributeDO'
      categories:
        type: string
      categoryHierarchies:
        type: string
      dynamicCategoryId:
        type: string
      subsupplier:
        type: string
      attributeSource:
        type: array
        items:
          $ref: '#/definitions/AttributeSourceDO'
      reviews:
        $ref: '#/definitions/ReviewListDO'
  PoliciesToAgreeDO:
    type: object
    properties:
      salesChannel:
        type: string
        description: sales channel used when buying offer in store
        enum:
          - INTERNET
          - MOBILE
      policiesToAgree:
        type: array
        items:
          type: string
  PortfolioDO:
    type: object
    required:
      - cancelable
      - contractPeriod
      - contractPeriodUnit
      - masterOfferCode
      - offerCode
      - parentHierarchy
      - portfolioId
      - status
      - type
      - visible
    properties:
      portfolioId:
        type: string
        description: 'unique id of portfolio, e. g. 81683760'
      type:
        type: string
        description: 'type of product (enum): OFF, PROD, COMP, SUB, APP'
        enum:
          - 'OFF'
          - PROD
          - COMP
          - SUB
          - APP
      serviceStartDate:
        type: string
        format: date-time
        description: start date of this product
      serviceEndDate:
        type: string
        format: date-time
        description: 'end date of this product, if this product is not a lifelong product'
      previousServiceEndDate:
        type: string
        format: date-time
        description: 'end date of previously booked portfolio, if this is a renewal of a previously booked offer'
      status:
        type: string
        description: 'status of offer (enum): ACTIVE, SUSPENDED, WAIVED'
        enum:
          - ACTIVE
          - WAIVED
          - SUSPENDED
      offerCode:
        type: string
        description: 'the offer code of the this booked offer, e. g. BE_BM_00_SA6AE_TServicesOffer000'
      masterOfferCode:
        type: string
        description: 'the base (wrapper) offer this booked offer belongs to , e. g. Base_TServicesOffer'
      parentHierarchy:
        type: array
        description: 'the parent offers that must have been booked also as a prerequisite to this booked offer, e. g. Base_CDwAppsOffer'
        items:
          type: string
      orderState:
        type: string
        description: 'only available for certain offers (that are booked via store?), denotes state of this booked offer: O_NR_DRA (Draft), O_NR_PRE (Presented), O_R_PRO (Provisioning), O_R_ERR (Error), C_C (Completed), C_X (Cancelled), O_NR_SUB (Submitted), O_NR_P (Parked)'
      storeOffer:
        type: array
        description: the offers that can be booked in or to renew this booked offer; only shown one month prior to expiration date of this booked offer
        items:
          $ref: '#/definitions/SubOfferDO'
      visible:
        type: boolean
        description: 'denotes if this booked offer should be visible in client (FuPo); there are booked offers that are not supposed to be visible, because they are secret (like ability to trace whereabouts of vehicle)'
        default: false
      cancelable:
        type: boolean
        description: 'denotes whether this booked offer can still be cancelled, cancellation only available for a limited amount of time after booking'
        default: false
      contractPeriod:
        type: integer
        format: int32
        description: 'the contract period of this booked in months or days (depending of contractPeriodUnit); 0 means lifelong; mostly 1 (month), 6 (months), 12 (months), 24 (months)'
      contractPeriodUnit:
        type: string
        description: 'the unit of the given contractPeriod: M (months), D (days)'
        enum:
          - DAYS
          - MONTHS
          - UNKNOWN
      offerCategories:
        type: array
        description: 'list of offer categories (enum): BASIC_PACKAGE, BMW_I, BUNDLE, COMFORT, CONTROL, ENTERTAINMENT, MARKET_SG, MINI, MOBILITY, OFFICE_PRODUCTIVITY, OPS, RR, SAFETY, SERVICE, TEST, TRIAL'
        items:
          type: string
          enum:
            - BASIC_PACKAGE
            - MOBILITY
            - TRIAL
            - TEST
            - RR
            - MINI
            - BMW_I
            - COMFORT
            - CONTROL
            - SERVICE
            - SAFETY
            - ENTERTAINMENT
            - OFFICE_PRODUCTIVITY
            - OPS
            - REMOTE
            - BUNDLE
            - MARKET_SG
      offerPosition:
        type: integer
        format: int32
        description: 'offers position, for sorting purposes (offer positions are not consecutive)'
      distributionChannel:
        type: string
        description: 'the distribution channel used when buying this portfolio, either Internet or ExFactory'
        enum:
          - INTERNET
          - EXFACTORY
      extOfferCat:
        type: string
        description: 'best type, only set for service inclusive offers (external offers); example best types: B, S, F, R, A, C, E; new with store/v3 api'
      extOfferSubCat:
        type: string
        description: 'SA code (Sonderausstattung), only set for service inclusive offers (external offers); new with store/v3 api'
      upgradeCodeFrom:
        type: string
        description: 'SA code (Sonderausstattung) and best type of previously booked service inclusive offer (external offer), only set for service inclusive offers (external offers), only set, if this is an upgrade offer; new with store/v3 api'
      endMileage:
        type: string
        description: 'endmileage of this service inclusive offer (external offer), only set for service inclusive offers (external offers); new with store/v3 api'
      externalOffer:
        type: string
        description: 'Set to ''SI'', if this is an external SI offer; set to ''DIG'', if this is a ''smart access'' offer; otherwise empty; new with store/v3 api'
      autoRenewableBy:
        type: string
        description: new with store/v3 api
      prolongationDate:
        type: string
        format: date-time
        description: prolongation date of autoRenewable product
      autoRenewStatus:
        type: string
        description: the status of autoRenewable product
        enum:
          - ACTIVE
          - CANCELED
          - RENEWAL_IN_PROGRESS
          - UNKNOWN
    description: base offer (wrapper offer) describing Connected Drive offers with different contract periods
  PreconditionStatusDO:
    type: object
    properties:
      status:
        type: string
        enum:
          - PAYMENT_NOT_COMPLETE
          - PAYMENT_INVALID
          - PROFILE_NOT_COMPLETE
          - VEHICLE_NOT_MAPPED
          - VEHICLE_NOT_CONFIRMED
  PriceDO:
    type: object
    properties:
      currency:
        type: string
        enum:
          - USD
          - CAD
          - EUR
          - PLN
          - NOK
          - DKK
          - CZK
          - CHF
          - SEK
          - JPY
          - KRW
          - TWD
          - AUD
          - TRY
          - NZD
          - SGD
          - CNY
          - GBP
          - MYR
          - ZAR
          - MXN
          - RUB
          - THB
      price:
        type: number
        format: float
      priceType:
        type: string
        enum:
          - GROSS
          - NET
          - TAX
  PriceV2DO:
    type: object
    properties:
      currency:
        type: string
        enum:
          - USD
          - CAD
          - EUR
          - PLN
          - NOK
          - DKK
          - CZK
          - CHF
          - SEK
          - JPY
          - KRW
          - TWD
          - AUD
          - TRY
          - NZD
          - SGD
          - CNY
          - GBP
          - MYR
          - ZAR
          - MXN
          - RUB
          - THB
      price:
        type: number
        format: float
      priceType:
        type: string
        enum:
          - GROSS
          - NET
          - TAX
      formattedPriceAndCurrency:
        type: string
  ProfileAddressDO:
    type: object
    properties:
      salutation:
        type: string
      academicTitle1:
        type: string
      academicTitle2:
        type: string
      namePrefix1:
        type: string
      namePrefix2:
        type: string
      nameSuffix:
        type: string
      nameSupplement:
        type: string
      firstName:
        type: string
      alternateFirstName:
        type: string
      lastName:
        type: string
      alternateLastName:
        type: string
      middleName:
        type: string
      alternateMiddleName:
        type: string
      country:
        type: string
      coName:
        type: string
      company:
        type: string
      alternateCompany:
        type: string
      companyDepartment:
        type: string
      alternateCompanyDepartment:
        type: string
      streetName:
        type: string
      addrLine1:
        type: string
      addrLine2:
        type: string
      addrLine3:
        type: string
      streetNumber:
        type: string
      streetNumberSuffix:
        type: string
      poBox:
        type: string
      cityName:
        type: string
      postalCode:
        type: string
      district:
        type: string
      region:
        type: string
      location:
        type: string
      buildingName:
        type: string
      floor:
        type: string
      room:
        type: string
      privatePhoneNumber:
        type: string
      officePhoneNumber:
        type: string
      mobilePhoneNumber:
        type: string
  RangeSpiderResponseDO:
    type: object
    properties:
      location:
        description: 'location: The location of the vehicle.'
        $ref: '#/definitions/CoordinateDO'
      innerRing:
        type: array
        description: 'innerRing: The list of coordinates that define the inner ring.'
        items:
          $ref: '#/definitions/CoordinateDO'
      outerRing:
        type: array
        description: 'outerRing: The list of coordinates that define the outer ring.'
        items:
          $ref: '#/definitions/CoordinateDO'
  RecentValuesDO:
    type: object
    required:
      - recentValueType
      - valueList
    properties:
      recentValueType:
        type: string
        enum:
          - CUSTOMER
          - REASON
          - ADDRESS
          - DRIVER
          - REMARK
      valueList:
        type: array
        items:
          type: string
  ReductionOfChargeCurrentType:
    type: object
    required:
      - end
      - start
    properties:
      start:
        $ref: '#/definitions/TimeStampShortType'
      end:
        $ref: '#/definitions/TimeStampShortType'
  RemoteServiceEventDO:
    type: object
    required:
      - created
      - lastUpdate
      - remoteServiceStatus
      - remoteServiceType
    properties:
      remoteServiceType:
        type: string
        enum:
          - RDL
          - RDU
          - RHB
          - RLF
          - RCN
          - RCT
          - VF
          - RCP
      remoteServiceStatus:
        type: string
        enum:
          - PENDING
          - NGTP_ERROR
          - IDS_ERROR
          - CDP_ERROR
          - DELIVERED_TO_VEHICLE
          - EXECUTED
          - NOT_EXECUTED
          - TIMEOUT
          - NOT_AVAILABLE
      eventId:
        type: string
      created:
        type: string
        format: date-time
      lastUpdate:
        type: string
        format: date-time
      actionTime:
        type: string
        format: date-time
      actionTimeHour:
        type: integer
        format: int32
      actionTimeMinutes:
        type: integer
        format: int32
    xml:
      name: remoteServiceEvent
  RemoteServiceEventsDO:
    type: object
    required:
      - channel
      - creationTime
      - eventId
      - executionTimeStamp
      - status
    properties:
      eventId:
        type: string
      creationTime:
        type: integer
        format: int64
      status:
        type: string
        enum:
          - SUCCESS
          - CANCELLED
          - PENDING
          - ERROR
      remoteServiceType:
        type: string
        enum:
          - RDL
          - RDU
          - RLF
          - RHB
          - RCT
          - RCN
          - VF
          - RCP
      executionTimeStamp:
        type: integer
        format: int64
      channel:
        type: string
        enum:
          - PORTAL
          - MOBILE_APP
          - CCC
      parameters:
        type: string
  RemoteServiceExecutionStatusDO:
    type: object
    properties:
      status:
        type: string
        enum:
          - OK
          - ERROR
          - ORDER_IN_PROGRESS
  RemoteServiceOperationDO:
    type: object
    properties:
      operation:
        type: string
        enum:
          - ACTIVATE
          - DEACTIVATE
  RemoteServiceRCTDO:
    type: object
    required:
      - climateTimer
    properties:
      climateTimer:
        description: 'This parameter should only be set when RemoteServiceType is ''RCT''. For deactivating an already set time, send a timer with  ''timerEnabled=false'''
        $ref: '#/definitions/TimerDO'
  RemoteServiceResponseDO:
    type: object
    properties:
      remoteServiceEvent:
        $ref: '#/definitions/RemoteServiceEventDO'
      nextRequestInSec:
        type: integer
        format: int32
  RemoteServiceResultDO:
    type: object
    required:
      - date
      - eventID
      - state
      - vin
    properties:
      eventID:
        type: string
      vin:
        type: string
      state:
        type: string
        enum:
          - STARTED
          - NACK
          - ACK
          - TIMEOUT
          - UNKNOWN
          - ERROR
      date:
        type: string
        format: date-time
    xml:
      name: remoteServiceResult
  ReportFilterDO:
    type: object
    required:
      - endDate
      - reportType
      - startDate
    properties:
      reportType:
        type: string
        enum:
          - FINANCIAL
          - INDIVIDUAL
      startDate:
        type: string
        format: date-time
      endDate:
        type: string
        format: date-time
      driveType:
        type: string
        description: relevant only for reportType=INDIVIDUAL
        enum:
          - PRIVATE
          - HOME_WORK
          - OFFICE
      driver:
        type: string
        description: relevant only for reportType=INDIVIDUAL; maxLength = 50
      reason:
        type: string
        description: relevant only for reportType=INDIVIDUAL; maxLength = 100
      customerVisited:
        type: string
        description: relevant only for reportType=INDIVIDUAL; maxLength = 100
      showGeopos:
        type: boolean
        default: false
  ReportHistoryDO:
    type: object
    required:
      - created
      - endDate
      - id
      - reportType
      - showPrivateAddressData
      - startDate
      - userRemark
    properties:
      created:
        type: string
        format: date-time
      startDate:
        type: string
        format: date-time
      endDate:
        type: string
        format: date-time
      reportType:
        type: string
        enum:
          - FINANCIAL
          - INDIVIDUAL
      userRemark:
        type: string
        description: report name
      customerVisited:
        type: string
      driver:
        type: string
      driveType:
        type: string
        enum:
          - PRIVATE
          - HOME_WORK
          - OFFICE
      reason:
        type: string
      showPrivateAddressData:
        type: boolean
        default: false
      id:
        type: integer
        format: int64
  ReportParamsDO:
    type: object
    required:
      - addReportHistory
      - endDate
      - reportType
      - startDate
      - userRemark
    properties:
      reportType:
        type: string
        enum:
          - FINANCIAL
          - INDIVIDUAL
      startDate:
        type: string
        format: date-time
      endDate:
        type: string
        format: date-time
      driveType:
        type: string
        description: relevant only for reportType=INDIVIDUAL
        enum:
          - PRIVATE
          - HOME_WORK
          - OFFICE
      driver:
        type: string
        description: relevant only for reportType=INDIVIDUAL; maxLength = 50
      reason:
        type: string
        description: relevant only for reportType=INDIVIDUAL; maxLength = 100
      customerVisited:
        type: string
        description: relevant only for reportType=INDIVIDUAL; maxLength = 100
      showGeopos:
        type: boolean
        default: false
      userRemark:
        type: string
        description: maxLength = 80
      addReportHistory:
        type: boolean
        default: false
  ResourceDO:
    type: object
    properties:
      name:
        type: string
      services:
        type: array
        items:
          $ref: '#/definitions/ServiceDO'
  RetrieveOfferDO:
    type: object
    properties:
      storeOffer:
        type: array
        description: storeOffer
        items:
          $ref: '#/definitions/SubOfferDO'
      policiesToShow:
        type: array
        description: policiesToShow
        items:
          type: string
    description: Model describing offer details
  ReviewDO:
    type: object
    properties:
      authorname:
        type: string
      rating:
        type: string
      text:
        type: string
      title:
        type: string
      website:
        type: string
        format: url
      time:
        type: string
      profilePhotoUrl:
        type: string
      language:
        type: string
      relativeTimeDescription:
        type: string
  ReviewListDO:
    type: object
    properties:
      review:
        type: array
        items:
          $ref: '#/definitions/ReviewDO'
      starRating:
        type: number
        format: double
      total:
        type: integer
        format: int32
    xml:
      name: reviewlist
  SaveLoginSettingsDO:
    type: object
    properties:
      loginConfig:
        type: string
        enum:
          - CONFIDENTIAL_APPS
          - WML_BON_START
          - AUTO_LOGIN
  ScoreDO:
    type: object
    required:
      - attrName
      - maxValue
      - minValue
    properties:
      attrName:
        type: string
        enum:
          - ACTUAL_DISTANCE_WITHOUT_CHARGING
          - AVERAGE_ELECTRIC_CONSUMPTION
          - AVERAGE_RECUPERATED_ENERGY_PER_100_KM
          - COMBINED_AVG_CONSUMED_LITERS_OVERALL
          - CUMULATED_ELECTRIC_DRIVEN_DISTANCE
          - LASTTRIP_DELTA_KM
          - LASTTRIP_DELTA_TIME
          - LASTTRIP_RATIO_ELECTRIC_DRIVEN_DISTANCE
          - LASTTRIP_TIME_SEGMENT_END
          - LONGEST_DISTANCE_WITHOUT_CHARGING
          - SAVED_LITERS_OVERALL
          - TIMESTAMP_STATISTICS_RESET
          - SAVED_CO2
          - SAVED_CO2_GREEN_ENERGY
      attrUnit:
        type: string
        enum:
          - KWH
          - KWH_PER_100KM
          - MLS_PER_KWH
          - KM_PER_KWH
          - L_PER_100KM
          - MPG
          - KM_PER_L
          - KM
          - KG
          - LITER
          - MILE
          - MINUTES
          - PERCENTAGE
          - TIMESTAMP_STATISTICS_RESET
          - NONE
      minValue:
        type: number
        format: float
      averageValue:
        type: number
        format: float
      maxValue:
        type: number
        format: float
      lifeTime:
        type: number
        format: float
  ScoreListDO:
    type: object
    required:
      - characteristicList
      - efficiencyQuotient
      - lastTripList
      - modelType
    properties:
      communitySwitch:
        type: boolean
        default: false
      modelType:
        type: string
        enum:
          - I3
          - I8
          - PHEV
          - OTHER
      scoreList:
        type: array
        items:
          $ref: '#/definitions/ScoreDO'
      lastTripList:
        type: array
        items:
          $ref: '#/definitions/LastTripDO'
      lifeTimeList:
        type: array
        items:
          $ref: '#/definitions/LifeTimeDO'
      efficiencyQuotient:
        type: integer
        format: int32
      characteristicList:
        type: array
        items:
          $ref: '#/definitions/CharacteristicDO'
  SearchOffersAndPortfoliosDO:
    type: object
    properties:
      storeMasterOffer:
        type: array
        items:
          $ref: '#/definitions/MasterOfferDO'
      storePortfolio:
        type: array
        items:
          $ref: '#/definitions/PortfolioDO'
  SearchOffersByVinDO:
    type: object
    required:
      - market
      - status
      - storeMasterOffer
    properties:
      market:
        type: string
        description: 'market (country) vehicle is associated to, may differ from market of customer'
      storeMasterOffer:
        type: array
        description: list of offers (master offer with sub offers) that can be booked for this vin
        items:
          $ref: '#/definitions/MasterOfferDO'
      status:
        type: string
        description: status
        enum:
          - NOTFOUND
          - VEHICLE_NOT_BMW
  SendToCarDataDO:
    type: object
    required:
      - allowsExternal
      - vehicleStatus
    properties:
      vehicleStatus:
        type: array
        items:
          $ref: '#/definitions/VehicleStatusDO'
      allowsExternal:
        type: boolean
        default: false
  ServiceDO:
    type: object
    properties:
      name:
        type: string
      status:
        type: string
        enum:
          - ACTIVE
          - INACTIVE
      portfolioId:
        type: string
  ServicePartnerAddressDO:
    type: object
    properties:
      dealer:
        $ref: '#/definitions/DealerDataDO'
      lat:
        type: number
        format: double
      lng:
        type: number
        format: double
  ServicePartnerIDsDO:
    type: object
    required:
      - partnerNumber
      - subsidiaryNumber
    properties:
      partnerNumber:
        type: string
      subsidiaryNumber:
        type: string
  ServicePartnerStatusDO:
    type: object
    properties:
      status:
        type: string
        enum:
          - OK
          - FAILURE
          - ANOTHER_SERVICEPARTNER_ORDER_IN_PROGRESS
          - SERVICEPARTNER_COUNTRY_SELECT_FAILURE
  SettingsDO:
    type: object
    required:
      - firstTimeUsage
      - licensePlate
      - notification
      - showGeoPos
    properties:
      licensePlate:
        type: string
        description: maxLength = 20
      notification:
        type: string
        enum:
          - TWO_DAYS
          - FIVE_DAYS
          - SEVEN_DAYS
          - TWO_WEEKS
          - FOUR_WEEKS
          - NONE
      showGeoPos:
        type: boolean
        default: false
      firstTimeUsage:
        type: boolean
        default: false
  SpeechControlVinDO:
    type: object
    properties:
      vin:
        type: string
  SpeechControlWordDO:
    type: object
    properties:
      word:
        type: string
  SplitDriveDO:
    type: object
    required:
      - remark
      - splitIds
    properties:
      splitIds:
        type: array
        items:
          type: integer
          format: int64
      remark:
        type: string
        description: maxLength = 80
  SplitErrorDO:
    type: object
    required:
      - error
    properties:
      error:
        type: string
        enum:
          - SPLITIDS_MANDATORY
          - MAXLEN_EXCEEDED
          - NOT_A_MERGED_DRIVE
          - NOT_ALL_MERGED_DRIVES
          - DRIVEID_NOT_FOUND
  SubOfferDO:
    type: object
    required:
      - masterOfferCode
      - offerCode
      - type
    properties:
      offerCode:
        type: string
      price:
        type: number
        format: float
      priceType:
        type: string
        enum:
          - GROSS
          - NET
          - TAX
      currency:
        type: string
        enum:
          - USD
          - CAD
          - EUR
          - PLN
          - NOK
          - DKK
          - CZK
          - CHF
          - SEK
          - JPY
          - KRW
          - TWD
          - AUD
          - TRY
          - NZD
          - SGD
          - CNY
          - GBP
          - MYR
          - ZAR
          - MXN
          - RUB
          - THB
      formattedPriceAndCurrency:
        type: string
      contractPeriod:
        type: integer
        format: int32
      masterOfferCode:
        type: string
      parentHierarchy:
        type: array
        items:
          type: string
      type:
        type: string
        enum:
          - 'OFF'
          - PROD
          - COMP
          - SUB
          - APP
          - ALL
      termsAndConditions:
        type: boolean
        default: false
      offerPeriod:
        type: integer
        format: int32
      offerPeriodUnit:
        type: string
        enum:
          - DAYS
          - MONTHS
          - UNKNOWN
      contractPeriodUnit:
        type: string
        enum:
          - DAYS
          - MONTHS
          - UNKNOWN
      visible:
        type: boolean
        default: false
      freeTrial:
        type: boolean
        default: false
      displayOnly:
        type: boolean
        description: 'if true, this offer is displayed in the store but cannot be bought in the store (only at the dealer); attribute set for offers only not for apps'
        default: false
      activationRequired:
        type: boolean
        description: 'if true, full-mapping is required to use services of this offer'
        default: false
      extOfferCat:
        type: string
        description: 'best type, only set for service inclusive offers (external offers); example best types: B, S, F, R, A, C, E; new with store/v3 api'
      extOfferSubCat:
        type: string
        description: 'SA code (Sonderausstattung), only set for service inclusive offers (external offers); new with store/v3 api'
      upgradeCodeFrom:
        type: string
        description: 'SA code (Sonderausstattung) and best type of previously booked service inclusive offer (external offer), only set for service inclusive offers (external offers), only set, if this is an upgrade offer; new with store/v3 api'
      endMileage:
        type: string
        description: 'endmileage of this service inclusive offer (external offer), only set for service inclusive offers (external offers); new with store/v3 api'
      autoRenewableBy:
        type: string
        description: new with store/v3 api
  SubmitOrderStatusV2DO:
    type: object
    required:
      - status
    properties:
      status:
        type: string
        description: status of order 'Success' or 'Failure'
        enum:
          - SUCCESS
          - FAILURE
          - ORDER_IN_PROGRESS
          - MAPPING_IN_PROGRESS
          - POLICY_AGREEMENT_FAILURE
          - IS_WAIVED
      orderId:
        type: string
        description: 'id of submitted order, for reference purposes'
      vin:
        type: string
        description: vin
      errorMsg:
        type: string
        description: errorMsg
      processId:
        type: integer
        format: int64
        description: processId
    description: 'Model describing the status of an order for one vin, after customer submitted shopping basket'
  TaxnumberDO:
    type: object
    required:
      - taxnumber
    properties:
      taxnumber:
        type: string
        description: taxnumber/citizennumber or other similar number
  TaxnumberInformationDO:
    type: object
    properties:
      tax:
        $ref: '#/definitions/TaxnumberDO'
      missingAttributesAndConditionsTax:
        $ref: '#/definitions/ValidationAttributesAndConditionsDO'
  TechnicalDataDO:
    type: object
    required:
      - key
      - value
    properties:
      key:
        type: string
        enum:
          - CONSUMPTION_COMBINED_MAX
          - CONSUMPTION_COMBINED_MIN
          - CONSUMPTION_COMBINED_US
          - CONSUMPTION_EXTRA_URBAN_MAX
          - CONSUMPTION_EXTRA_URBAN_MIN
          - CONSUMPTION_EXTRA_URBAN_US
          - CONSUMPTION_URBAN_MAX
          - CONSUMPTION_URBAN_MIN
          - CONSUMPTION_URBAN_US
          - ELECTRIC_ENGINE_OUTPUT
          - ELECTRIC_ENGINE_TORQUE_COMBINED
          - ELECTRIC_ENGINE_TORQUE_MAX
          - ENERGY_CONSUMPTION
          - ENERGY_CONSUMPTION_US
          - ENGINE_BORE
          - ENGINE_BORE_US
          - ENGINE_CAPACITY
          - ENGINE_CAPACITY_US
          - ENGINE_COMPRESSION
          - ENGINE_CYLINDERS
          - ENGINE_OUTPUT_MAX_HP
          - ENGINE_OUTPUT_MAX_KW
          - ENGINE_SPEED_OUTPUT_MAX
          - ENGINE_SPEED_TORQUE_MAX
          - ENGINE_STROKE
          - ENGINE_STROKE_US
          - ENGINE_TORQUE_MAX
          - ENGINE_VALVES
          - PERFORMANCE_ACCELERATION
          - PERFORMANCE_ACCELERATION_US
          - PERFORMANCE_TOP_SPEED
          - PERFORMANCE_TOP_SPEED_US
          - TANK_CAPACITY
          - WEIGHT_MAX
          - WEIGHT_MAX_US
          - WEIGHT_PERMITTED_LOAD
          - WEIGHT_PERMITTED_LOAD_FRONT
          - WEIGHT_PERMITTED_LOAD_FRONT_US
          - WEIGHT_PERMITTED_LOAD_REAR
          - WEIGHT_PERMITTED_LOAD_REAR_US
          - WEIGHT_PERMITTED_LOAD_US
          - WEIGHT_UNLADEN
          - WEIGHT_UNLADEN_US
      value:
        type: string
  TimeStampShortType:
    type: object
    properties:
      hours:
        type: integer
        format: int32
      minutes:
        type: integer
        format: int32
  TimerDO:
    type: object
    required:
      - timerEnabled
    properties:
      timerEnabled:
        type: boolean
        default: false
      departureTime:
        type: string
        description: 'time format ''HH:mm'''
      weekdays:
        type: string
        enum:
          - MONDAY
          - TUESDAY
          - WEDNESDAY
          - THURSDAY
          - FRIDAY
          - SATURDAY
          - SUNDAY
  TokenDO:
    type: object
    required:
      - token
    properties:
      token:
        type: string
        description: the encrypted delete token from email to customer
  TripDO:
    type: object
    required:
      - id
      - kilometer
    properties:
      id:
        type: integer
        format: int64
      dateTime:
        type: string
        format: date-time
      address:
        type: string
      kilometer:
        type: number
        format: double
      lat:
        type: number
        format: double
      lon:
        type: number
        format: double
  TwoTimeTimerType:
    type: object
    required:
      - chargingPreference
      - climatisationOn
      - departureTime1
      - departureTime2
      - immediateCharging
      - timer1Active
      - timer2Active
    properties:
      timer1Active:
        type: string
        enum:
          - NO_ACTION
          - ACTIVATE
          - DEACTIVATE
      departureTime1:
        $ref: '#/definitions/TimeStampShortType'
      timer2Active:
        type: string
        enum:
          - NO_ACTION
          - ACTIVATE
          - DEACTIVATE
      departureTime2:
        $ref: '#/definitions/TimeStampShortType'
      climatisationOn:
        type: string
        enum:
          - IS_FALSE
          - IS_TRUE
          - IS_UNUSED
          - IS_UNKNOWN
      reductionOfChargeCurrent:
        $ref: '#/definitions/ReductionOfChargeCurrentType'
      immediateCharging:
        type: string
        enum:
          - IS_FALSE
          - IS_TRUE
          - IS_UNUSED
          - IS_UNKNOWN
      chargingPreference:
        type: string
        enum:
          - NO_PRESELECTION
          - CHARGING_WINDOW
          - SMART_CHARGING
  Update:
    type: object
    properties:
      name:
        type: string
      newer:
        type: boolean
        default: false
  UpdateMappingDO:
    type: object
    required:
      - licensePlate
    properties:
      licensePlate:
        type: string
  UpdateVehicleDO:
    type: object
    properties:
      activationCode:
        type: string
      update:
        type: array
        items:
          $ref: '#/definitions/Update'
  UploadImageStatusDO:
    type: object
    properties:
      status:
        type: string
        enum:
          - IMAGE_LIMIT_EXCEEDED
          - IMAGE_NAME_TOO_LARGE
          - IMAGE_FILE_TOO_LARGE
          - UNSUPPORTED_FILE_TYPE
  UrlAngleDO:
    type: object
    properties:
      url:
        type: string
      angle:
        type: integer
        format: int32
  UrlDO:
    type: object
    required:
      - url
    properties:
      url:
        type: string
  ValidateStoreBasketDO:
    type: object
    required:
      - offerLineItems
      - valid
      - vin
    properties:
      vin:
        type: string
        description: vin this shopping basket refers to
      valid:
        type: boolean
        description: 'denotes, whether the overall shopping basket is valid'
        default: false
      totalPrices:
        type: array
        description: 'the total price of all offers in the shopping basket, only set if shopping basket is valid'
        items:
          $ref: '#/definitions/PriceV2DO'
      offerLineItems:
        type: array
        description: 'the valid offers in this shopping basket (in public store: the offers technically compatible with the vin; contents of shopping basket may become invalid if customer logs in)'
        items:
          $ref: '#/definitions/OfferLineItemDO'
      offerSuggestions:
        type: array
        description: 'the offers that must be added to the basket in order to make the shopping basket valid; this list contains an offer, if the parentHierarchy is not fulfilled'
        items:
          $ref: '#/definitions/OfferSuggestionItemDO'
      offerDeletions:
        type: array
        description: the offers that must be deleted from the basket in order to make the shopping basket valid; this list contain the offers that fail the vin compatibility check
        items:
          $ref: '#/definitions/OfferDeletionItemDO'
      mappingStatus:
        type: string
        description: 'only set, if shopping basket is valid'
        enum:
          - CONFIRMED
          - LIGHT
          - LIGHT_MAPPING_POSSIBLE
          - FULL_MAPPING_REQUIRED
          - CALLCENTER_FOR_MAPPING
      taxRate:
        type: number
        format: double
        description: the Tax Rate for the totalPrice
      referenceTimestamp:
        type: string
        description: reference time stamp for service inclusive offers (external offers); this validation timestamp is needed when ordering the products that are in this basket
  ValidateStoreBasketV3DO:
    type: object
    required:
      - companyCodeId
      - offerLineItems
      - valid
      - vin
    properties:
      vin:
        type: string
        description: vin this shopping basket refers to
      valid:
        type: boolean
        description: 'denotes, whether the overall shopping basket is valid'
        default: false
      totalPrices:
        type: array
        description: 'the total price of all offers in the shopping basket, only set if shopping basket is valid'
        items:
          $ref: '#/definitions/PriceV2DO'
      offerLineItems:
        type: array
        description: 'the valid offers in this shopping basket (in public store: the offers technically compatible with the vin; contents of shopping basket may become invalid if customer logs in)'
        items:
          $ref: '#/definitions/OfferLineItemDO'
      offerSuggestions:
        type: array
        description: 'the offers that must be added to the basket in order to make the shopping basket valid; this list contains an offer, if the parentHierarchy is not fulfilled'
        items:
          $ref: '#/definitions/OfferSuggestionItemDO'
      offerDeletions:
        type: array
        description: the offers that must be deleted from the basket in order to make the shopping basket valid; this list contain the offers that fail the vin compatibility check
        items:
          $ref: '#/definitions/OfferDeletionItemDO'
      mappingStatus:
        type: string
        description: 'only set, if shopping basket is valid'
        enum:
          - CONFIRMED
          - LIGHT
          - LIGHT_MAPPING_POSSIBLE
          - FULL_MAPPING_REQUIRED
          - CALLCENTER_FOR_MAPPING
          - WAIVED
      taxRate:
        type: number
        format: double
        description: the Tax Rate for the totalPrice
      referenceTimestamp:
        type: string
        format: date-time
        description: reference time stamp for service inclusive offers (external offers); this validation timestamp is needed when ordering the products that are in this basket
      companyCodeId:
        type: string
        description: the companyCodeId (market) of the vehicle. This value is used as input by FuPo to ask for price of shopping basket in BUFFET.
  ValidationAttributeDO:
    type: object
    properties:
      name:
        type: string
      mandatory:
        type: boolean
        default: false
      codetable:
        type: string
      minlength:
        type: integer
        format: int32
      maxlength:
        type: integer
        format: int32
      modus:
        type: string
        enum:
          - MAPPING
          - STORE
      pattern:
        type: string
      enum:
        type: array
        items:
          type: string
  ValidationAttributesAndConditionsDO:
    type: object
    properties:
      attributes:
        $ref: '#/definitions/ValidationAttributesDO'
      conditions:
        $ref: '#/definitions/ValidationConditionsDO'
    xml:
      name: missingAttributesAndConditions
  ValidationAttributesDO:
    type: object
    properties:
      attribute:
        type: array
        items:
          $ref: '#/definitions/ValidationAttributeDO'
  ValidationConditionsDO:
    type: object
    properties:
      condition:
        type: array
        items:
          type: string
  VehicleDO:
    type: object
    properties:
      vin:
        type: string
      hashedvin:
        type: string
      mapped:
        type: boolean
        default: false
  VehicleListDO:
    type: object
    properties:
      vehicles:
        type: array
        items:
          $ref: '#/definitions/VehicleDO'
      accountmapped:
        type: boolean
        default: false
  VehicleMappingDataDO:
    type: object
    required:
      - policyId
    properties:
      licensePlate:
        type: string
        description: licensePlate
      policyId:
        type: string
        description: policyId
      subscriberStatus:
        type: string
        description: subscriberStatus
        enum:
          - PRIMARY
          - SECONDARY
    description: 'Contains all data necessary to map a vehicle, the subscriberStatus is only available for US, if not set, the subscriber status will be PRIMARY'
  VehicleMessageDO:
    type: object
    properties:
      description:
        type: string
      text:
        type: string
      id:
        type: integer
        format: int32
      status:
        type: string
        enum:
          - OK
          - PENDING
          - OVERDUE
          - INVALID
          - 'NULL'
      messageType:
        type: string
        enum:
          - CCM
          - CBS
      date:
        type: string
      unitOfLengthRemaining:
        type: string
  VehicleProfileInfoDO:
    type: object
    required:
      - lastChange
      - profileName
    properties:
      profileId:
        type: integer
        format: int64
      profileName:
        type: string
        description: profileName (maxLength = 50)
      lastChange:
        type: string
        format: date-time
        description: lastChange
  VehicleRelationshipDO:
    type: object
    required:
      - connectivityStatus
      - registrationNumber
      - relationshipStatus
      - remoteServiceStatus
      - vin
    properties:
      vin:
        type: string
        description: vin
      registrationNumber:
        type: string
        description: registrationNumber
      relationshipStatus:
        type: string
        description: relationshipStatus
        enum:
          - CONFIRMED
          - UNCONFIRMED
      remoteServiceStatus:
        type: string
        description: remoteServiceStatus
        enum:
          - INACTIVE
          - ACTIVE
          - NOT_BOOKED
      connectivityStatus:
        type: string
        description: connectivityStatus
        enum:
          - ACTIVE
          - WAIVED
      subscriberStatus:
        type: string
        description: subscriberStatus
        enum:
          - PRIMARY
          - SECONDARY
      hasSecondaryRelation:
        type: boolean
        description: hasSecondaryRelation
        default: false
    description: 'Contains data describing a mapping-relationship between a customer and a vin, for the US hub there are two additional attributes: subscriberStatus and hasSecondaryRelationtion'
  VehicleRelationshipV3EMEADO:
    type: object
    required:
      - confirmationType
      - connectivityStatus
      - registrationNumber
      - relationshipStatus
      - remoteServiceStatus
      - vin
    properties:
      vin:
        type: string
        description: vin
      registrationNumber:
        type: string
        description: registrationNumber
      relationshipStatus:
        type: string
        description: 'relationshipStatus: The following mapping status are available: CONFIRMED (the vehicle relationship is fully confirmed with the token process); UNCONFIRMED (mapping in progress, the token has been sent to the vehicle);PENDING (the relationship is pending, token has been set to confirm vehicle relationship, but confirmation process not yet finished in backend)LIGHT_TOKEN (status for light-mapping only; token has been sent to previously light-mapped vehicle, but has not yet been confirmed)'
        enum:
          - CONFIRMED
          - UNCONFIRMED
          - PENDING
          - LIGHT_TOKEN
      remoteServiceStatus:
        type: string
        description: 'remoteServiceStatus : The following status are available: INACTIVE: remote services not activated; ACTIVE: remote services activated; NOT_BOOKED: the given vehicle does not have the remote service.'
        enum:
          - INACTIVE
          - ACTIVE
          - NOT_BOOKED
      connectivityStatus:
        type: string
        description: 'connectivityStatus : The following status are available: ACTIVE: SIM card active; WAIVED: SIM card inactive.'
        enum:
          - ACTIVE
          - WAIVED
      confirmationType:
        type: string
        description: 'confirmationType : The following status are available (EMEA only): FULL: fully confirmed vehicle; LIGHT: light mapped vehicle (not confirmed by token process), vehicle cannot receive MyInfo messages, therefore full mapping process not possible; LIGHT_FULLMAPPABLE: light mapped vehicle (not confirmed by token process), vehicle has MyInfo capability, so that full mapping process is possible.'
        enum:
          - FULL
          - LIGHT
          - LIGHT_FULLMAPPABLE
      tokenId:
        type: string
        description: 'tokenId (ALM CR 24629 / 24734): When the security token for the full-mapping process is sent to the customer, a separate token ID is generated. In case the customer maps several vehicles at the same time, or the customer resends the security token several times to the same vehicle, the customer needs to identify, which security token is the currently valid token. Therefore, the tokenId is also send with the same message as  the security token to the vehicle. In the customer portal the customer is then told, which security token is valid for which mapping process by means of the tokenId.'
    description: Contains data describing a mapping-relationship between a customer and a vin
  VehicleRelationshipsDO:
    type: object
    properties:
      vehicleRelationship:
        type: array
        items:
          $ref: '#/definitions/VehicleRelationshipDO'
  VehicleRelationshipsV3EMEADO:
    type: object
    properties:
      vehicleRelationship:
        type: array
        items:
          $ref: '#/definitions/VehicleRelationshipV3EMEADO'
    description: list of vehicle relationship status (v3)
  VehicleStaticBasicDetailsDO:
    type: object
    properties:
      series:
        type: string
      basicType:
        type: string
      bodyType:
        type: string
      brand:
        type: string
      modelName:
        type: string
      vin:
        type: string
    description: Excerpt of existing ResponseObject 'Userprofile.getVehicleDetailsV2'
  VehicleStaticBusinessUnitDO:
    type: object
    properties:
      country:
        type: string
      brandName:
        type: string
      salesPartnerDPNumber:
        type: string
      salesPartnerOutletNumber:
        type: string
      companyCodeId:
        type: string
    description: Excerpt of existing ResponseObject 'VehicleStaticBusinessUnitDO'
  VehicleStaticDetailsDO:
    type: object
    properties:
      series:
        type: string
      basicType:
        type: string
      bodyType:
        type: string
      brand:
        type: string
      modelName:
        type: string
      vin:
        type: string
      licensePlate:
        type: string
      modelYearNA:
        type: string
      dcOnly:
        type: boolean
        default: false
      hasNavi:
        type: boolean
        default: false
      hasSunRoof:
        type: boolean
        default: false
      doorCount:
        type: integer
        format: int32
      maxFuel:
        type: string
      hasRex:
        type: boolean
        default: false
      steering:
        type: string
        enum:
          - LEFT
          - RIGHT
      driveTrain:
        type: string
        enum:
          - CONV
          - BEV
          - HEV
          - BEV_REX
          - PHEV
      supportedChargingModes:
        type: array
        items:
          type: string
          enum:
            - AC_LOW
            - AC_HIGH
            - DC
    description: Excerpt of existing ResponseObject 'Userprofile.getVehicleDetailsV2'
  VehicleStatusDO:
    type: object
    required:
      - status
      - vin
    properties:
      vin:
        type: string
        description: vin
      status:
        type: string
        description: status
        enum:
          - ACTIVE
          - INACTIVE
  WalletSessionDO:
    type: object
    required:
      - cancelURL
      - failureURL
      - stylesheetUrl
      - successURL
    properties:
      successURL:
        type: string
      cancelURL:
        type: string
      failureURL:
        type: string
      stylesheetUrl:
        type: string
      cardId:
        type: string
        description: 'needed, if update should be done'
  WeatherForecastDO:
    type: object
    properties:
      location:
        $ref: '#/definitions/LocationDO'
      temperatureScale:
        type: string
      publishDate:
        type: string
        format: date-time
      forecastDescription:
        type: string
      forecastCount:
        type: integer
        format: int32
      forecasts:
        $ref: '#/definitions/ForecastListDO'
      provider:
        type: string
    xml:
      name: weatherforecast
  WeekTimerType:
    type: object
    required:
      - chargingPreference
      - climatisationOn
      - departureTimes
      - immediateCharging
    properties:
      departureTimes:
        $ref: '#/definitions/ListOfDepartureTimesType'
      climatisationOn:
        type: string
        enum:
          - IS_FALSE
          - IS_TRUE
          - IS_UNUSED
          - IS_UNKNOWN
      reductionOfChargeCurrent:
        $ref: '#/definitions/ReductionOfChargeCurrentType'
      immediateCharging:
        type: string
        enum:
          - IS_FALSE
          - IS_TRUE
          - IS_UNUSED
          - IS_UNKNOWN
      chargingPreference:
        type: string
        enum:
          - NO_PRESELECTION
          - CHARGING_WINDOW
          - SMART_CHARGING
  WeekdaysType:
    type: object
    required:
      - weekday
    properties:
      weekday:
        type: array
        items:
          type: string
          enum:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
  XmlVersionType:
    type: object
    properties:
      minor:
        type: integer
        format: int32
      major:
        type: integer
        format: int32
